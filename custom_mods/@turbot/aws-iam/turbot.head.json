{
  "$id": "tmod:@turbot/aws-iam",
  "title": "@turbot/aws-iam",
  "author": "Turbot HQ, Inc",
  "version": "5.11.2",
  "license": "For LICENSE see https://turbot.com/license",
  "peerDependencies": {
    "@turbot/aws": "^5.0.0",
    "@turbot/turbot": "^5.22.0",
    "@turbot/turbot-iam": "^5.1.0"
  },
  "scripts": {
    "prepack": "./build.sh"
  },
  "data": [
    {
      "permission": "access-analyzer:ApplyArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:CreateAccessPreview",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:CreateAnalyzer",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:CreateArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:DeleteAnalyzer",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:DeleteArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetAccessPreview",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetAnalyzedResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetAnalyzer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetArchiveRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetFinding",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAccessPreviewFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAccessPreviews",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAnalyzedResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAnalyzers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListArchiveRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:StartResourceScan",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:UpdateArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:UpdateFindings",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ValidatePolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:AddClientIDToOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:AddRoleToInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "CreateOrUpdate",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:AddUserToGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:AttachGroupPolicy",
      "grant": "Owner",
      "resourceType": "groupPolicyAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:AttachRolePolicy",
      "grant": "Owner",
      "resourceType": "rolePolicyAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:AttachUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userPolicyAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:ChangePassword",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Users are not allowed to change their own password. Owners may change passwords for users through *LoginProfile permissions."
    },
    {
      "permission": "iam:CreateAccessKey",
      "grant": "Whitelist",
      "resourceType": "accessKey",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAccessKeyAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:CreateAccountAlias",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage the AWS account alias."
    },
    {
      "permission": "iam:CreateGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:CreateInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:CreateLoginProfile",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserPasswordAdministration",
      "help": "Optionally Owners can create passwords for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:CreateOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:CreatePolicy",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:CreatePolicyVersion",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:CreateRole",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can create custom roles."
    },
    {
      "permission": "iam:CreateSAMLProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SAML is not used in Turbot accounts."
    },
    {
      "permission": "iam:CreateServiceLinkedRole",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owner can manage service-linked roles."
    },
    {
      "permission": "iam:CreateUser",
      "grant": "Whitelist",
      "resourceType": "user",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:CreateVirtualMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeactivateMFADevice",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteAccessKey",
      "grant": "Whitelist",
      "resourceType": "accessKey",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAccessKeyAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteAccountAlias",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage the AWS account alias."
    },
    {
      "permission": "iam:DeleteAccountPasswordPolicy",
      "grant": "Owner",
      "resourceType": "accountPasswordPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:DeleteGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:DeleteGroupPolicy",
      "grant": "Owner",
      "resourceType": "group|groupInlinePolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:DeleteInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DeleteLoginProfile",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserPasswordAdministration",
      "help": "Optionally Owners can manage passwords for custom users. Management of Turbot users is explicitly denied. Deletion of the login profile is always allowed so user deletion in the IAM console works."
    },
    {
      "permission": "iam:DeleteOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:DeletePolicy",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:DeletePolicyVersion",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:DeleteRole",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DeleteRolePermissionsBoundary",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can delete permission boundary."
    },
    {
      "permission": "iam:DeleteRolePolicy",
      "grant": "Owner",
      "resourceType": "roleInlinePolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DeleteSAMLProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SAML is not used in Turbot accounts."
    },
    {
      "permission": "iam:DeleteSSHPublicKey",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Users may be granted permission to manage SSH public keys by other services (e.g. CodeCommit)."
    },
    {
      "permission": "iam:DeleteServerCertificate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage server certificates. Users are also granted permission to manage server certs by other services (e.g. ELB)."
    },
    {
      "permission": "iam:DeleteServiceLinkedRole",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:DeleteSigningCertificate",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SOAP is deprecated by AWS and not supported by Turbot."
    },
    {
      "permission": "iam:DeleteUser",
      "grant": "Whitelist",
      "resourceType": "user",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteUserPermissionsBoundary",
      "grant": "Owner",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can delete permission boundary."
    },
    {
      "permission": "iam:DeleteUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userInlinePolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteVirtualMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DetachGroupPolicy",
      "grant": "Owner",
      "resourceType": "groupPolicyAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:DetachRolePolicy",
      "grant": "Owner",
      "resourceType": "rolePolicyAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DetachUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userPolicyAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:EnableMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:GenerateCredentialReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GenerateServiceLastAccessedDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccessKeyLastUsed",
      "grant": "Metadata",
      "resourceType": "accessKey",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccountAuthorizationDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccountPasswordPolicy",
      "grant": "Metadata",
      "resourceType": "accountPasswordPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccountSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetContextKeysForCustomPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetContextKeysForPrincipalPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetCredentialReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetGroup",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetGroupPolicy",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetInstanceProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetLoginProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetOpenIDConnectProvider",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetPolicy",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetPolicyVersion",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRolePolicy",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetSAMLProvider",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetSSHPublicKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetServerCertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetServiceLastAccessedDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetServiceLinkedRoleDeletionStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetUser",
      "grant": "Metadata",
      "resourceType": "user",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetUserPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccessKeys",
      "grant": "Metadata",
      "resourceType": "accessKey",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccountAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedGroupPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedUserPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListEntitiesForPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroupPolicies",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroups",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroupsForUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListInstanceProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListInstanceProfilesForRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListMFADevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListOpenIDConnectProviders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListPolicies",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListPolicyVersions",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoleTags",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the tags on an IAM user."
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSAMLProviders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSSHPublicKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListServerCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListServiceSpecificCredentials",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSigningCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListUserPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListUserTags",
      "grant": "Metadata",
      "resourceType": "user",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the tags on an IAM role."
    },
    {
      "permission": "iam:ListUsers",
      "grant": "Metadata",
      "resourceType": "user",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListVirtualMFADevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owner needs PassRole to allow creation of IAM roles for EC2. This also whitelists it for others to be granted specifically by services. PassRole for Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:PutGroupPolicy",
      "grant": "Owner",
      "resourceType": "group|groupInlinePolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:PutRolePermissionsBoundary",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can add permission boundary."
    },
    {
      "permission": "iam:PutRolePolicy",
      "grant": "Owner",
      "resourceType": "roleInlinePolicy",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:PutUserPermissionsBoundary",
      "grant": "Owner",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can add permission boundary."
    },
    {
      "permission": "iam:PutUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userInlinePolicy",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:RemoveClientIDFromOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:RemoveRoleFromInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:RemoveUserFromGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:ResyncMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:SetDefaultPolicyVersion",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:SimulateCustomPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allow users to simulate and investigate IAM permssions. This does allow access to view permissions of other users."
    },
    {
      "permission": "iam:SimulatePrincipalPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allow users to simulate and investigate IAM permssions. This does allow access to view permissions of other users."
    },
    {
      "permission": "iam:TagRole",
      "grant": "Operator",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Creates or modifies the tags on an IAM user."
    },
    {
      "permission": "iam:TagUser",
      "grant": "Operator",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Creates or modifies the tags on an IAM role."
    },
    {
      "permission": "iam:UntagRole",
      "grant": "Operator",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the tags on an IAM user."
    },
    {
      "permission": "iam:UntagUser",
      "grant": "Operator",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the tags on an IAM role."
    },
    {
      "permission": "iam:UpdateAccessKey",
      "grant": "Whitelist",
      "resourceType": "accessKey",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAccessKeyAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:UpdateAccountPasswordPolicy",
      "grant": "Owner",
      "resourceType": "accountPasswordPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:UpdateAssumeRolePolicy",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:UpdateGroup",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:UpdateLoginProfile",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserPasswordAdministration",
      "help": "Optionally Owners can change passwords for custom users. Turbot users are explicitly denied from managing passwords."
    },
    {
      "permission": "iam:UpdateOpenIDConnectProviderThumbprint",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:UpdateRole",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates the description or maximum session duration setting of a role."
    },
    {
      "permission": "iam:UpdateRoleDescription",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can modify the description of a role."
    },
    {
      "permission": "iam:UpdateSAMLProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SAML is not used in Turbot accounts."
    },
    {
      "permission": "iam:UpdateSSHPublicKey",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage SSH public keys. Users may be granted permission to manage SSH public keys by other services (e.g. CodeCommit)."
    },
    {
      "permission": "iam:UpdateServerCertificate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage server certificates. Users are also granted permission to manage server certs by other services (e.g. ELB)."
    },
    {
      "permission": "iam:UpdateSigningCertificate",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SOAP is deprecated by AWS and not supported by Turbot."
    },
    {
      "permission": "iam:UpdateUser",
      "grant": "Whitelist",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:UploadSSHPublicKey",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage SSH public keys. Users may be granted permission to manage SSH public keys by other services (e.g. CodeCommit)."
    },
    {
      "permission": "iam:UploadServerCertificate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage server certificates. Users are also granted permission to manage server certs by other services (e.g. ELB)."
    },
    {
      "permission": "iam:UploadSigningCertificate",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SOAP is deprecated by AWS and not supported by Turbot."
    },
    {
      "permission": "sts:AssumeRole",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assuming Turbot roles (determined by path) is explicitly denied."
    },
    {
      "permission": "sts:AssumeRoleWithSAML",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assuming Turbot roles (determined by path) is explicitly denied."
    },
    {
      "permission": "sts:AssumeRoleWithWebIdentity",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assuming Turbot roles (determined by path) is explicitly denied."
    },
    {
      "permission": "sts:DecodeAuthorizationMessage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Users with access to Metadata are granted the ability to decode any authorization failure messages they receive. This aids troubleshooting and is appropriate given they already have access at a Metadata level."
    }
  ],
  "allPermissions": [
    {
      "permission": "acm-pca:CreateCertificateAuthority",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a private subordinate certificate authority (CA)."
    },
    {
      "permission": "acm-pca:CreateCertificateAuthorityAuditReport",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create an audit report for an certificate authority that lists every time that CA private key is used."
    },
    {
      "permission": "acm-pca:DeleteCertificateAuthority",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:DescribeCertificateAuthority",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists information about private certificate authority (CA)."
    },
    {
      "permission": "acm-pca:DescribeCertificateAuthorityAuditReport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:GetCertificate",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:GetCertificateAuthorityCertificate",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:GetCertificateAuthorityCsr",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:ImportCertificateAuthorityCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can import signed private CA certificate into ACM PCA."
    },
    {
      "permission": "acm-pca:IssueCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins use private certificate authority (CA) to issue a client certificate."
    },
    {
      "permission": "acm-pca:ListCertificateAuthorities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:RestoreCertificateAuthority",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:RevokeCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can revoke a issued certificate."
    },
    {
      "permission": "acm-pca:TagCertificateAuthority",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:UntagCertificateAuthority",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm-pca:UpdateCertificateAuthority",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm:AddTagsToCertificate",
      "grant": "Operator",
      "resourceType": "certificate",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tag metadata for certificates."
    },
    {
      "permission": "acm:DeleteCertificate",
      "grant": "Admin",
      "resourceType": "certificate",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm:DescribeCertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Certificate contains no private keys or other sensitive data."
    },
    {
      "permission": "acm:ExportCertificate",
      "grant": "Admin",
      "resourceType": "certificate",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can export a private certificate issued by a private certificate authority (CA) for use anywhere."
    },
    {
      "permission": "acm:GetCertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Certificate contains no private keys or other sensitive data."
    },
    {
      "permission": "acm:ImportCertificate",
      "grant": "Admin",
      "resourceType": "certificate",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm:ListCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Certificate contains no private keys or other sensitive data."
    },
    {
      "permission": "acm:ListTagsForCertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Certificate tags contain no sensitive data."
    },
    {
      "permission": "acm:RemoveTagsFromCertificate",
      "grant": "Operator",
      "resourceType": "certificate",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tag metadata for certificates."
    },
    {
      "permission": "acm:RequestCertificate",
      "grant": "Admin",
      "resourceType": "certificate",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm:ResendValidationEmail",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm:UpdateCertificateOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:CreateApp",
      "grant": "Admin",
      "resourceType": "app",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:CreateBranch",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:CreateDomainAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:DeleteApp",
      "grant": "Admin",
      "resourceType": "app",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:DeleteBranch",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:DeleteDomainAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:DeleteJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:GetApp",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:GetBranch",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:GetDomainAssociationOperator",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:GetJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:ListApps",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:ListBranches",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:ListDomainAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:StartJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:StopJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:TagResource",
      "grant": "Operator",
      "resourceType": "app",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:UntagResource",
      "grant": "Operator",
      "resourceType": "app",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:UpdateApp",
      "grant": "Admin",
      "resourceType": "app",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:UpdateBranch",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "amplify:UpdateDomainAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "domainNameV2",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteDomainName",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "apiKey",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteApiKey",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "authorizer|authorizerV2",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteAuthorizer",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "usagePlan",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteUsagePlan",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "stage|stageV2",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteStage",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "apiV2",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:DELETE",
      "grant": "Admin",
      "resourceType": "api",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:DeleteRestApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:GET",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Some data is only available to operators (api keys, client certs). Other data is granted to Metadata through service.cfn.json"
    },
    {
      "permission": "apigateway:HEAD",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Getting headers is safe against data access - allowed for Metadata."
    },
    {
      "permission": "apigateway:OPTIONS",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Getting info about endpoints is safe against data access - allowed for Metadata."
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "apiV2",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "authorizerV2|authorizer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateAuthorizer",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "api",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateRestApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "domainNameV2",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateDomainName",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "usagePlan",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateUsagePlan",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "apiV2|api|stage|stageV2|usagePlan|apiKey|domainNameV2",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:TagResource",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "apiV2|api|stage|stageV2|usagePlan|apikey|domainNameV2",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UntagResource",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "apiKey",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateApiKey",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PATCH",
      "grant": "Admin",
      "resourceType": "stage|stageV2",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "apigateway:UpdateStage",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "domainNameV2",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateDomainName",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "apiKey",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateApiKey",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "apiV2",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "apiV2",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:ImportApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "api",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateRestApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "api",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:ImportRestApi",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "usagePlan",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateUsagePlan",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "stage",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateDeployment",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "authorizerV2|authorizer",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateAuthorizer",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:POST",
      "grant": "Admin",
      "resourceType": "stageV2",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "apigateway:CreateStage",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "apigateway:PUT",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All changes are at Admin, with specific actions opened to Operator through service.cfn.json"
    },
    {
      "permission": "execute-api:invoke",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allow operators to run any API actions that are defined."
    },
    {
      "permission": "appflow:CreateConnectorProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:CreateFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DeleteConnectorProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DeleteFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeConnectorEntity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeConnectorFields",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeConnectorProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeConnectors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeFlowExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeFlowExecutionRecords",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:DescribeFlows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:ListConnectorEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:ListConnectorFields",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:ListFlows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:ListTagsForResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:RunFlow",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:StartFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:StopFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:UpdateConnectorProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appflow:UpdateFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required to attach role of Redshift for Amazon S3 access."
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:CreateMesh",
      "grant": "Admin",
      "resourceType": "Mesh",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:CreateRoute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:CreateVirtualNode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:CreateVirtualRouter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:CreateVirtualService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DeleteMesh",
      "grant": "Admin",
      "resourceType": "Mesh",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DeleteRoute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DeleteVirtualNode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DeleteVirtualRouter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DeleteVirtualService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DescribeMesh",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DescribeRoute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DescribeVirtualNode",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DescribeVirtualRouter",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:DescribeVirtualService",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:ListMeshes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:ListRoutes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:ListVirtualNodes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:ListVirtualRouters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:ListVirtualServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:TagResource",
      "grant": "Operator",
      "resourceType": "Mesh",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:UntagResource",
      "grant": "Operator",
      "resourceType": "Mesh",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:UpdateMesh",
      "grant": "Admin",
      "resourceType": "Mesh",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:UpdateRoute",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:UpdateVirtualNode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:UpdateVirtualRouter",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appmesh:UpdateVirtualService",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:AssociateFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage fleets."
    },
    {
      "permission": "appstream:CopyImage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can copy the image within the same region or to a new region within the same AWS account."
    },
    {
      "permission": "appstream:CreateDirectoryConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:CreateFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage fleets."
    },
    {
      "permission": "appstream:CreateImageBuilder",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create image builder."
    },
    {
      "permission": "appstream:CreateImageBuilderStreamingURL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:CreateStack",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:CreateStreamingURL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DeleteDirectoryConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DeleteFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage fleets."
    },
    {
      "permission": "appstream:DeleteImage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DeleteImageBuilder",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DeleteStack",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DescribeDirectoryConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DescribeFleets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DescribeImageBuilders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DescribeImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DescribeSessions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DescribeStacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:DisassociateFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage fleets."
    },
    {
      "permission": "appstream:ExpireSession",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can stop existing streaming sessions."
    },
    {
      "permission": "appstream:ListAssociatedFleets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:ListAssociatedStacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata can lists the tags for specified resource."
    },
    {
      "permission": "appstream:StartFleet",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:StartImageBuilder",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:StopFleet",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:StopImageBuilder",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:Stream",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can stream applications from specified stack."
    },
    {
      "permission": "appstream:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can add or overwrite one or more tags for the specified AppStream resource."
    },
    {
      "permission": "appstream:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can disassociates the specified tags from the specified AppStream resource."
    },
    {
      "permission": "appstream:UpdateDirectoryConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appstream:UpdateFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage fleets."
    },
    {
      "permission": "appstream:UpdateStack",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Update the description or name."
    },
    {
      "permission": "appsync:CreateApiKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a unique key that can be distributed among clients for executing API."
    },
    {
      "permission": "appsync:CreateDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:CreateGraphqlApi",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:CreateResolver",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:CreateType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:DeleteApiKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:DeleteDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:DeleteGraphqlApi",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:DeleteResolver",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:DeleteType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GetDataSource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GetGraphqlApi",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GetIntrospectionSchema",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GetResolver",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GetSchemaCreationStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GetType",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:GraphQL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can send a GraphQL query to a GraphQL API."
    },
    {
      "permission": "appsync:ListApiKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:ListDataSources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:ListGraphqlApis",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:ListResolvers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:ListTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:StartSchemaCreation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add a new schema to GraphQL API."
    },
    {
      "permission": "appsync:UpdateApiKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can update the key expiry and description."
    },
    {
      "permission": "appsync:UpdateDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:UpdateGraphqlApi",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:UpdateResolver",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "appsync:UpdateType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListUserPools",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeTable",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:ListTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeElasticsearchDomain",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ListDomainNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can allow AppSync service to use existing roles."
    },
    {
      "permission": "lambda:ListFunctions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "artifact:AcceptAgreement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "artifact:DownloadAgreement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "artifact:Get",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "artifact:TerminateAgreement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:BatchGetNamedQuery",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:BatchGetQueryExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:CancelQueryExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated policy-specific action replaced by StopQueryExecution. Should only be used with JDBC drivers earlier than version 1.1.0."
    },
    {
      "permission": "athena:CreateNamedQuery",
      "grant": "Admin",
      "resourceType": "namedQuery",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:CreateWorkGroup",
      "grant": "Admin",
      "resourceType": "workgroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:DeleteNamedQuery",
      "grant": "Admin",
      "resourceType": "namedQuery",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:DeleteWorkGroup",
      "grant": "Admin",
      "resourceType": "workgroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetCatalogs",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetExecutionEngine",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetExecutionEngines",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetNamedQuery",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns information about a single query."
    },
    {
      "permission": "athena:GetNamespace",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetNamespaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetQueryExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetQueryExecutions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated policy-specific action replaced by ListQueryExecutions. Should only be used with JDBC drivers earlier than version 1.1.0."
    },
    {
      "permission": "athena:GetQueryResults",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetQueryResultsStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetTable",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetTables",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:GetWorkGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:ListNamedQueries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides a list of all available query IDs."
    },
    {
      "permission": "athena:ListQueryExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides a list of all available query execution IDs."
    },
    {
      "permission": "athena:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:ListWorkGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:RunQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated policy-specific action replaced by StartQueryExecution. Should only be used with JDBC drivers earlier than version 1.1.0."
    },
    {
      "permission": "athena:StartQueryExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:StopQueryExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:TagResource",
      "grant": "Operator",
      "resourceType": "workgroup|namedQuery",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:UntagResource",
      "grant": "Operator",
      "resourceType": "workgroup|namedQuery",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "athena:UpdateWorkGroup",
      "grant": "Operator",
      "resourceType": "workgroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup-storage:MountCapsule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This permission is required to create a Backup Vault."
    },
    {
      "permission": "backup:CreateBackupPlan",
      "grant": "Admin",
      "resourceType": "backupPlan",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:CreateBackupSelection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:CreateBackupVault",
      "grant": "Admin",
      "resourceType": "backupVault",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DeleteBackupPlan",
      "grant": "Admin",
      "resourceType": "backupPlan",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DeleteBackupSelection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DeleteBackupVault",
      "grant": "Admin",
      "resourceType": "backupVault",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DeleteBackupVaultAccessPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DeleteBackupVaultNotifications",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DeleteRecoveryPoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DescribeBackupJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DescribeBackupVault",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DescribeProtectedResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DescribeRecoveryPoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:DescribeRestoreJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ExportBackupPlanTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetBackupPlan",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetBackupPlanFromJSON",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetBackupPlanFromTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetBackupSelection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetBackupVaultAccessPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetBackupVaultNotifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetRecoveryPointRestoreMetadata",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:GetSupportedResourceTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListBackupJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListBackupPlanTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListBackupPlanVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListBackupPlans",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListBackupSelections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListBackupVaults",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListProtectedResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListRecoveryPointsByBackupVault",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListRecoveryPointsByResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListRestoreJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:PutBackupVaultAccessPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:PutBackupVaultNotifications",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:StartBackupJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:StartRestoreJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:StopBackupJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:TagResource",
      "grant": "Operator",
      "resourceType": "backupPlan|backupVault",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:UntagResource",
      "grant": "Operator",
      "resourceType": "backupPlan|backupVault",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:UpdateBackupPlan",
      "grant": "Admin",
      "resourceType": "backupPlan",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "backup:UpdateRecoveryPointLifecycle",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:CancelJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:CreateComputeEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:CreateJobQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:CreateResource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DeleteComputeEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DeleteJobQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DeleteResource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DeregisterJobDefinition",
      "grant": "Admin",
      "resourceType": "jobDefinition",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DescribeComputeEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DescribeJobDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DescribeJobQueues",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DescribeJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:DescribeResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:RegisterJobDefinition",
      "grant": "Admin",
      "resourceType": "jobDefinition",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:SubmitJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:TerminateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:UpdateComputeEnvironment",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:UpdateJobQueue",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "batch:UpdateResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeKeyPairs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:DescribeClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:DescribeContainerInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:DescribeServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:DescribeTaskDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:DescribeTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:ListClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:ListContainerInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:ListServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:ListTaskDefinitionFamilies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:ListTaskDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "ecs:ListTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "iam:ListInstanceProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/batch/latest/userguide/batch_managed_policies.html"
    },
    {
      "permission": "aws-portal:ModifyBilling",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "aws-portal:ModifyPaymentMethods",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewBilling",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewPaymentMethods",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewUsage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cur:DeleteReportDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cur:DescribeReportDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cur:ModifyReportDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cur:PutReportDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:CreateChimeWebhookConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:CreateSlackChannelConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:DeleteChimeWebhookConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:DeleteSlackChannelConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:DescribeChimeWebhookConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:DescribeSlackChannelConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:DescribeSlackChannels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:DescribeSlackWorkspaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:GetSlackOauthParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:RedeemSlackOauthCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:UpdateChimeWebhookConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chatbot:UpdateSlackChannelConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListTopics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:AcceptDelegate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to accept the delegate invitation to share management of an Amazon Chime account with another AWS Account"
    },
    {
      "permission": "chime:ActivateUsers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to activate users in an Amazon Chime Enterprise account"
    },
    {
      "permission": "chime:AddDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to add a domain to your Amazon Chime account"
    },
    {
      "permission": "chime:AddOrUpdateGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to add new or update existing Active Directory or Okta user groups associated with your Amazon Chime Enterprise account"
    },
    {
      "permission": "chime:AssociatePhoneNumberWithUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to associate a phone number with an Amazon Chime user"
    },
    {
      "permission": "chime:AssociatePhoneNumbersWithVoiceConnector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to associate multiple phone numbers with an Amazon Chime Voice Connector"
    },
    {
      "permission": "chime:AssociatePhoneNumbersWithVoiceConnectorGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to associate multiple phone numbers with an Amazon Chime Voice Connector Group"
    },
    {
      "permission": "chime:AuthorizeDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to authorize an Active Directory for your Amazon Chime Enterprise account"
    },
    {
      "permission": "chime:BatchCreateAttendee",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create new attendees for an active Amazon Chime SDK meeting"
    },
    {
      "permission": "chime:BatchCreateRoomMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to batch add room members"
    },
    {
      "permission": "chime:BatchDeletePhoneNumber",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to move up to 50 phone numbers to the deletion queue"
    },
    {
      "permission": "chime:BatchSuspendUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to suspend up to 50 users from a Team or EnterpriseLWA Amazon Chime account"
    },
    {
      "permission": "chime:BatchUnsuspendUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to remove the suspension from up to 50 previously suspended users for the specified Amazon Chime EnterpriseLWA account"
    },
    {
      "permission": "chime:BatchUpdatePhoneNumber",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to update phone number details within the UpdatePhoneNumberRequestItem object for up to 50 phone numbers"
    },
    {
      "permission": "chime:BatchUpdateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to update user details within the UpdateUserRequestItem object for up to 20 users for the specified Amazon Chime account"
    },
    {
      "permission": "chime:ConnectDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to connect an Active Directory to your Amazon Chime Enterprise account"
    },
    {
      "permission": "chime:CreateAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create an Amazon Chime account under the administrator's AWS account"
    },
    {
      "permission": "chime:CreateApiKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a new SCIM access key for your Amazon Chime account and Okta configuration"
    },
    {
      "permission": "chime:CreateAttendee",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a new attendee for an active Amazon Chime SDK meeting"
    },
    {
      "permission": "chime:CreateBot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a bot for an Amazon Chime Enterprise account"
    },
    {
      "permission": "chime:CreateBotMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to add a bot to a chat room in your Amazon Chime Enterprise account"
    },
    {
      "permission": "chime:CreateCDRBucket",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a new Call Detail Record S3 bucket"
    },
    {
      "permission": "chime:CreateMeeting",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a new Amazon Chime SDK meeting in the specified media Region with no initial attendees"
    },
    {
      "permission": "chime:CreatePhoneNumberOrder",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a phone number order with the Carriers"
    },
    {
      "permission": "chime:CreateRoom",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a room"
    },
    {
      "permission": "chime:CreateRoomMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to add a room member"
    },
    {
      "permission": "chime:CreateVoiceConnector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants permission to create a Amazon Chime Voice Connector under the administrator's AWS account"
    },
    {
      "permission": "chime:CreateVoiceConnectorGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteAccountOpenIdConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteApiKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteAttendee",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteCDRBucket",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteDelegate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteEventsConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteMeeting",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeletePhoneNumber",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteRoom",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteRoomMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteVoiceConnector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteVoiceConnectorGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteVoiceConnectorOrigination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteVoiceConnectorStreamingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteVoiceConnectorTermination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DeleteVoiceConnectorTerminationCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DisassociatePhoneNumberFromUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DisassociatePhoneNumbersFromVoiceConnector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DisassociatePhoneNumbersFromVoiceConnectorGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:DisconnectDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetAccount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetAccountResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetAccountSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetAccountWithOpenIdConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetAttendee",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetBot",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetCDRBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetDomain",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetEventsConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetGlobalSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetMeeting",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetMeetingDetail",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetPhoneNumber",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetPhoneNumberOrder",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetPhoneNumberSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetRoom",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetTelephonyLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetUserActivityReportData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetUserByEmail",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetUserSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnector",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnectorGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnectorLoggingConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnectorOrigination",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnectorStreamingConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnectorTermination",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:GetVoiceConnectorTerminationHealth",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:InviteDelegate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:InviteUsers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:InviteUsersFromProvider",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListAccountUsageReportData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListAccounts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListApiKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListAttendees",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListBots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListCDRBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListCallingRegions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListDelegates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListDomains",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListMeetingEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListMeetings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListMeetingsReportData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListPhoneNumberOrders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListPhoneNumbers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListRoomMemberships",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListRooms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListVoiceConnectorGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListVoiceConnectorTerminationCredentials",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ListVoiceConnectors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:LogoutUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:PutEventsConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:PutVoiceConnectorLoggingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:PutVoiceConnectorOrigination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:PutVoiceConnectorStreamingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:PutVoiceConnectorTermination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:PutVoiceConnectorTerminationCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:RegenerateSecurityToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:RenameAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:RenewDelegate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ResetAccountResource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ResetPersonalPIN",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:RestorePhoneNumber",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:RetrieveDataExports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:SearchAvailablePhoneNumbers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:StartDataExport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:SubmitSupportRequest",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:SuspendUsers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UnauthorizeDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateAccountOpenIdConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateAccountResource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateAccountSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateBot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateCDRSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateGlobalSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdatePhoneNumber",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdatePhoneNumberSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateRoom",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateRoomMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateSupportedLicenses",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateUserLicenses",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateUserSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateVoiceConnector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:UpdateVoiceConnectorGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "chime:ValidateAccountResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeLogGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:GetLogDelivery",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:ListLogDeliveries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketAcl",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLogging",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketVersioning",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketWebsite",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:CreateEnvironmentEC2",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:CreateEnvironmentMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add an environment member to Cloud9 development environment."
    },
    {
      "permission": "cloud9:CreateEnvironmentSSH",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create an AWS Cloud9 development environment which is connected to a remote SSH server."
    },
    {
      "permission": "cloud9:DeleteEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:DeleteEnvironmentMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:DescribeEnvironmentMemberships",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:DescribeEnvironmentStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:DescribeEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:GetUserPublicKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Action to get the public key of the logged in user. Only used in the AWS Cloud9 console. https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awscloud9.html"
    },
    {
      "permission": "cloud9:ListEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:UpdateEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:UpdateEnvironmentMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:ValidateEnvironmentName",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Checks whether the passed in environment is valid. Only used in the AWS Cloud9 console. https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awscloud9.html"
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "cloud9:CreateEnvironmentEC2 is dependent on this action."
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "cloud9:CreateEnvironmentEC2 is dependent on this action."
    },
    {
      "permission": "clouddirectory:AddFacetToObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ApplySchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "New schema from the existing schema"
    },
    {
      "permission": "clouddirectory:AttachObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:AttachPolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:AttachToIndex",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:AttachTypedLink",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Attaches a typed link to a specified source and target object."
    },
    {
      "permission": "clouddirectory:BatchRead",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Performs all the read operations in a batch"
    },
    {
      "permission": "clouddirectory:BatchWrite",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Performs all the write operations in a batch. Either all the operations succeed or none. Batch writes supports only object-related operations"
    },
    {
      "permission": "clouddirectory:CreateDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:CreateFacet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Facets are the most basic abstraction within a schema. They represent a set of attributes that can be associated with an object in the directory and are similar in concept to LDAP object classes"
    },
    {
      "permission": "clouddirectory:CreateIndex",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Indexes in Cloud Directory enable simple listing of other objects by those objects' attribute values."
    },
    {
      "permission": "clouddirectory:CreateObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:CreateSchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "When a schema has been applied to a directory, all data within that directory must then conform to that applied schema."
    },
    {
      "permission": "clouddirectory:CreateTypedLinkFacet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DeleteDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DeleteFacet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DeleteObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DeleteSchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DeleteTypedLinkFacet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DetachFromIndex",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DetachObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DetachPolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:DetachTypedLink",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Attaches a typed link to a specified source and target object."
    },
    {
      "permission": "clouddirectory:DisableDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:EnableDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:GetAppliedSchemaVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:GetDirectory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves metadata about a directory. However it only contains high level info about the directory along with the state"
    },
    {
      "permission": "clouddirectory:GetFacet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:GetLinkAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:GetObjectAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves attributes within a facet that are associated with an object."
    },
    {
      "permission": "clouddirectory:GetObjectInformation",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves metadata about an object"
    },
    {
      "permission": "clouddirectory:GetSchemaAsJson",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:GetTypedLinkFacetInformation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListAppliedSchemaArns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListAttachedIndices",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides details of attributes"
    },
    {
      "permission": "clouddirectory:ListDevelopmentSchemaArns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists directories created within an account along with state"
    },
    {
      "permission": "clouddirectory:ListFacetAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves attributes attached to the facet."
    },
    {
      "permission": "clouddirectory:ListFacetNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListIncomingTypedLinks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns a paginated list of all the incoming TypedLinkSpecifier information for an object"
    },
    {
      "permission": "clouddirectory:ListIndex",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListManagedSchemaArns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListObjectAttributes",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListObjectChildren",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListObjectParentPaths",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListObjectParents",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListObjectPolicies",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListOutgoingTypedLinks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListPolicyAttachments",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns all of the ObjectIdentifiers to which a given policy is attached. Rest detailed attributes is addressed by clouddirectory:ListObjectAttributes"
    },
    {
      "permission": "clouddirectory:ListPublishedSchemaArns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListTypedLinkFacetAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:ListTypedLinkFacetNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:LookupPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:PublishSchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:PutSchemaFromJson",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:RemoveFacetFromObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpdateFacet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpdateLinkAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpdateObjectAttributes",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpdateSchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpdateTypedLinkFacet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpgradeAppliedSchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "clouddirectory:UpgradePublishedSchema",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:CancelUpdateStack",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ContinueUpdateRollback",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:CreateChangeSet",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:CreateStack",
      "grant": "Operator",
      "resourceType": "stack",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:CreateStackInstances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:CreateStackSet",
      "grant": "Admin",
      "resourceType": "stackSet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:CreateUploadBucket",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates an S3 bucket for CFN templates"
    },
    {
      "permission": "cloudformation:DeleteChangeSet",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DeleteStack",
      "grant": "Operator",
      "resourceType": "stack",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DeleteStackInstances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DeleteStackSet",
      "grant": "Admin",
      "resourceType": "stackSet",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeAccountLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeChangeSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackDriftDetectionStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackResourceDrifts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackSetOperation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStacks",
      "grant": "Metadata",
      "resourceType": "stack",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DetectStackDrift",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used to detect whether a stack’s actual configuration has been changed outside of CloudFormation."
    },
    {
      "permission": "cloudformation:DetectStackResourceDrift",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:EstimateTemplateCost",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cost calculation does not contain data."
    },
    {
      "permission": "cloudformation:ExecuteChangeSet",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:GetStackPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:GetTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Templates describe resources but should not contain any data or sensitive information."
    },
    {
      "permission": "cloudformation:GetTemplateSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListChangeSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListExports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListImports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStackInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStackResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStackSetOperationResults",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStackSetOperations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStackSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStacks",
      "grant": "Metadata",
      "resourceType": "stack",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:SetStackPolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Stack policies do not replace IAM but instead are used to protect resources."
    },
    {
      "permission": "cloudformation:SignalResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:StopStackSetOperation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:TagResources",
      "grant": "Operator",
      "resourceType": "stack|stackSet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:UntagResources",
      "grant": "Operator",
      "resourceType": "stack|stackSet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:UpdateStack",
      "grant": "Operator",
      "resourceType": "stack",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:UpdateStackInstances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:UpdateStackSet",
      "grant": "Admin",
      "resourceType": "stackSet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:UpdateTerminationProtection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates termination protection for the specified stack. If a user attempts to delete a stack with termination protection enabled the operation fails and the stack remains unchanged."
    },
    {
      "permission": "acm:ListCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required by AWS Console for distribution creation."
    },
    {
      "permission": "cloudfront:CreateCloudFrontOriginAccessIdentity",
      "grant": "Admin",
      "resourceType": "cloudFrontOriginAccessIdentity",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:CreateDistribution",
      "grant": "Admin",
      "resourceType": "distribution",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:CreateDistributionWithTags",
      "grant": "Admin",
      "resourceType": "distribution",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:CreateFieldLevelEncryptionConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create configuration that specifies the profiles to use based on content type of request or a query argument for encrypting specific data fields."
    },
    {
      "permission": "cloudfront:CreateFieldLevelEncryptionProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create Field-level encryption profiles which define the fields that are to be encrypted."
    },
    {
      "permission": "cloudfront:CreateInvalidation",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can invalidate cache entries."
    },
    {
      "permission": "cloudfront:CreatePublicKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add a new public key to CloudFront to be used for field-level encryption."
    },
    {
      "permission": "cloudfront:CreateStreamingDistribution",
      "grant": "Admin",
      "resourceType": "streamingDistribution",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:CreateStreamingDistributionWithTags",
      "grant": "Admin",
      "resourceType": "streamingDistribution",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:DeleteCloudFrontOriginAccessIdentity",
      "grant": "Admin",
      "resourceType": "cloudFrontOriginAccessIdentity",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:DeleteDistribution",
      "grant": "Admin",
      "resourceType": "distribution",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:DeleteFieldLevelEncryptionConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:DeleteFieldLevelEncryptionProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:DeletePublicKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:DeleteStreamingDistribution",
      "grant": "Admin",
      "resourceType": "streamingDistribution",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:GetCloudFrontOriginAccessIdentity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:GetDistribution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata."
    },
    {
      "permission": "cloudfront:GetDistributionConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata."
    },
    {
      "permission": "cloudfront:GetFieldLevelEncryption",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:GetFieldLevelEncryptionConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:GetFieldLevelEncryptionProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:GetFieldLevelEncryptionProfileConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:GetInvalidation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:GetPublicKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:GetPublicKeyConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:GetStreamingDistribution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:GetStreamingDistributionConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:ListCloudFrontOriginAccessIdentities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:ListDistributions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:ListDistributionsByWebACLId",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:ListFieldLevelEncryptionConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:ListFieldLevelEncryptionProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:ListInvalidations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:ListPublicKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:ListStreamingDistributions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All CloudFront distribution info is considered Metadata"
    },
    {
      "permission": "cloudfront:TagResource",
      "grant": "Operator",
      "resourceType": "distribution|streamingDistribution",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "cloudfront:UntagResource",
      "grant": "Operator",
      "resourceType": "distribution|streamingDistribution",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "cloudfront:UpdateCloudFrontOriginAccessIdentity",
      "grant": "Admin",
      "resourceType": "cloudFrontOriginAccessIdentity",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:UpdateDistribution",
      "grant": "Admin",
      "resourceType": "distribution",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "cloudfront:UpdateFieldLevelEncryptionConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:UpdateFieldLevelEncryptionProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:UpdatePublicKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:UpdateStreamingDistribution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache configuration is done by Admins"
    },
    {
      "permission": "elasticloadbalancing:DescribeLoadBalancers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required by AWS Console for distribution creation."
    },
    {
      "permission": "iam:ListServerCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required by AWS Console for distribution creation."
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required by AWS Console for distribution creation."
    },
    {
      "permission": "cloudhsm:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:CopyBackupToRegion",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:CreateCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:CreateHapg",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:CreateHsm",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:CreateLunaClient",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DeleteBackup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DeleteCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DeleteHapg",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DeleteHsm",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DeleteLunaClient",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DescribeBackups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DescribeClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DescribeHapg",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DescribeHsm",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:DescribeLunaClient",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the client fingerprint only."
    },
    {
      "permission": "cloudhsm:GetConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns certificate file containing server .pem files of HSMs."
    },
    {
      "permission": "cloudhsm:InitializeCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ListAvailableZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ListHapgs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ListHsms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ListLunaClients",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ModifyHapg",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ModifyHsm",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:ModifyLunaClient",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:RestoreBackup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudhsm:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:CreateHttpNamespace",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create an HTTP namespace."
    },
    {
      "permission": "servicediscovery:CreatePrivateDnsNamespace",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a private namespace based on DNS which will be visible only inside a specified Amazon VPC."
    },
    {
      "permission": "servicediscovery:CreatePublicDnsNamespace",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a public namespace based on DNS which will be visible on the internet."
    },
    {
      "permission": "servicediscovery:CreateService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can creates a service."
    },
    {
      "permission": "servicediscovery:DeleteNamespace",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can delete a specified namespace."
    },
    {
      "permission": "servicediscovery:DeleteService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can elete a specified service."
    },
    {
      "permission": "servicediscovery:DeregisterInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can delete the records and the health check if any that Amazon Route 53 created for the specified instance."
    },
    {
      "permission": "servicediscovery:DiscoverInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Discovers registered instances for a specified namespace and service."
    },
    {
      "permission": "servicediscovery:GetInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:GetInstancesHealthStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:GetNamespace",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:GetOperation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:GetService",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:ListInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:ListNamespaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:ListOperations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:ListServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:RegisterInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can register an instance based on the settings in a specified service."
    },
    {
      "permission": "servicediscovery:UpdateInstanceCustomHealthStatus",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicediscovery:UpdateInstanceHeartbeatStatus",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can update the current health status for an instance that has a custom health check."
    },
    {
      "permission": "servicediscovery:UpdateService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can update the settings in a specified service."
    },
    {
      "permission": "cloudsearch:AddTags",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:BuildSuggesters",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:CreateDomain",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DefineAnalysisScheme",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DefineExpression",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DefineIndexField",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DefineIndexFields",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DefineSuggester",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DeleteAnalysisScheme",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DeleteDomain",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DeleteExpression",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DeleteIndexField",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DeleteSuggester",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Options / Configurations within domain"
    },
    {
      "permission": "cloudsearch:DescribeAnalysisSchemes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeAvailabilityOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeDomains",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeExpressions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeIndexFields",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeScalingParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeServiceAccessPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:DescribeSuggesters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:IndexDocuments",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Configuration of document index"
    },
    {
      "permission": "cloudsearch:ListDomainNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:RemoveTags",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:UpdateAvailabilityOptions",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:UpdateDomainEndpointOptions",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Controls access policies -- higher level right"
    },
    {
      "permission": "cloudsearch:UpdateScalingParameters",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudsearch:UpdateServiceAccessPolicies",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Controls access policies -- higher level right"
    },
    {
      "permission": "cloudsearch:document",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows add replace delete documents in existing domains"
    },
    {
      "permission": "cloudsearch:search",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows search capabilities to read data"
    },
    {
      "permission": "cloudsearch:suggest",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows search capabilities to read data"
    },
    {
      "permission": "cloudtrail:AddTags",
      "grant": "Operator",
      "resourceType": "trail",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:CreateTrail",
      "grant": "Admin",
      "resourceType": "trail",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:DeleteTrail",
      "grant": "Admin",
      "resourceType": "trail",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:DescribeTrails",
      "grant": "Metadata",
      "resourceType": "trail",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:GetEventSelectors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:GetTrailStatus",
      "grant": "Metadata",
      "resourceType": "trail",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:ListPublicKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:ListTags",
      "grant": "Metadata",
      "resourceType": "trail",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:LookupEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "CloudTrail events do not contain any data just information about the API call."
    },
    {
      "permission": "cloudtrail:PutEventSelectors",
      "grant": "Admin",
      "resourceType": "trail",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:RemoveTags",
      "grant": "Operator",
      "resourceType": "trail",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:StartLogging",
      "grant": "Operator",
      "resourceType": "trail",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:StopLogging",
      "grant": "Operator",
      "resourceType": "trail",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudtrail:UpdateTrail",
      "grant": "Admin",
      "resourceType": "trail",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per http://docs.aws.amazon.com/awscloudtrail/latest/userguide/grant-custom-permissions-for-cloudtrail-users.html"
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per http://docs.aws.amazon.com/awscloudtrail/latest/userguide/grant-custom-permissions-for-cloudtrail-users.html"
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per http://docs.aws.amazon.com/awscloudtrail/latest/userguide/grant-custom-permissions-for-cloudtrail-users.html"
    },
    {
      "permission": "cloudwatch:DeleteAlarms",
      "grant": "Operator",
      "resourceType": "alarm",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "monitoring:DeleteAlarms",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DeleteAnomalyDetector",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DeleteDashboards",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAlarmHistory",
      "grant": "Metadata",
      "resourceType": "alarm",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "alarm",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAlarmsForMetric",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAnomalyDetectors",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DisableAlarmActions",
      "grant": "Operator",
      "resourceType": "alarm",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "monitoring:DisableAlarmActions",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:EnableAlarmActions",
      "grant": "Operator",
      "resourceType": "alarm",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "monitoring:EnableAlarmActions",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:GetDashboard",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for cloudwatch screens in services like RDS and EC2. This is Metadata not ReadOnly since all cloudwatch information is just statistics about the service not actual data (as opposed to log files for example)."
    },
    {
      "permission": "cloudwatch:ListDashboards",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:ListMetrics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:ListTagsForResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:PutAnomalyDetector",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:PutDashboard",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:PutMetricAlarm",
      "grant": "Operator",
      "resourceType": "alarm",
      "operationType": "CreateorUpdate",
      "fullCmdbUpdate": "",
      "eventPermission": "monitoring:PutMetricAlarm",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:PutMetricData",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:SetAlarmState",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Temporary setting only."
    },
    {
      "permission": "cloudwatch:TagResource",
      "grant": "Operator",
      "resourceType": "alarm",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "tagging:TagResources",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:UntagResource",
      "grant": "Operator",
      "resourceType": "alarm",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "tagging:UntagResources",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchDeleteBuilds",
      "grant": "Admin",
      "resourceType": "build",
      "operationType": "Delete",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete one or more builds."
    },
    {
      "permission": "codebuild:BatchGetBuildBatches",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchGetBuilds",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchGetProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchGetReportGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchGetReports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchPutCodeCoverages",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:BatchPutTestCases",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:CreateProject",
      "grant": "Admin",
      "resourceType": "project",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:CreateReport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:CreateReportGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:CreateWebhook",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can enable webhooks for an AWS CodeBuild."
    },
    {
      "permission": "codebuild:DeleteBuildBatch",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteOAuthToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteProject",
      "grant": "Admin",
      "resourceType": "project",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteReport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteReportGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteResourcePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteSourceCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DeleteWebhook",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can stop the AWS CodeBuild from automatically rebuilding the source code."
    },
    {
      "permission": "codebuild:DescribeCodeCoverages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:DescribeTestCases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:GetResourcePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ImportSourceCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:InvalidateProjectCache",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can reset the cache for a project."
    },
    {
      "permission": "codebuild:ListBuildBatches",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListBuildBatchesForProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListBuilds",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListBuildsForProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListConnectedOAuthAccounts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists connected third-party OAuth providers."
    },
    {
      "permission": "codebuild:ListCuratedEnvironmentImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListReportGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListReports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListReportsForReportGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListRepositories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists source code repositories from a connected third-party OAuth provider."
    },
    {
      "permission": "codebuild:ListSharedProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListSharedReportGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:ListSourceCredentials",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:PersistOAuthToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Saves an OAuth token from a connected third-party OAuth provider. Only used in the AWS CodeBuild console."
    },
    {
      "permission": "codebuild:PutResourcePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:RetryBuild",
      "grant": "Operator",
      "resourceType": "build",
      "operationType": "Create",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:RetryBuildBatch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:StartBuild",
      "grant": "Operator",
      "resourceType": "build",
      "operationType": "Create",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:StartBuildBatch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:StopBuild",
      "grant": "Operator",
      "resourceType": "build",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:StopBuildBatch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:UpdateProject",
      "grant": "Operator",
      "resourceType": "project",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:UpdateReport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:UpdateReportGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codebuild:UpdateWebhook",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:BatchGetPullRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:BatchGetRepositories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:CancelUploadArchive",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create and delete branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:CreateBranch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:CreatePullRequest",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:CreateRepository",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:DeleteBranch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:DeleteCommentContent",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:DeleteFile",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:DeleteRepository",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:DescribePullRequestEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetBlob",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetBranch",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetComment",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetCommentsForComparedCommit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetCommentsForPullRequest",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetCommit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetCommitHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetCommitsFromMergeBase",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetDifferences",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetFile",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetFolder",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetMergeConflicts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetObjectIdentifier",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetPullRequest",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetReferences",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetRepository",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetRepositoryTriggers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetTree",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GetUploadArchiveStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GitPull",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:GitPush",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:ListBranches",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:ListPullRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:ListRepositories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:ListRepositoryTriggers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:MergePullRequestByFastForward",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:PostCommentForComparedCommit",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:PostCommentForPullRequest",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:PostCommentReply",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:PutFile",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:PutRepositoryTriggers",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:TagResource",
      "grant": "Operator",
      "resourceType": "repository",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:TestRepositoryTriggers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:UntagResource",
      "grant": "Operator",
      "resourceType": "repository",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:UpdateComment",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:UpdateDefaultBranch",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:UpdatePullRequestDescription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:UpdatePullRequestStatus",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:UpdatePullRequestTitle",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata sees repos & file structure, ReadOnly can open & pull files, Operator can push files & create branches, Admin can manage repos - http://docs.aws.amazon.com/codecommit/latest/userguide/access-permissions.html"
    },
    {
      "permission": "codecommit:UpdateRepositoryDescription",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "KMS is not required, but must not be denied for CodeCommit to work - http://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html"
    },
    {
      "permission": "codecommit:UpdateRepositoryName",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "KMS is not required, but must not be denied for CodeCommit to work - http://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html"
    },
    {
      "permission": "codecommit:UploadArchive",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "KMS is not required, but must not be denied for CodeCommit to work - http://docs.aws.amazon.com/codecommit/latest/userguide/encryption.html"
    },
    {
      "permission": "codedeploy:AddTagsToOnPremisesInstances",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:BatchGetApplicationRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:BatchGetApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:BatchGetDeploymentGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:BatchGetDeploymentInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:BatchGetDeploymentTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns an array of one or more targets associated with a deployment."
    },
    {
      "permission": "codedeploy:BatchGetDeployments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:BatchGetOnPremisesInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ContinueDeployment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:CreateApplication",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:CreateDeployment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:CreateDeploymentConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:CreateDeploymentGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:DeleteApplication",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:DeleteDeploymentConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:DeleteDeploymentGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:DeleteGitHubAccountToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:DeregisterOnPremisesInstance",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetApplicationRevision",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetDeployment",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetDeploymentConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetDeploymentGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetDeploymentInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetDeploymentTarget",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns information about a deployment target."
    },
    {
      "permission": "codedeploy:GetOnPremisesInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListApplicationRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListDeploymentConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListDeploymentGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListDeploymentInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListDeploymentTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns an array of target IDs that are associated a deployment."
    },
    {
      "permission": "codedeploy:ListDeployments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListGitHubAccountTokenNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListOnPremisesInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:PutLifecycleEventHookExecutionStatus",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:RegisterApplicationRevision",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:RegisterOnPremisesInstance",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:RemoveTagsFromOnPremisesInstances",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:SkipWaitTimeForInstanceTermination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:StopDeployment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:UpdateApplication",
      "grant": "Operator",
      "resourceType": "application",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:UpdateDeploymentGroup",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:GetDeploymentGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codedeploy:ListDeploymentGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:AcknowledgeJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to understand status."
    },
    {
      "permission": "codepipeline:AcknowledgeThirdPartyJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to understand status."
    },
    {
      "permission": "codepipeline:CreateCustomActionType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:CreatePipeline",
      "grant": "Admin",
      "resourceType": "pipeline",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:DeleteCustomActionType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:DeletePipeline",
      "grant": "Admin",
      "resourceType": "pipeline",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:DeleteWebhook",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes a previously created webhook by name."
    },
    {
      "permission": "codepipeline:DeregisterWebhookWithThirdParty",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the connection between the webhook that was created by CodePipeline and the external tool with events to be detected."
    },
    {
      "permission": "codepipeline:DisableStageTransition",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can update existing pipelines."
    },
    {
      "permission": "codepipeline:EnableStageTransition",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can update existing pipelines."
    },
    {
      "permission": "codepipeline:GetJobDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to understand status."
    },
    {
      "permission": "codepipeline:GetPipeline",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns only metadata information."
    },
    {
      "permission": "codepipeline:GetPipelineExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns only metadata information."
    },
    {
      "permission": "codepipeline:GetPipelineState",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:GetThirdPartyJobDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to understand status."
    },
    {
      "permission": "codepipeline:ListActionTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:ListPipelineExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets a summary of the most recent executions for a pipeline."
    },
    {
      "permission": "codepipeline:ListPipelines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:ListWebhooks",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "It lists all the webhook's configuration which contains SecretToken."
    },
    {
      "permission": "codepipeline:PollForJobs",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata + returns temporary credentials for S3."
    },
    {
      "permission": "codepipeline:PollForThirdPartyJobs",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata + returns temporary credentials for S3."
    },
    {
      "permission": "codepipeline:PutActionRevision",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:PutApprovalResult",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:PutJobFailureResult",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to submit status."
    },
    {
      "permission": "codepipeline:PutJobSuccessResult",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to submit status."
    },
    {
      "permission": "codepipeline:PutThirdPartyJobFailureResult",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to submit status."
    },
    {
      "permission": "codepipeline:PutThirdPartyJobSuccessResult",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Mainly used by system accounts to submit status."
    },
    {
      "permission": "codepipeline:PutWebhook",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Defines a webhook and returns a unique webhook URL generated by CodePipeline."
    },
    {
      "permission": "codepipeline:RegisterWebhookWithThirdParty",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Configures a connection between the webhook that was created and the external tool with events to be detected."
    },
    {
      "permission": "codepipeline:RetryStageExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:StartPipelineExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codepipeline:UpdatePipeline",
      "grant": "Operator",
      "resourceType": "pipeline",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "To create the Pipeline the user must have permission to pass the role to it."
    },
    {
      "permission": "lambda:GetFunctionConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListFunctions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:CreateBucket",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Tied to creation of Pipeline."
    },
    {
      "permission": "s3:GetBucketPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can read object from S3 since Metadata is only to view configuration information Operator is more appropriate."
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutBucketPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Tied to creation of Pipeline."
    },
    {
      "permission": "cloud9:DescribeEnvironmentMemberships",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:DescribeEnvironmentStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:DescribeEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloud9:ValidateEnvironmentName",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackResourceDrifts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStackSetOperation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:GetTemplateSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codecommit:GetReferences",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:AssociateTeamMember",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add a user to the team for an AWS CodeStar project."
    },
    {
      "permission": "codestar:CreateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:CreateUserProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:DeleteExtendedAccess",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can grant access to extended delete APIs."
    },
    {
      "permission": "codestar:DeleteProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:DeleteUserProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:DescribeProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:DescribeUserProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:DisassociateTeamMember",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:GetExtendedAccess",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can grant access to extended read APIs."
    },
    {
      "permission": "codestar:ListProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:ListResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:ListTagsForProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:ListTeamMembers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:ListUserProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:PutExtendedAccess",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can grant access to extended write APIs."
    },
    {
      "permission": "codestar:TagProject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:UntagProject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:UpdateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:UpdateTeamMember",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:UpdateUserProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "codestar:VerifyServiceRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Verifies whether the AWS CodeStar service role exists in the customer's account."
    },
    {
      "permission": "ec2:DescribeKeyPairs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:CreateIdentityPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:DeleteIdentities",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:DeleteIdentityPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:DescribeIdentity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:DescribeIdentityPool",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:GetCredentialsForIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns access and secret key credential information."
    },
    {
      "permission": "cognito-identity:GetId",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Generates (or retrieves) a Cognito ID."
    },
    {
      "permission": "cognito-identity:GetIdentityPoolRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves roles that are used for Identity Pools."
    },
    {
      "permission": "cognito-identity:GetOpenIdToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves token that is used for login."
    },
    {
      "permission": "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Registers (or retrieves) a Cognito IdentityId and an OpenID Connect token for a user authenticated by your backend authentication process."
    },
    {
      "permission": "cognito-identity:ListIdentities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:ListIdentityPools",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:LookupDeveloperIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Action associated with AWS Developer credentials; explicit action to lookup data where Metadata role is simply to view AWS configuration data."
    },
    {
      "permission": "cognito-identity:MergeDeveloperIdentities",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:SetIdentityPoolRoles",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:UnlinkDeveloperIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:UnlinkIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-identity:UpdateIdentityPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AddCustomAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminAddUserToGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminConfirmSignUp",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminCreateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminDeleteUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminDeleteUserAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminDisableProviderForUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can disable the user from signing in with the specified external (SAML or social) identity provider."
    },
    {
      "permission": "cognito-idp:AdminDisableUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminEnableUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminForgetDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminGetDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the specified device by user name in a user pool as an administrator."
    },
    {
      "permission": "cognito-idp:AdminGetUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the specified user by user name in a user pool as an administrator. Works on any user."
    },
    {
      "permission": "cognito-idp:AdminInitiateAuth",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminLinkProviderForUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can link an existing user account in a user pool (DestinationUser) to an identity from an external identity provider (SourceUser) based on a specified attribute name and value from the external identity provider."
    },
    {
      "permission": "cognito-idp:AdminListDevices",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the devices by user name in a user pool as an administrator."
    },
    {
      "permission": "cognito-idp:AdminListGroupsForUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the groups for a user by user name in a user pool as an administrator."
    },
    {
      "permission": "cognito-idp:AdminListUserAuthEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata can list a history of user activity and any risks detected as part of Amazon Cognito advanced security."
    },
    {
      "permission": "cognito-idp:AdminRemoveUserFromGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminResetUserPassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminRespondToAuthChallenge",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminSetUserMFAPreference",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can set the user's multi-factor authentication (MFA) preference."
    },
    {
      "permission": "cognito-idp:AdminSetUserSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminUpdateAuthEventFeedback",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminUpdateDeviceStatus",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminUpdateUserAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AdminUserGlobalSignOut",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:AssociateSoftwareToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ChangePassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ConfirmDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ConfirmForgotPassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ConfirmSignUp",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateIdentityProvider",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateResourceServer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateUserImportJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateUserPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateUserPoolClient",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:CreateUserPoolDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteIdentityProvider",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteResourceServer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteUserAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteUserPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteUserPoolClient",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DeleteUserPoolDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeIdentityProvider",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeResourceServer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeRiskConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeUserImportJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeUserPool",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeUserPoolClient",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:DescribeUserPoolDomain",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ForgetDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ForgotPassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:GetCSVHeader",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the CSV headers required for a user import job. Contains no information for any of the fields."
    },
    {
      "permission": "cognito-idp:GetDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the device attributes and metadata for the specified device; tied to user access process."
    },
    {
      "permission": "cognito-idp:GetGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the group metadata for the specified group; requires developer credentials."
    },
    {
      "permission": "cognito-idp:GetIdentityProviderByIdentifier",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:GetJWKS",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the JSON Web keys for the specified user pool; tied to user access process."
    },
    {
      "permission": "cognito-idp:GetOpenIdConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the OpenId configuration information for the specified user pool; tied to user access process."
    },
    {
      "permission": "cognito-idp:GetSigningCertificate",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "There is no example response available for this operation"
    },
    {
      "permission": "cognito-idp:GetUICustomization",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:GetUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the user attributes and metadata for a user; tied to user access process."
    },
    {
      "permission": "cognito-idp:GetUserAttributeVerificationCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the user attribute verification code for the specified attribute name; tied to user access process."
    },
    {
      "permission": "cognito-idp:GetUserPoolMfaConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can get the user pool multi-factor authentication (MFA) configuration."
    },
    {
      "permission": "cognito-idp:GlobalSignOut",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:InitiateAuth",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListDevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListIdentityProviders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListResourceServers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListUserImportJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListUserPoolClients",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListUserPools",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ListUsersInGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:ResendConfirmationCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:RespondToAuthChallenge",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:SetRiskConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:SetUICustomization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:SetUserMFAPreference",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:SetUserPoolMfaConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:SetUserSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:SignUp",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:StartUserImportJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:StopUserImportJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateAuthEventFeedback",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateDeviceStatus",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateIdentityProvider",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateResourceServer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateUserAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateUserPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:UpdateUserPoolClient",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:VerifySoftwareToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-idp:VerifyUserAttribute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:BulkPublish",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:DeleteDataset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:DescribeDataset",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:DescribeIdentityPoolUsage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:DescribeIdentityUsage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:GetBulkPublishDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Get the status of the last BulkPublish operation for an identity pool."
    },
    {
      "permission": "cognito-sync:GetCognitoEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the events and the corresponding Lambda functions associated with an identity pool."
    },
    {
      "permission": "cognito-sync:GetIdentityPoolConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets the configuration settings of an identity pool."
    },
    {
      "permission": "cognito-sync:ListDatasets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:ListIdentityPoolUsage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:ListRecords",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:QueryRecords",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:RegisterDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:SetCognitoEvents",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:SetDatasetConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:SetIdentityPoolConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:SubscribeToDataset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:UnsubscribeFromDataset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cognito-sync:UpdateRecords",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:BatchDetectDominantLanguage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:BatchDetectEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:BatchDetectKeyPhrases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:BatchDetectSentiment",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:BatchDetectSyntax",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:CreateDocumentClassifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a new document classifier that you can use to categorize documents."
    },
    {
      "permission": "comprehend:CreateEntityRecognizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create an entity recognizer using submitted files."
    },
    {
      "permission": "comprehend:DeleteDocumentClassifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DeleteEntityRecognizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeDocumentClassificationJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeDocumentClassifier",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeDominantLanguageDetectionJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeEntitiesDetectionJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeEntityRecognizer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeKeyPhrasesDetectionJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeSentimentDetectionJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DescribeTopicsDetectionJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DetectDominantLanguage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DetectEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DetectKeyPhrases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DetectSentiment",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DetectSyntax",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListDocumentClassificationJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListDocumentClassifiers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListDominantLanguageDetectionJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListEntitiesDetectionJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListEntityRecognizers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListKeyPhrasesDetectionJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListSentimentDetectionJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:ListTopicsDetectionJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StartDocumentClassificationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can start an asynchronous document classification job."
    },
    {
      "permission": "comprehend:StartDominantLanguageDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StartEntitiesDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StartKeyPhrasesDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StartSentimentDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StartTopicsDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StopDominantLanguageDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StopEntitiesDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StopKeyPhrasesDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:StopSentimentDetectionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehendmedical:DetectEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehendmedical:DetectPHI",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'iam:PassRole' to attach the applicable service role to manage creation of jobs."
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "List all the buckets."
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "List all the objects in a bucket."
    },
    {
      "permission": "config:BatchGetAggregateResourceConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:BatchGetResourceConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DeleteAggregationAuthorization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "It deletes the authorization granted to the specified configuration aggregator account in a specified region. It is a cross-account permission."
    },
    {
      "permission": "config:DeleteConfigRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete the specified AWS Config rule and all of its evaluation results."
    },
    {
      "permission": "config:DeleteConfigurationAggregator",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DeleteConfigurationRecorder",
      "grant": "Admin",
      "resourceType": "configurationRecorder",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage configuration recorder settings."
    },
    {
      "permission": "config:DeleteDeliveryChannel",
      "grant": "Admin",
      "resourceType": "deliveryChannel",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage delivery channel settings."
    },
    {
      "permission": "config:DeleteEvaluationResults",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DeletePendingAggregationRequest",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DeleteRetentionConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DeliverConfigSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can schedule config snapshot deliveries to S3."
    },
    {
      "permission": "config:DescribeAggregateComplianceByConfigRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DescribeAggregationAuthorizations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DescribeComplianceByConfigRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Describe rules."
    },
    {
      "permission": "config:DescribeComplianceByResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Describe rules."
    },
    {
      "permission": "config:DescribeConfigRuleEvaluationStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Describe rules."
    },
    {
      "permission": "config:DescribeConfigRules",
      "grant": "Metadata",
      "resourceType": "rule",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Describe rules."
    },
    {
      "permission": "config:DescribeConfigurationAggregatorSourcesStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DescribeConfigurationAggregators",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DescribeConfigurationRecorderStatus",
      "grant": "Metadata",
      "resourceType": "configurationRecorder",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config settings; allow Metadata to Describe these settings."
    },
    {
      "permission": "config:DescribeConfigurationRecorders",
      "grant": "Metadata",
      "resourceType": "configurationRecorder",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config settings; allow Metadata to Describe these settings."
    },
    {
      "permission": "config:DescribeDeliveryChannelStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config settings; allow Metadata to Describe these settings."
    },
    {
      "permission": "config:DescribeDeliveryChannels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config settings; allow Metadata to Describe these settings."
    },
    {
      "permission": "config:DescribePendingAggregationRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:DescribeRetentionConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:GetAggregateComplianceDetailsByConfigRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:GetAggregateConfigRuleComplianceSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:GetAggregateDiscoveredResourceCounts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:GetAggregateResourceConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:GetComplianceDetailsByConfigRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Get rules."
    },
    {
      "permission": "config:GetComplianceDetailsByResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Get rules."
    },
    {
      "permission": "config:GetComplianceSummaryByConfigRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Get rules."
    },
    {
      "permission": "config:GetComplianceSummaryByResourceType",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about config rules and resources; allow Metadata to Get rules."
    },
    {
      "permission": "config:GetDiscoveredResourceCounts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the number of each resource type and the total number of resources that AWS Config is recording in this region for your AWS account."
    },
    {
      "permission": "config:GetResourceConfigHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS config is only metadata about resources; allow Metadata to Get data."
    },
    {
      "permission": "config:GetResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS config is only metadata about resources; allow Metadata to Get data."
    },
    {
      "permission": "config:GetTagKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS config is only metadata about resources; allow Metadata to Get data."
    },
    {
      "permission": "config:ListAggregateDiscoveredResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:ListDiscoveredResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS config is only metadata about resources; allow Metadata to Get data."
    },
    {
      "permission": "config:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "rule",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:PutAggregationAuthorization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "It authorizes the aggregator account and region to collect data from the source account and region."
    },
    {
      "permission": "config:PutConfigRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can add or update an AWS Config rule for evaluating whether your AWS resources comply with desired configurations."
    },
    {
      "permission": "config:PutConfigurationAggregator",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:PutConfigurationRecorder",
      "grant": "Admin",
      "resourceType": "configurationRecorder",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage config recorder settings."
    },
    {
      "permission": "config:PutDeliveryChannel",
      "grant": "Admin",
      "resourceType": "deliveryChannel",
      "operationType": "createorupdate",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage delivery channel settings."
    },
    {
      "permission": "config:PutEvaluations",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:PutRetentionConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates and updates the retention configuration with details about retention period that AWS Config stores your historical information."
    },
    {
      "permission": "config:StartConfigRulesEvaluation",
      "grant": "Operator",
      "resourceType": "rule",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can run an on-demand evaluation for the specified Config rules against the last known configuration state of the resources."
    },
    {
      "permission": "config:StartConfigurationRecorder",
      "grant": "Operator",
      "resourceType": "configurationRecorder",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can start config recorders across regions."
    },
    {
      "permission": "config:StopConfigurationRecorder",
      "grant": "Operator",
      "resourceType": "configurationRecorder",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can stop config recorders across regions."
    },
    {
      "permission": "config:TagResource",
      "grant": "Operator",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "config:UntagResource",
      "grant": "Operator",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'iam:PassRole' to attach the applicable service role for Config settings."
    },
    {
      "permission": "connect:CreateInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:CreateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:DeleteUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:DescribeInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:DescribeUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:DescribeUserHierarchyGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:DescribeUserHierarchyStructure",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:DestroyInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:GetContactAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:GetCurrentMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:GetFederationToken",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:GetFederationTokens",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:GetMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListContactFlows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListHoursOfOperations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListPhoneNumbers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListQueues",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListRoutingProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListSecurityProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListUserHierarchyGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:ModifyInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:StartOutboundVoiceContact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:StopContact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UpdateContactAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UpdateUserHierarchy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UpdateUserIdentityInfo",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UpdateUserPhoneConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UpdateUserRoutingProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "connect:UpdateUserSecurityProfiles",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:DescribeDeliveryStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:ListDeliveryStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DescribeStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:ListStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:ActivatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:AddTags",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:CreatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:DeactivatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:DeletePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:DescribeObjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:DescribePipelines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:EvaluateExpression",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:GetAccountLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:GetPipelineDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:ListPipelines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:PollForTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:PutAccountLimits",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:PutPipelineDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:QueryObjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:RemoveTags",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:ReportTaskProgress",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:ReportTaskRunnerHeartbeat",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:SetStatus",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:SetTaskStatus",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datapipeline:ValidatePipelineDefinition",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ActivateHost",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:AddLocation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:AddSyncSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:CancelSyncTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:CancelTaskExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can cancel execution of a task (i.e. transfer files)."
    },
    {
      "permission": "datasync:CreateAgent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can activate an AWS DataSync agent that you have deployed on your host."
    },
    {
      "permission": "datasync:CreateLocationEfs",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create an endpoint for an Amazon EFS file system."
    },
    {
      "permission": "datasync:CreateLocationNfs",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates an endpoint for a Network File System (NFS) file system."
    },
    {
      "permission": "datasync:CreateLocationS3",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates an endpoint for an Amazon S3 bucket.For DataSync to access a destination S3 bucket, it needs an AWS Identity and Access Management (IAM) role that has the required permissions."
    },
    {
      "permission": "datasync:CreateSyncTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:CreateTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DeactivateHost",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DeleteAgent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DeleteLocation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DeleteSyncSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DeleteTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeAgent",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeHost",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeLocation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeLocationEfs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeLocationNfs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeLocationS3",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeSyncSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeSyncTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:DescribeTask",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns metadata about a task."
    },
    {
      "permission": "datasync:DescribeTaskExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns detailed metadata about a task that is being executed."
    },
    {
      "permission": "datasync:ListAgents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListHosts",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListLocations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListSyncSets",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListSyncTasks",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListTaskExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:ListTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:StartSyncTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:StartTaskExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:UpdateAgent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "datasync:UpdateTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeFileSystems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeMountTargetSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeMountTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeLogGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:CreateCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'dax:CreateCluster' to attach the applicable service role for cluster settings."
    },
    {
      "permission": "dax:DeleteCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'dax:DeleteCluster' to attach the applicable service role for cluster settings."
    },
    {
      "permission": "dax:DeleteItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:DescribeClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:GetItem",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:PutItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:Query",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:RebootNode",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:Scan",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'dax:Scan' to attach the applicable service role for cluster settings."
    },
    {
      "permission": "dax:TagResource",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:UntagResource",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dax:UpdateCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'dax:UpdateCluster' to attach the applicable service role for cluster settings."
    },
    {
      "permission": "dax:UpdateItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins need 'iam:PassRole' to attach the applicable service role for cluster settings."
    },
    {
      "permission": "devicefarm:CreateDevicePool",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:CreateInstanceProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:CreateNetworkProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:CreateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:CreateRemoteAccessSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Specifies and starts a remote access session."
    },
    {
      "permission": "devicefarm:CreateUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteDevicePool",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteInstanceProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteNetworkProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteRemoteAccessSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:DeleteUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetAccountSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns the number of unmetered iOS and/or unmetered Android devices that have been purchased by the account."
    },
    {
      "permission": "devicefarm:GetDevice",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetDeviceInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetDevicePool",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetDevicePoolCompatibility",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets information about compatibility with a device pool."
    },
    {
      "permission": "devicefarm:GetInstanceProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets information about a job."
    },
    {
      "permission": "devicefarm:GetNetworkProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetOfferingStatus",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetRemoteAccessSession",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetRun",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetSuite",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetTest",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:GetUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Contains a pre-signed S3 URL for the upload."
    },
    {
      "permission": "devicefarm:InstallToRemoteAccessSession",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Installs an application to the device in a remote access session."
    },
    {
      "permission": "devicefarm:ListArtifacts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListDeviceInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns information about private device instances associated with one or more AWS accounts."
    },
    {
      "permission": "devicefarm:ListDevicePools",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListDevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListInstanceProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListNetworkProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListOfferingPromotions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListOfferingTransactions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListRemoteAccessSessions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListRuns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListSamples",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListSuites",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListTests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListUniqueProblems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ListUploads",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Contains a pre-signed S3 URL for the upload."
    },
    {
      "permission": "devicefarm:PurchaseOffering",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Immediately purchases offerings for an AWS account. Offerings renew with the latest total purchased quantity for an offering. Unless the renewal was overridden"
    },
    {
      "permission": "devicefarm:RenewOffering",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:ScheduleRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:StopRemoteAccessSession",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:StopRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:UpdateDeviceInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:UpdateDevicePool",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:UpdateInstanceProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:UpdateNetworkProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "devicefarm:UpdateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:AllocateConnectionOnInterconnect",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage interconnects."
    },
    {
      "permission": "directconnect:AllocateHostedConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage hosted connections."
    },
    {
      "permission": "directconnect:AllocatePrivateVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:AllocatePublicVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:AssociateConnectionWithLag",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage link aggregation groups (LAGs)."
    },
    {
      "permission": "directconnect:AssociateHostedConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage hosted connections."
    },
    {
      "permission": "directconnect:AssociateVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:ConfirmConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage connections."
    },
    {
      "permission": "directconnect:ConfirmPrivateVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:ConfirmPublicVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:CreateBGPPeer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:CreateConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage connections."
    },
    {
      "permission": "directconnect:CreateDirectConnectGateway",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage direct connect gateway."
    },
    {
      "permission": "directconnect:CreateDirectConnectGatewayAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage direct connect gateway."
    },
    {
      "permission": "directconnect:CreateInterconnect",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage interconnects."
    },
    {
      "permission": "directconnect:CreateLag",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage link aggregation groups (LAGs)."
    },
    {
      "permission": "directconnect:CreatePrivateVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:CreatePublicVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:DeleteBGPPeer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:DeleteConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage connections."
    },
    {
      "permission": "directconnect:DeleteDirectConnectGateway",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage direct connect gateway."
    },
    {
      "permission": "directconnect:DeleteDirectConnectGatewayAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage direct connect gateway."
    },
    {
      "permission": "directconnect:DeleteInterconnect",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage interconnects."
    },
    {
      "permission": "directconnect:DeleteLag",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage link aggregation groups (LAGs)."
    },
    {
      "permission": "directconnect:DeleteVirtualInterface",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage virtual interfaces."
    },
    {
      "permission": "directconnect:DescribeConnectionLoa",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrival of LOA-CFAs restricted to admins."
    },
    {
      "permission": "directconnect:DescribeConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeConnectionsOnInterconnect",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeDirectConnectGatewayAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "List of all direct connect gateway and virtual private gateway (VGW) associations."
    },
    {
      "permission": "directconnect:DescribeDirectConnectGatewayAttachments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "List of all direct connect gateway and virtual interface (VIF) attachments."
    },
    {
      "permission": "directconnect:DescribeDirectConnectGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeHostedConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeInterconnectLoa",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated in favor of DescribeLoa but included to simplify policy document."
    },
    {
      "permission": "directconnect:DescribeInterconnects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeLags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeLoa",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrival of LOA-CFAs restricted to admins."
    },
    {
      "permission": "directconnect:DescribeLocations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeVirtualGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DescribeVirtualInterfaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:DisassociateConnectionFromLag",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage link aggregation groups (LAGs)."
    },
    {
      "permission": "directconnect:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "directconnect:UpdateLag",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage link aggregation groups (LAGs)."
    },
    {
      "permission": "directconnect:UpdateVirtualInterfaceAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpnGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for accepting virtual interfaces."
    },
    {
      "permission": "ds:AcceptSharedDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can accept the shared directory."
    },
    {
      "permission": "ds:AddIpRoutes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Higher risk permission since it can manage networking configurations on directory."
    },
    {
      "permission": "ds:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:AuthorizeApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:CancelSchemaExtension",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:CheckAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Not in API docs or IAM policy generator but in IAM DS read only managed policy."
    },
    {
      "permission": "ds:ConnectDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates AD Connectors."
    },
    {
      "permission": "ds:CreateAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Higher risk permission since it cannot be altered when completed."
    },
    {
      "permission": "ds:CreateComputer",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Adds a computer account to an existing directory."
    },
    {
      "permission": "ds:CreateConditionalForwarder",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates trust with another domain."
    },
    {
      "permission": "ds:CreateDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates Simple AD directories."
    },
    {
      "permission": "ds:CreateLogSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:CreateMicrosoftAD",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates Microsoft AD directories."
    },
    {
      "permission": "ds:CreateSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:CreateTrust",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates trust for DS Microsoft AD directories with another domain."
    },
    {
      "permission": "ds:DeleteConditionalForwarder",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes trust with another domain."
    },
    {
      "permission": "ds:DeleteDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes Simple AD directories."
    },
    {
      "permission": "ds:DeleteLogSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DeleteSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:DeleteTrust",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes trust for DS Microsoft AD directories with another domain."
    },
    {
      "permission": "ds:DeregisterEventTopic",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:DescribeConditionalForwarders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeDomainControllers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeEventTopics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeSharedDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeTrusts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DisableRadius",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Higher risk permission since it can remove MFA."
    },
    {
      "permission": "ds:DisableSso",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors -- only used for AD Connector Directories"
    },
    {
      "permission": "ds:EnableRadius",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Higher risk permission since it can create MFA."
    },
    {
      "permission": "ds:EnableSso",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors -- only used for AD Connector Directories"
    },
    {
      "permission": "ds:GetDirectoryLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only describes metadata configurations on directory"
    },
    {
      "permission": "ds:GetSnapshotLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only describes metadata configurations on directory"
    },
    {
      "permission": "ds:ListAuthorizedApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:ListIpRoutes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:ListLogSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:ListSchemaExtensions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:RegisterEventTopic",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:RejectSharedDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can reject the directory sharing request sent from another AWS account."
    },
    {
      "permission": "ds:RemoveIpRoutes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Higher risk permission since it can manage networking configurations on directory."
    },
    {
      "permission": "ds:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:ResetUserPassword",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can reset the password for any user in your AWS Managed Microsoft AD or Simple AD directory."
    },
    {
      "permission": "ds:RestoreFromSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:ShareDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can share the directory to other AWS account."
    },
    {
      "permission": "ds:StartSchemaExtension",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:UnauthorizeApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:UnshareDirectory",
      "grant": "Admin",
      "resourceType": "directory",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can stop the directory sharing between the directory owner and other consumer accounts."
    },
    {
      "permission": "ds:UpdateConditionalForwarder",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates trust with another domain."
    },
    {
      "permission": "ds:UpdateNumberOfDomainControllers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:UpdateRadius",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage configurations on existing directories and connectors."
    },
    {
      "permission": "ds:UpdateTrust",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:VerifyTrust",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only returns verification confirmation whether the Trust is established."
    },
    {
      "permission": "ec2:DescribeNetworkInterfaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for directory management."
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for directory management."
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for directory management."
    },
    {
      "permission": "sns:GetTopicAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for registering event topics."
    },
    {
      "permission": "sns:ListSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for registering event topics."
    },
    {
      "permission": "sns:ListSubscriptionsByTopic",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for registering event topics."
    },
    {
      "permission": "sns:ListTopics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for registering event topics."
    },
    {
      "permission": "dms:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "endpoint|replicationInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:CreateEndpoint",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:CreateEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to create an AWS DMS event notification subscription."
    },
    {
      "permission": "dms:CreateReplicationInstance",
      "grant": "Admin",
      "resourceType": "replicationInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:CreateReplicationSubnetGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:CreateReplicationTask",
      "grant": "Admin",
      "resourceType": "replicationInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:CreateReplicationTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:DeleteCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage certificates."
    },
    {
      "permission": "dms:DeleteEndpoint",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:DeleteEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to delete an AWS DMS event notification subscription."
    },
    {
      "permission": "dms:DeleteReplicationInstance",
      "grant": "Admin",
      "resourceType": "replicationInstance",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:DeleteReplicationSubnetGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:DeleteReplicationTask",
      "grant": "Admin",
      "resourceType": "replicationInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:DeleteReplicationTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage creation and deletion of configurations within DMS."
    },
    {
      "permission": "dms:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeEndpointTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeEndpoints",
      "grant": "Metadata",
      "resourceType": "endpoint",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeEventCategories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeEventSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeOrderableReplicationInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeRefreshSchemasStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeReplicationInstanceTaskLogs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeReplicationInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeReplicationSubnetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeReplicationTaskAssessmentResults",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeReplicationTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeSchemas",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:DescribeTableStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:ImportCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins are allowed to manage certificates."
    },
    {
      "permission": "dms:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:ModifyEndpoint",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:ModifyEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:ModifyReplicationInstance",
      "grant": "Operator",
      "resourceType": "replicationInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:ModifyReplicationSubnetGroup",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:ModifyReplicationTask",
      "grant": "Operator",
      "resourceType": "replicationInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:RebootReplicationInstance",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:RefreshSchemas",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:ReloadTables",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator are allowed to reload the target database table with the source data."
    },
    {
      "permission": "dms:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "endpoint|replicationInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dms:StartReplicationTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:StartReplicationTaskAssessment",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:StopReplicationTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage exisiting configurations."
    },
    {
      "permission": "dms:TestConnection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators are allowed to manage existing configurations."
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access."
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access."
    },
    {
      "permission": "dynamodb:BatchGetItem",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:BatchWriteItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:ConditionCheckItem",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:CreateBackup",
      "grant": "Admin",
      "resourceType": "backup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create and delete backup."
    },
    {
      "permission": "dynamodb:CreateGlobalTable",
      "grant": "Admin",
      "resourceType": "globalTable",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create and update global table."
    },
    {
      "permission": "dynamodb:CreateTable",
      "grant": "Admin",
      "resourceType": "table",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DeleteBackup",
      "grant": "Admin",
      "resourceType": "backup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create and delete backup."
    },
    {
      "permission": "dynamodb:DeleteItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DeleteTable",
      "grant": "Admin",
      "resourceType": "table",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeBackup",
      "grant": "Metadata",
      "resourceType": "backup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeContinuousBackups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeGlobalTable",
      "grant": "Metadata",
      "resourceType": "globalTable",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeGlobalTableSettings",
      "grant": "Metadata",
      "resourceType": "globalTable",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeLimits",
      "grant": "Metadata",
      "resourceType": "table",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeReservedCapacity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "See http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingIAMWithDDB.html#UsingWithActions"
    },
    {
      "permission": "dynamodb:DescribeReservedCapacityOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "See http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingIAMWithDDB.html#UsingWithActions"
    },
    {
      "permission": "dynamodb:DescribeStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeTable",
      "grant": "Metadata",
      "resourceType": "table",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:DescribeTimeToLive",
      "grant": "Metadata",
      "resourceType": "table",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:GetItem",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:GetRecords",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:GetShardIterator",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "GetShardIterator only makes sense with calls to GetRecords."
    },
    {
      "permission": "dynamodb:ListBackups",
      "grant": "Metadata",
      "resourceType": "backup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:ListGlobalTables",
      "grant": "Metadata",
      "resourceType": "globalTable",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:ListStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:ListTables",
      "grant": "Metadata",
      "resourceType": "table",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:ListTagsOfResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:PurchaseReservedCapacityOfferings",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "See http://docs.aws.amazon.com/amazondynamodb/latest/developerguide/UsingIAMWithDDB.html#UsingWithActions"
    },
    {
      "permission": "dynamodb:PutItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:Query",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:RestoreTableFromBackup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:RestoreTableToPointInTime",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can restore the specified table to the specified point in time within EarliestRestorableDateTime and LatestRestorableDateTime."
    },
    {
      "permission": "dynamodb:Scan",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:TagResource",
      "grant": "Operator",
      "resourceType": "table",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "dynamodb:TransactGetItems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:TransactWriteItems",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:UntagResource",
      "grant": "Operator",
      "resourceType": "table",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "dynamodb:UpdateContinuousBackups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:UpdateGlobalTable",
      "grant": "Admin",
      "resourceType": "globalTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create and update global table."
    },
    {
      "permission": "dynamodb:UpdateGlobalTableSettings",
      "grant": "Admin",
      "resourceType": "globalTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:UpdateItem",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:UpdateTable",
      "grant": "Admin",
      "resourceType": "table",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "dynamodb:UpdateTimeToLive",
      "grant": "Admin",
      "resourceType": "table",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "acm:ListCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for ELB launches."
    },
    {
      "permission": "application-autoscaling:DeleteScalingPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "application-autoscaling:DeleteScheduledAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:DeregisterScalableTarget",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:DescribeScalableTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:DescribeScalingActivities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:DescribeScalingPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:DescribeScheduledActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:PutScalingPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "application-autoscaling:PutScheduledAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "application-autoscaling:RegisterScalableTarget",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:AttachInstances",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:AttachLoadBalancerTargetGroups",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:AttachLoadBalancers",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:BatchDeleteScheduledAction",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:BatchPutScheduledUpdateGroupAction",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:CompleteLifecycleAction",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows custom steps in the autoscaling lifecycle process"
    },
    {
      "permission": "autoscaling:CreateAutoScalingGroup",
      "grant": "Whitelist",
      "resourceType": "autoScalingGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:CreateLaunchConfiguration",
      "grant": "Whitelist",
      "resourceType": "launchConfiguration",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:CreateOrUpdateScalingTrigger",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:CreateOrUpdateTags",
      "grant": "Operator",
      "resourceType": "autoScalingGroup",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:CreateScalingPlan",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can create autoscaling plan."
    },
    {
      "permission": "autoscaling:DeleteAutoScalingGroup",
      "grant": "Whitelist",
      "resourceType": "autoScalingGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:DeleteLaunchConfiguration",
      "grant": "Whitelist",
      "resourceType": "launchConfiguration",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:DeleteLifecycleHook",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:DeleteNotificationConfiguration",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can control monitoring & notification of the autoscaling group."
    },
    {
      "permission": "autoscaling:DeletePolicy",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:DeleteScalingPlan",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can delete autoscaling plan."
    },
    {
      "permission": "autoscaling:DeleteScheduledAction",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:DeleteTags",
      "grant": "Operator",
      "resourceType": "autoScalingGroup",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DeleteTrigger",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeAccountLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeAdjustmentTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeAutoScalingGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeAutoScalingInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeAutoScalingNotificationTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeLaunchConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeLifecycleHookTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeLifecycleHooks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeLoadBalancerTargetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeLoadBalancers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeMetricCollectionTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeNotificationConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeScalingActivities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeScalingPlanResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the scalable resources in the specified scaling plan."
    },
    {
      "permission": "autoscaling:DescribeScalingPlans",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the specified scaling plans or all of your scaling plans."
    },
    {
      "permission": "autoscaling:DescribeScalingProcessTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeScheduledActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeTerminationPolicyTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DescribeTriggers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:DetachInstances",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:DetachLoadBalancerTargetGroups",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:DetachLoadBalancers",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:DisableMetricsCollection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can control monitoring & notification of the autoscaling group."
    },
    {
      "permission": "autoscaling:EnableMetricsCollection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can control monitoring & notification of the autoscaling group."
    },
    {
      "permission": "autoscaling:EnterStandby",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:ExecutePolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can execute a policy that was defined by an Admin."
    },
    {
      "permission": "autoscaling:ExitStandby",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:PutLifecycleHook",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:PutNotificationConfiguration",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can control monitoring & notification of the autoscaling group."
    },
    {
      "permission": "autoscaling:PutScalingPolicy",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:PutScheduledUpdateGroupAction",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": "Admins can change the autoscaling process."
    },
    {
      "permission": "autoscaling:RecordLifecycleActionHeartbeat",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:ResumeProcesses",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:SetDesiredCapacity",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "autoscaling:SetInstanceHealth",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:SetInstanceProtection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage instances in an autoscaling group but not change its config."
    },
    {
      "permission": "autoscaling:SuspendProcesses",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:TerminateInstanceInAutoScalingGroup",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "autoscaling:UpdateAutoScalingGroup",
      "grant": "Whitelist",
      "resourceType": "autoScalingGroup",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAutoScalingAdministration",
      "help": ""
    },
    {
      "permission": "aws-marketplace:BatchMeterUsage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators may report software usage."
    },
    {
      "permission": "aws-marketplace:GetEntitlements",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Viewing entitlement of a customer to a given product. http://docs.aws.amazon.com/marketplaceentitlement/latest/APIReference/Welcome.html."
    },
    {
      "permission": "aws-marketplace:MeterUsage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators may report software usage."
    },
    {
      "permission": "aws-marketplace:ResolveCustomer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used by SaaS application and returns customer identifier and product code based on registration token."
    },
    {
      "permission": "aws-marketplace:Subscribe",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsMarketplaceSubscriptionAdministration",
      "help": "Administrators may subscribe to marketplace software"
    },
    {
      "permission": "aws-marketplace:Unsubscribe",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsMarketplaceSubscriptionAdministration",
      "help": "Administrators may subscribe to marketplace software"
    },
    {
      "permission": "aws-marketplace:ViewSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Viewing marketplace subscriptions is required for server management if the marketplace is used."
    },
    {
      "permission": "cloudwatch:DescribeAlarmHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per EC2 ReadOnly policy"
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per EC2 ReadOnly policy"
    },
    {
      "permission": "cloudwatch:DescribeAlarmsForMetric",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per EC2 ReadOnly policy"
    },
    {
      "permission": "cloudwatch:GetMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This allows GetMetricData API to retrieve as many as metrics data and to perform mathematical expressions on this data."
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per EC2 ReadOnly policy"
    },
    {
      "permission": "cloudwatch:ListMetrics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per EC2 ReadOnly policy"
    },
    {
      "permission": "ec2-reports:ViewInstanceUsageReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Obscure permission http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/usage-reports.html#iam-access-ec2-reports"
    },
    {
      "permission": "ec2-reports:ViewReservedInstanceUtilizationReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Obscure permission http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/usage-reports.html#iam-access-ec2-reports"
    },
    {
      "permission": "ec2:AcceptReservedInstancesExchangeQuote",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage their own reserved instances (but cannot resell them)."
    },
    {
      "permission": "ec2:AllocateAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can allocate new elastic IP addresses; this is considered safe as the proper routing still needs to be configured for public access."
    },
    {
      "permission": "ec2:AllocateHosts",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:AssignIpv6Addresses",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Private IP addresses are within the allocated space to the account so can be safely managed by the account."
    },
    {
      "permission": "ec2:AssignPrivateIpAddresses",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Private IP addresses are within the allocated space to the account so can be safely managed by the account."
    },
    {
      "permission": "ec2:AssociateAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can associate elastic IP addresses; this is considered safe as the proper routing still needs to be configured for public access."
    },
    {
      "permission": "ec2:AssociateIamInstanceProfile",
      "grant": "Admin",
      "resourceType": "instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage IAM instance profile associations for existing instances."
    },
    {
      "permission": "ec2:AttachNetworkInterface",
      "grant": "Admin",
      "resourceType": "networkInterface",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Network interfaces can be safely used by the account inside the VPC context."
    },
    {
      "permission": "ec2:AttachVolume",
      "grant": "Admin",
      "resourceType": "Volume|instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:BundleInstance",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM export"
    },
    {
      "permission": "ec2:BidEvictedEvent",
      "grant": "Admin",
      "resourceType": "instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can update or terminate spot instances"
    },
    {
      "permission": "ec2:CancelBundleTask",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM export"
    },
    {
      "permission": "ec2:CancelConversionTask",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM export"
    },
    {
      "permission": "ec2:CancelExportTask",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM export"
    },
    {
      "permission": "ec2:CancelImportTask",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM import"
    },
    {
      "permission": "ec2:CancelReservedInstancesListing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Reserved instance reselling is at the cluster level."
    },
    {
      "permission": "ec2:CancelSpotFleetRequests",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CancelSpotInstanceRequests",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can safely use spot instances within their VPC."
    },
    {
      "permission": "ec2:ConfirmProductInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only relevant to AMI marketplace sellers."
    },
    {
      "permission": "ec2:CopyFpgaImage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Copies the specified Amazon FPGA Image (AFI) to the current region."
    },
    {
      "permission": "ec2:CopyImage",
      "grant": "Whitelist",
      "resourceType": "ami",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional image management. Copies image between regions not across accounts"
    },
    {
      "permission": "ec2:CopySnapshot",
      "grant": "Operator",
      "resourceType": "Snapshot",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk operation to copy data within the same account."
    },
    {
      "permission": "ec2:CreateFpgaImage",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional FPGA image management. https://aws.amazon.com/ec2/instance-types/f1/"
    },
    {
      "permission": "ec2:CreateImage",
      "grant": "Whitelist",
      "resourceType": "ami",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional image management. Creates a new AMI from an instance in the account."
    },
    {
      "permission": "ec2:CreateInstanceExportTask",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM export."
    },
    {
      "permission": "ec2:CreateKeyPair",
      "grant": "Admin",
      "resourceType": "keyPair",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators use key pairs when starting new instances. This should be moved to an option in the future when Turbot supports non-key pair based login."
    },
    {
      "permission": "ec2:CreateLaunchTemplate",
      "grant": "Admin",
      "resourceType": "launchTemplate",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateLaunchTemplateVersion",
      "grant": "Admin",
      "resourceType": "launchTemplateVersion",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateNetworkInterface",
      "grant": "Admin",
      "resourceType": "networkInterface",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Network interfaces can be safely used by the account inside the VPC context."
    },
    {
      "permission": "ec2:CreatePlacementGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Servers can be safely placed within cluster managed networks."
    },
    {
      "permission": "ec2:CreateReservedInstancesListing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Reserved instance reselling is at the cluster level."
    },
    {
      "permission": "ec2:CreateSnapshot",
      "grant": "Operator",
      "resourceType": "Snapshot",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk operation to backup data within the same account."
    },
    {
      "permission": "ec2:CreateSnapshots",
      "grant": "Operator",
      "resourceType": "Snapshot",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk operation to backup data within the same account."
    },
    {
      "permission": "ec2:CreateSpotDatafeedSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can safely use spot instances within their VPC."
    },
    {
      "permission": "ec2:CreateTags",
      "grant": "Operator",
      "resourceType": "Instance|Snapshot|Volume|launchTemplate|ami|networkInterface|keyPair",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Tags are low risk for management in Turbot since accounts are the isolation boundary; not tags."
    },
    {
      "permission": "ec2:CreateVolume",
      "grant": "Admin",
      "resourceType": "Volume",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Storage management is safe within the account."
    },
    {
      "permission": "ec2:DeleteFpgaImage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes the specified Amazon FPGA Image."
    },
    {
      "permission": "ec2:DeleteKeyPair",
      "grant": "Admin",
      "resourceType": "keyPair",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteLaunchTemplate",
      "grant": "Admin",
      "resourceType": "launchTemplate",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteLaunchTemplateVersions",
      "grant": "Admin",
      "resourceType": "launchTemplateVersion",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteNetworkInterface",
      "grant": "Admin",
      "resourceType": "networkInterface",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Network interfaces can be safely used by the account inside the VPC context."
    },
    {
      "permission": "ec2:DeletePlacementGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteSnapshot",
      "grant": "Admin",
      "resourceType": "Snapshot",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletion of snapshots is limited to Admin though creation is open to Operator."
    },
    {
      "permission": "ec2:DeleteSpotDatafeedSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteTags",
      "grant": "Operator",
      "resourceType": "Instance|Snapshot|Volume|launchTemplate|ami|networkInterface|keyPair",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Tags are low risk for management in Turbot since accounts are the isolation boundary; not tags. Most deletions are denied to operator but tags are a low risk management activity even for deletion."
    },
    {
      "permission": "ec2:DeleteVolume",
      "grant": "Admin",
      "resourceType": "Volume",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeregisterImage",
      "grant": "Whitelist",
      "resourceType": "ami",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional image management. Deregisters an image preventing further launches"
    },
    {
      "permission": "ec2:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeAvailabilityZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeBundleTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeClassicLinkInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeConversionTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeElasticGpus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeExportTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeFpgaImageAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the specified attribute of the specified Amazon FPGA Image."
    },
    {
      "permission": "ec2:DescribeFpgaImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeHostReservationOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeHostReservations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeHosts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeIamInstanceProfileAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeIdFormat",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeIdentityIdFormat",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeImageAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeImportImageTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeImportSnapshotTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstanceAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstanceStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeKeyPairs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLaunchTemplateVersions",
      "grant": "Metadata",
      "resourceType": "launchTemplateVersion",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLaunchTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLicenses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Note: Not currently in use by AWS - http://aws.amazon.com/blogs/aws/bring_your_own_ea_windows_server_license_to_ec2/"
    },
    {
      "permission": "ec2:DescribeMovingAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkInterfaceAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkInterfacePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the permissions of network interfaces."
    },
    {
      "permission": "ec2:DescribeNetworkInterfaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribePlacementGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeRegions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstancesListings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstancesModifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstancesOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeScheduledInstanceAvailability",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeScheduledInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroupReferences",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSnapshotAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotDatafeedSubscription",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotFleetInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotFleetRequestHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotFleetRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotInstanceRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotPriceHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeStaleSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumeAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumeStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumesModifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DetachClassicLinkVpc",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DetachNetworkInterface",
      "grant": "Admin",
      "resourceType": "networkInterface",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Network interfaces can be safely used by the account inside the VPC context."
    },
    {
      "permission": "ec2:DetachVolume",
      "grant": "Admin",
      "resourceType": "Volume|instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DisassociateAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can disassociate elastic IP addresses."
    },
    {
      "permission": "ec2:DisassociateIamInstanceProfile",
      "grant": "Admin",
      "resourceType": "instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage IAM instance profile associations for existing instances."
    },
    {
      "permission": "ec2:EnableVolumeIO",
      "grant": "Admin",
      "resourceType": "Volume",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:GetConsoleOutput",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows viewing of console data from machines; helpful for monitoring & investigating system during bootup. Considered to be metadata not ReadOnly since systems should not be logging sensitive information and it's a key part of troubleshooting before needing access to the actual machine (which would obviously be at least ReadOnly)."
    },
    {
      "permission": "ec2:GetConsoleScreenshot",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows viewing of on-demand screenshot of instance console for machines which is helpful for monitoring & investigating systems when they become unreachable via RDS and SSH. Considered to be metadata and not ReadOnly since it's a key part of troubleshooting when the instance is unreachable."
    },
    {
      "permission": "ec2:GetHostReservationPurchasePreview",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows preview of host reservation purchase but does not result in offering being purchased."
    },
    {
      "permission": "ec2:GetLaunchTemplateData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Launch template data contains metadata about the EC2 instance."
    },
    {
      "permission": "ec2:GetPasswordData",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for launch of Windows machines and used with key pairs."
    },
    {
      "permission": "ec2:GetReservedInstancesExchangeQuote",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ImportImage",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM import"
    },
    {
      "permission": "ec2:ImportInstance",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM import"
    },
    {
      "permission": "ec2:ImportKeyPair",
      "grant": "Admin",
      "resourceType": "keyPair",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators use key pairs when starting new instances. This should be moved to an option in the future when Turbot supports non-key pair based login."
    },
    {
      "permission": "ec2:ImportSnapshot",
      "grant": "Whitelist",
      "resourceType": "Snapshot",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM import"
    },
    {
      "permission": "ec2:ImportVolume",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional VM import"
    },
    {
      "permission": "ec2:ModifyFpgaImageAttribute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Modifies the specified attributes(description | name | loadPermission | productCodes) of the specified Amazon FPGA Image."
    },
    {
      "permission": "ec2:ModifyHosts",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyIdFormat",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyIdentityIdFormat",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyImageAttribute",
      "grant": "Whitelist",
      "resourceType": "ami",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAmiPublishingAdministration",
      "help": "Optional image attribute management"
    },
    {
      "permission": "ec2:ModifyInstanceAttribute",
      "grant": "Admin",
      "resourceType": "Instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage their own instances."
    },
    {
      "permission": "ec2:ModifyInstanceMetadataOptions",
      "grant": "Admin",
      "resourceType": "Instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyInstancePlacement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyLaunchTemplate",
      "grant": "Admin",
      "resourceType": "launchTemplate",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyNetworkInterfaceAttribute",
      "grant": "Admin",
      "resourceType": "networkInterface",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Network interfaces can be safely used by the account inside the VPC context."
    },
    {
      "permission": "ec2:ModifyReservedInstances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage their own reserved instances (but cannot resell them)."
    },
    {
      "permission": "ec2:ModifySnapshotAttribute",
      "grant": "Admin",
      "resourceType": "Snapshot",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allows for cross-account access."
    },
    {
      "permission": "ec2:ModifySpotFleetRequest",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyVolume",
      "grant": "Admin",
      "resourceType": "Volume",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Within account storage performance changes."
    },
    {
      "permission": "ec2:ModifyVolumeAttribute",
      "grant": "Admin",
      "resourceType": "Volume",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Within account storage performance changes."
    },
    {
      "permission": "ec2:MonitorInstances",
      "grant": "Admin",
      "resourceType": "Instance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Monitoring frequency is managed by accounts."
    },
    {
      "permission": "ec2:MoveAddressToVpc",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:PurchaseHostReservation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage their own dedicated hosts."
    },
    {
      "permission": "ec2:PurchaseReservedInstancesOffering",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage their own reserved instances (but cannot resell them)."
    },
    {
      "permission": "ec2:PurchaseScheduledInstances",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Long term subscriptions are managed by owners."
    },
    {
      "permission": "ec2:RebootInstances",
      "grant": "Operator",
      "resourceType": "Instance",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can start stop and reboot existing instances."
    },
    {
      "permission": "ec2:RegisterImage",
      "grant": "Whitelist",
      "resourceType": "ami",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsLocalAmisAdministration",
      "help": "Optional image management. Registers an AMI for launching; typically done automatically as part of CreateImage"
    },
    {
      "permission": "ec2:ReleaseAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can release elastic IP addresses."
    },
    {
      "permission": "ec2:ReleaseHosts",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ReplaceIamInstanceProfileAssociation",
      "grant": "Admin",
      "resourceType": "instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage IAM instance profile associations for existing instances."
    },
    {
      "permission": "ec2:ReportInstanceStatus",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can report bad instances to AWS support."
    },
    {
      "permission": "ec2:RequestSpotFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:RequestSpotInstances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can safely use spot instances within their VPC."
    },
    {
      "permission": "ec2:ResetFpgaImageAttribute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Resets the the load permission attribute."
    },
    {
      "permission": "ec2:ResetImageAttribute",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "ec2PermissionsLevelsAmiPublishingAdministration",
      "help": "Optional image attribute management"
    },
    {
      "permission": "ec2:ResetInstanceAttribute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Instances are managed by accounts."
    },
    {
      "permission": "ec2:ResetNetworkInterfaceAttribute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Network interfaces can be safely used by the account inside the VPC context."
    },
    {
      "permission": "ec2:ResetSnapshotAttribute",
      "grant": "Admin",
      "resourceType": "Snapshot",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:RestoreAddressToClassic",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:RunInstances",
      "grant": "Admin",
      "resourceType": "Instance|networkInterface|volume",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only Admin can create new instances."
    },
    {
      "permission": "ec2:RunScheduledInstances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:StartInstances",
      "grant": "Operator",
      "resourceType": "Instance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can start stop and reboot existing instances."
    },
    {
      "permission": "ec2:StopInstances",
      "grant": "Operator",
      "resourceType": "Instance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can start stop and reboot existing instances."
    },
    {
      "permission": "ec2:TerminateInstances",
      "grant": "Admin",
      "resourceType": "Instance|networkInterface",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only Admin can terminate instances."
    },
    {
      "permission": "ec2:UnassignIpv6Addresses",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Private IP addresses are within the allocated space to the account so can be safely managed by the account."
    },
    {
      "permission": "ec2:UnassignPrivateIpAddresses",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Private IP addresses are within the allocated space to the account so can be safely managed by the account."
    },
    {
      "permission": "ec2:UnmonitorInstances",
      "grant": "Admin",
      "resourceType": "Instance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Monitoring frequency is managed by accounts."
    },
    {
      "permission": "elasticloadbalancing:AddListenerCertificates",
      "grant": "Admin",
      "resourceType": "loadBalancerListener",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can add specified certificate to the specified secure listener."
    },
    {
      "permission": "elasticloadbalancing:AddTags",
      "grant": "Operator",
      "resourceType": "classicLoadBalancer|applicationLoadBalancer|networkLoadBalancer|targetGroup|gatewayLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags metadata about ELB."
    },
    {
      "permission": "elasticloadbalancing:ApplySecurityGroupsToLoadBalancer",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:AttachLoadBalancerToSubnets",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:ConfigureHealthCheck",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateAppCookieStickinessPolicy",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateLBCookieStickinessPolicy",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateListener",
      "grant": "Admin",
      "resourceType": "loadBalancerListener",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateLoadBalancer",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer|applicationLoadBalancer|networkLoadBalancer|gatewayLoadBalancer",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateLoadBalancerListeners",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateLoadBalancerListeners",
      "grant": "Admin",
      "resourceType": "classicLoadBalancerListener",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateLoadBalancerPolicy",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateRule",
      "grant": "Admin",
      "resourceType": "listenerRule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:CreateTargetGroup",
      "grant": "Admin",
      "resourceType": "targetGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeleteListener",
      "grant": "Admin",
      "resourceType": "loadBalancerListener",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeleteLoadBalancer",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer|applicationLoadBalancer|networkLoadBalancer|gatewayLoadBalancer",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeleteLoadBalancerListeners",
      "grant": "Admin",
      "resourceType": "classicLoadBalancerListener",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeleteLoadBalancerPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeleteRule",
      "grant": "Admin",
      "resourceType": "listenerRule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeleteTargetGroup",
      "grant": "Admin",
      "resourceType": "targetGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage individual instances on the ELB as part of being able to stop start and reboot servers."
    },
    {
      "permission": "elasticloadbalancing:DeregisterTargets",
      "grant": "Operator",
      "resourceType": "targetGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage individual instances on the ALB as part of being able to stop start and reboot servers."
    },
    {
      "permission": "elasticloadbalancing:DescribeAccountLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeInstanceHealth",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeListenerCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeListeners",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeLoadBalancerAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeLoadBalancerPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeLoadBalancers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeSSLPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeTargetGroupAttributes",
      "grant": "Metadata",
      "resourceType": "targetGroup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeTargetGroups",
      "grant": "Metadata",
      "resourceType": "targetGroup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DescribeTargetHealth",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:DetachLoadBalancerFromSubnets",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:DisableAvailabilityZonesForLoadBalancer",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:EnableAvailabilityZonesForLoadBalancer",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:ModifyListener",
      "grant": "Admin",
      "resourceType": "loadBalancerListener",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:ModifyLoadBalancerAttributes",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer|applicationLoadBalancer|networkLoadBalancer|gatewayLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:ModifyRule",
      "grant": "Admin",
      "resourceType": "listenerRule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:ModifyTargetGroup",
      "grant": "Admin",
      "resourceType": "targetGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:ModifyTargetGroupAttributes",
      "grant": "Admin",
      "resourceType": "targetGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
      "grant": "Operator",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage individual instances on the ELB as part of being able to stop start and reboot servers."
    },
    {
      "permission": "elasticloadbalancing:RegisterTargets",
      "grant": "Operator",
      "resourceType": "targetGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage individual instances on the ELB as part of being able to stop start and reboot servers."
    },
    {
      "permission": "elasticloadbalancing:RemoveListenerCertificates",
      "grant": "Admin",
      "resourceType": "loadBalancerListener",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can remove the specified certificate from the specified secure listener."
    },
    {
      "permission": "elasticloadbalancing:RemoveTags",
      "grant": "Operator",
      "resourceType": "classicLoadBalancer|applicationLoadBalancer|networkLoadBalancer|targetGroup|gatewayLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags metadata about ELB."
    },
    {
      "permission": "elasticloadbalancing:SetIpAddressType",
      "grant": "Admin",
      "resourceType": "applicationLoadBalancer|networkLoadBalancer|gatewayLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetLoadBalancerListenerSSLCertificate",
      "grant": "Admin",
      "resourceType": "classicLoadBalancerListener",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
      "grant": "Admin",
      "resourceType": "classicLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetLoadBalancerPoliciesOfListener",
      "grant": "Admin",
      "resourceType": "classicLoadBalancerListener",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ELB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetRulePriorities",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetSecurityGroups",
      "grant": "Admin",
      "resourceType": "applicationLoadBalancer|networkLoadBalancer|gatewayLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetSubnets",
      "grant": "Admin",
      "resourceType": "applicationLoadBalancer|networkLoadBalancer|gatewayLoadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Accounts can manage ALB configuration within cluster defined network boundaries."
    },
    {
      "permission": "elasticloadbalancing:SetWebAcl",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "marketplacecommerceanalytics:GenerateDataSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators may access product and customer data on the AWS Marketplace."
    },
    {
      "permission": "marketplacecommerceanalytics:StartSupportDataExport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators may access product and customer data on the AWS Marketplace."
    },
    {
      "permission": "ecr:BatchGetImage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:BatchDeleteImage",
      "grant": "Admin",
      "resourceType": "image",
      "operationType": "delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:CompleteLayerUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:CreateRepository",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:DeleteLifecyclePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:DeleteRepository",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:DeleteRepositoryPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:DescribeImageScanFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:DescribeImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:DescribeRepositories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:GetAuthorizationToken",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Authenticate with the registry to allow docker pull, push etc commands."
    },
    {
      "permission": "ecr:GetDownloadUrlForLayer",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:GetLifecyclePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:GetLifecyclePolicyPreview",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:GetManifest",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Unknown action (but listed in AWS policy generator), assume it's an operation used by the Amazon ECR proxy only."
    },
    {
      "permission": "ecr:GetRepositoryPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:InitiateLayerUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:ListImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:PutImage",
      "grant": "Admin",
      "resourceType": "image",
      "operationType": "createorupdate",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:PutImageScanningConfiguration",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:PutImageTagMutability",
      "grant": "Admin",
      "resourceType": "repository",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:PutLifecyclePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:SetRepositoryPolicy",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows cross-account access."
    },
    {
      "permission": "ecr:StartImageScan",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:StartLifecyclePolicyPreview",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can preview before creating a lifecycle policy."
    },
    {
      "permission": "ecr:TagResource",
      "grant": "Operator",
      "resourceType": "repository",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:UntagResource",
      "grant": "Operator",
      "resourceType": "repository",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecr:UploadLayerPart",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:CreateCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:CreateService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DeleteAccountSetting",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DeleteAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DeleteCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DeleteService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DeregisterContainerInstance",
      "grant": "Admin",
      "resourceType": "containerInstance",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DeregisterTaskDefinition",
      "grant": "Admin",
      "resourceType": "taskDefinition",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DescribeClusters",
      "grant": "Metadata",
      "resourceType": "cluster",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DescribeContainerInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DescribeServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DescribeTaskDefinition",
      "grant": "Metadata",
      "resourceType": "taskDefinition",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DescribeTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:DiscoverPollEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent."
    },
    {
      "permission": "ecs:ListAccountSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListClusters",
      "grant": "Metadata",
      "resourceType": "cluster",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListContainerInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListTaskDefinitionFamilies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListTaskDefinitions",
      "grant": "Metadata",
      "resourceType": "taskDefinition",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:ListTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:Poll",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent."
    },
    {
      "permission": "ecs:PutAccountSetting",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "The root user has the ability to opt in or opt out any specific IAM role or user on the account."
    },
    {
      "permission": "ecs:PutAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:RegisterContainerInstance",
      "grant": "Admin",
      "resourceType": "containerInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent."
    },
    {
      "permission": "ecs:RegisterTaskDefinition",
      "grant": "Admin",
      "resourceType": "taskDefinition",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:RunTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:StartTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:StartTelemetrySession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent."
    },
    {
      "permission": "ecs:StopTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:SubmitContainerStateChange",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent."
    },
    {
      "permission": "ecs:SubmitTaskStateChange",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action is only used by the Amazon EC2 Container Service agent, and it is not intended for use outside of the agent."
    },
    {
      "permission": "ecs:TagResource",
      "grant": "Operator",
      "resourceType": "cluster|taskDefinition",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:UntagResource",
      "grant": "Operator",
      "resourceType": "cluster|taskDefinition",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:UpdateContainerAgent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:UpdateContainerInstancesState",
      "grant": "Admin",
      "resourceType": "containerInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ecs:UpdateService",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:CreateFileSystem",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:CreateMountTarget",
      "grant": "Admin",
      "resourceType": "mountTarget",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:CreateTags",
      "grant": "Operator",
      "resourceType": "fileSystem",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tagging and modifying existing file systems."
    },
    {
      "permission": "elasticfilesystem:DeleteFileSystem",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DeleteMountTarget",
      "grant": "Admin",
      "resourceType": "mountTarget",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DeleteTags",
      "grant": "Operator",
      "resourceType": "fileSystem",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tagging and modifying existing file systems."
    },
    {
      "permission": "elasticfilesystem:DescribeFileSystems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeMountTargetSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeMountTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticfilesystem:ModifyMountTargetSecurityGroups",
      "grant": "Operator",
      "resourceType": "mountTarget",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tagging and modifying existing file systems."
    },
    {
      "permission": "elasticfilesystem:UpdateFileSystem",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:CreateCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create an Amazon EKS control plane."
    },
    {
      "permission": "eks:CreateFargateProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "Create",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:CreateNodegroup",
      "grant": "Admin",
      "resourceType": "nodeGroup",
      "operationType": "Create",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DeleteCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DeleteFargateProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "Delete",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DeleteNodegroup",
      "grant": "Admin",
      "resourceType": "nodeGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DescribeCluster",
      "grant": "Metadata",
      "resourceType": "cluster",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DescribeFargateProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "Read",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DescribeNodegroup",
      "grant": "Metadata",
      "resourceType": "nodeGroup",
      "operationType": "Read",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:DescribeUpdate",
      "grant": "Metadata",
      "resourceType": "cluster",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:ListClusters",
      "grant": "Metadata",
      "resourceType": "cluster",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:ListFargateProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "Read",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:ListNodegroups",
      "grant": "Metadata",
      "resourceType": "nodeGroup",
      "operationType": "Read",
      "fullCmdbUpdate": false,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "cluster|nodeGroup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:ListUpdates",
      "grant": "Metadata",
      "resourceType": "cluster",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:TagResource",
      "grant": "Operator",
      "resourceType": "cluster|nodeGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:UntagResource",
      "grant": "Operator",
      "resourceType": "cluster|nodeGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:UpdateClusterConfig",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:UpdateClusterVersion",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:UpdateNodegroupConfig",
      "grant": "Admin",
      "resourceType": "nodeGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "eks:UpdateNodegroupVersion",
      "grant": "Admin",
      "resourceType": "nodeGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can associate an existing EKS service-linked role to create a cluster."
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "ec2:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "ec2:DescribeAvailabilityZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "elasticache:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "cacheCluster|snapshot",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags and reboot the cluster."
    },
    {
      "permission": "elasticache:AuthorizeCacheSecurityGroupIngress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage network ingress to a cache security group. Applications using ElastiCache must be running on Amazon EC2, and Amazon EC2 security groups are used as the authorization mechanism."
    },
    {
      "permission": "elasticache:CopySnapshot",
      "grant": "Operator",
      "resourceType": "snapshot",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create snapshots, but deletion is restricted to Admins."
    },
    {
      "permission": "elasticache:CreateCacheCluster",
      "grant": "Admin",
      "resourceType": "cacheCluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:CreateCacheParameterGroup",
      "grant": "Admin",
      "resourceType": "cacheParameterGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:CreateCacheSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cache security groups are only used when you are creating a cluster outside of an Amazon Virtual Private Cloud (Amazon VPC)."
    },
    {
      "permission": "elasticache:CreateCacheSubnetGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage custom subnet groups. Turbot managed subnet groups cannot be automatically protected, but should not be modified by users."
    },
    {
      "permission": "elasticache:CreateReplicationGroup",
      "grant": "Admin",
      "resourceType": "replicationGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:CreateSnapshot",
      "grant": "Operator",
      "resourceType": "snapshot",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create snapshots, but deletion is restricted to Admins."
    },
    {
      "permission": "elasticache:DecreaseReplicaCount",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can decrease AmazonElastiCache replica count."
    },
    {
      "permission": "elasticache:DeleteCacheCluster",
      "grant": "Admin",
      "resourceType": "cacheCluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:DeleteCacheParameterGroup",
      "grant": "Admin",
      "resourceType": "cacheParameterGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:DeleteCacheSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:DeleteCacheSubnetGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage custom subnet groups. Turbot managed subnet groups cannot be automatically protected, but should not be modified by users."
    },
    {
      "permission": "elasticache:DeleteReplicationGroup",
      "grant": "Admin",
      "resourceType": "replicationGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:DeleteSnapshot",
      "grant": "Admin",
      "resourceType": "snapshot",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create snapshots, but deletion is restricted to Admins."
    },
    {
      "permission": "elasticache:DescribeCacheClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeCacheEngineVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeCacheParameterGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeCacheParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeCacheSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeCacheSubnetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeEngineDefaultParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeReplicationGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeReservedCacheNodes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeReservedCacheNodesOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about the cache instance, no access to cache data."
    },
    {
      "permission": "elasticache:DescribeSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:IncreaseReplicaCount",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can increase AmazonElastiCache replica count."
    },
    {
      "permission": "elasticache:ListAllowedNodeTypeModifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:ModifyCacheCluster",
      "grant": "Admin",
      "resourceType": "cacheCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:ModifyCacheParameterGroup",
      "grant": "Admin",
      "resourceType": "cacheParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:ModifyCacheSubnetGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage custom subnet groups. Turbot managed subnet groups cannot be automatically protected, but should not be modified by users."
    },
    {
      "permission": "elasticache:ModifyReplicationGroup",
      "grant": "Admin",
      "resourceType": "replicationGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:ModifyReplicationGroupShardConfiguration",
      "grant": "Admin",
      "resourceType": "replicationGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:PurchaseReservedCacheNodesOffering",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Reserved instances can only be purchased by owners."
    },
    {
      "permission": "elasticache:RebootCacheCluster",
      "grant": "Operator",
      "resourceType": "cacheCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags and reboot the cluster."
    },
    {
      "permission": "elasticache:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "cachecluster|snapshot",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags and reboot the cluster."
    },
    {
      "permission": "elasticache:ResetCacheParameterGroup",
      "grant": "Admin",
      "resourceType": "cacheParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticache:RevokeCacheSecurityGroupIngress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Revokes ingress from a cache security group. Use this operation to disallow access from an Amazon EC2 security group that had been previously authorized."
    },
    {
      "permission": "elasticache:TestFailover",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "sns:ListTopics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for console access per http://docs.aws.amazon.com/AmazonElastiCache/latest/UserGuide/UsingIAM.html"
    },
    {
      "permission": "elasticbeanstalk:AbortEnvironmentUpdate",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can abort environment configuration updates."
    },
    {
      "permission": "elasticbeanstalk:ApplyEnvironmentManagedAction",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can schedule managed updates for environments."
    },
    {
      "permission": "elasticbeanstalk:CheckDNSAvailability",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Verify if a CNAME for a new web server is available."
    },
    {
      "permission": "elasticbeanstalk:ComposeEnvironments",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create or update multiple environments."
    },
    {
      "permission": "elasticbeanstalk:CreateApplication",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage applications."
    },
    {
      "permission": "elasticbeanstalk:CreateApplicationVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage application versions."
    },
    {
      "permission": "elasticbeanstalk:CreateConfigurationTemplate",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create application configuration templates."
    },
    {
      "permission": "elasticbeanstalk:CreateEnvironment",
      "grant": "Operator",
      "resourceType": "environment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create application environments."
    },
    {
      "permission": "elasticbeanstalk:CreatePlatformVersion",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage platform versions."
    },
    {
      "permission": "elasticbeanstalk:CreateStorageLocation",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DeleteApplication",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage applications."
    },
    {
      "permission": "elasticbeanstalk:DeleteApplicationVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage application versions."
    },
    {
      "permission": "elasticbeanstalk:DeleteConfigurationTemplate",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can delete application configuration templates."
    },
    {
      "permission": "elasticbeanstalk:DeleteEnvironmentConfiguration",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can delete application environment configurations."
    },
    {
      "permission": "elasticbeanstalk:DeletePlatformVersion",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage platform versions."
    },
    {
      "permission": "elasticbeanstalk:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeApplicationVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only contains application veresion metadata with no access to data."
    },
    {
      "permission": "elasticbeanstalk:DescribeApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only contains application metadata with no access to data."
    },
    {
      "permission": "elasticbeanstalk:DescribeConfigurationOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeConfigurationSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeEnvironmentHealth",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeEnvironmentManagedActionHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeEnvironmentManagedActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeEnvironmentResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only contains resource names with no access to data."
    },
    {
      "permission": "elasticbeanstalk:DescribeEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only contains environment metadata with no access to data."
    },
    {
      "permission": "elasticbeanstalk:DescribeEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribeInstancesHealth",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:DescribePlatformVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:ListAvailableSolutionStacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:ListPlatformVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:RebuildEnvironment",
      "grant": "Operator",
      "resourceType": "environment",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can recreate all components in an environment."
    },
    {
      "permission": "elasticbeanstalk:RequestEnvironmentInfo",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "ReadOnly since applications logs are included. Operator to reduce level definitions."
    },
    {
      "permission": "elasticbeanstalk:RestartAppServer",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can restart an application server for an environment."
    },
    {
      "permission": "elasticbeanstalk:RetrieveEnvironmentInfo",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "ReadOnly since applications logs are included. Operator to reduce level definitions."
    },
    {
      "permission": "elasticbeanstalk:SwapEnvironmentCNAMEs",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage the CNAMEs for environments."
    },
    {
      "permission": "elasticbeanstalk:TerminateEnvironment",
      "grant": "Operator",
      "resourceType": "environment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can delete application environments."
    },
    {
      "permission": "elasticbeanstalk:UpdateApplication",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage applications."
    },
    {
      "permission": "elasticbeanstalk:UpdateApplicationResourceLifecycle",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage applications."
    },
    {
      "permission": "elasticbeanstalk:UpdateApplicationVersion",
      "grant": "Admin",
      "resourceType": "application",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage application versions."
    },
    {
      "permission": "elasticbeanstalk:UpdateConfigurationTemplate",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can update application configuration templates."
    },
    {
      "permission": "elasticbeanstalk:UpdateEnvironment",
      "grant": "Operator",
      "resourceType": "environment",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can update application environment settings."
    },
    {
      "permission": "elasticbeanstalk:UpdateTagsForResource",
      "grant": "Operator",
      "resourceType": "application",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticbeanstalk:ValidateConfigurationSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Checks configuration settings without running."
    },
    {
      "permission": "es:AddTags",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can configure existing domains."
    },
    {
      "permission": "es:CancelElasticsearchServiceSoftwareUpdate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:CreateElasticsearchDomain",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DeleteElasticsearchDomain",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DeleteElasticsearchServiceRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeElasticsearchDomain",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeElasticsearchDomainConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeElasticsearchDomains",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeElasticsearchInstanceTypeLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeReservedElasticsearchInstanceOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:DescribeReservedElasticsearchInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ESHttpDelete",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can submit HTTP requests against existing domains."
    },
    {
      "permission": "es:ESHttpGet",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ESHttpHead",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ESHttpPost",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can submit HTTP requests against existing domains."
    },
    {
      "permission": "es:ESHttpPut",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can submit HTTP requests against existing domains."
    },
    {
      "permission": "es:GetCompatibleElasticsearchVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:GetUpgradeHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:GetUpgradeStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ListDomainNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ListElasticsearchInstanceTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ListElasticsearchVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:PurchaseReservedElasticsearchInstance",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:PurchaseReservedElasticsearchInstanceOffering",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:RemoveTags",
      "grant": "Operator",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can configure existing domains."
    },
    {
      "permission": "es:StartElasticsearchServiceSoftwareUpdate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "es:UpdateElasticsearchDomainConfig",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Permission allows you to alter access policies."
    },
    {
      "permission": "es:UpgradeElasticsearchDomain",
      "grant": "Admin",
      "resourceType": "domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:CancelJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:CreateJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:CreatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:CreatePreset",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:DeletePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:DeletePreset",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ListJobsByPipeline",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ListJobsByStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ListPipelines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ListPresets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ReadJob",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ReadPipeline",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:ReadPreset",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:TestRole",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:UpdatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:UpdatePipelineNotifications",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elastictranscoder:UpdatePipelineStatus",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required to create a pipeline"
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/readonly-policy.html"
    },
    {
      "permission": "ec2:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeAvailabilityZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeBundleTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeConversionTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeCustomerGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeDhcpOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeExportTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeImageAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstanceAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstanceStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInternetGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeKeyPairs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLicenses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkAcls",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkInterfaceAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkInterfaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribePlacementGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeRegions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstancesListings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstancesModifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeReservedInstancesOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeRouteTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSnapshotAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotDatafeedSubscription",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotInstanceRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSpotPriceHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumeAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumeStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVolumes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcPeeringConnection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpnConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpnGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:AddInstanceFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage instance fleets."
    },
    {
      "permission": "elasticmapreduce:AddInstanceGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:AddJobFlowSteps",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:AddTags",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:CancelSteps",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:CreateSecurityConfiguration",
      "grant": "Operator",
      "resourceType": "securityConfiguration",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:DeleteSecurityConfiguration",
      "grant": "Operator",
      "resourceType": "securityConfiguration",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:DescribeCluster",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:DescribeJobFlows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated by AWS; retained by Turbot since it's a read permission"
    },
    {
      "permission": "elasticmapreduce:DescribeSecurityConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:DescribeStep",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListBootstrapActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListInstanceFleets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListInstanceGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListSecurityConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ListSteps",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ModifyInstanceFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage instance fleets."
    },
    {
      "permission": "elasticmapreduce:ModifyInstanceGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:PutAutoScalingPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:RemoveAutoScalingPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:RemoveTags",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:RunJobFlow",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:SetTerminationProtection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:SetVisibleToAllUsers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:TerminateJobFlows",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "elasticmapreduce:ViewEventsFromAllClustersInConsole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccessKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccountAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroupPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroupsForUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListInstanceProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListInstanceProfilesForRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListMFADevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSAMLProviders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListServerCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSigningCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListUserPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListVirtualMFADevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required to create clusters."
    },
    {
      "permission": "s3:GetObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/readonly-policy.html"
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/readonly-policy.html"
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/readonly-policy.html"
    },
    {
      "permission": "sdb:Select",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/readonly-policy.html"
    },
    {
      "permission": "events:DeleteRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:DescribeEventBus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:DescribeRule",
      "grant": "Metadata",
      "resourceType": "rule",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:DisableRule",
      "grant": "Operator",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:EnableRule",
      "grant": "Operator",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:ListRuleNamesByTarget",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:ListRules",
      "grant": "Metadata",
      "resourceType": "rule",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:ListTargetsByRule",
      "grant": "Metadata",
      "resourceType": "target",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:PutEvents",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:PutPermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:PutRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:PutTargets",
      "grant": "Admin",
      "resourceType": "target",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:RemovePermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:RemoveTargets",
      "grant": "Admin",
      "resourceType": "target",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "events:TestEventPattern",
      "grant": "Metadata",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkInterfaceAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkInterfaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:CreateBackup",
      "grant": "Admin",
      "resourceType": "backup",
      "operationType": "create",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:CreateFileSystem",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "create",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:CreateFileSystemFromBackup",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "create",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:DeleteBackup",
      "grant": "Admin",
      "resourceType": "backup",
      "operationType": "delete",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:DeleteFileSystem",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "delete",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:DescribeBackups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:DescribeFileSystems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:TagResource",
      "grant": "Admin",
      "resourceType": "fileSystem|backup",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:UntagResource",
      "grant": "Admin",
      "resourceType": "fileSystem|backup",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "fsx:UpdateFileSystem",
      "grant": "Admin",
      "resourceType": "fileSystem",
      "operationType": "update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required to list the existing roles in IAM."
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS services allow Admin to pass an existing role to the service."
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:HeadBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Helps to determine if a bucket exists and user have permission to access it."
    },
    {
      "permission": "gamelift:AcceptMatch",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Registers player acceptance or rejection of a proposed FlexMatch match."
    },
    {
      "permission": "gamelift:CreateAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Defines a new alias for a fleet."
    },
    {
      "permission": "gamelift:CreateBuild",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new game build using files stored in an Amazon S3 bucket."
    },
    {
      "permission": "gamelift:CreateFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new fleet of computing resources to run your game servers."
    },
    {
      "permission": "gamelift:CreateGameSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Starts a new game session on a specified fleet."
    },
    {
      "permission": "gamelift:CreateGameSessionQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Sets up a new queue for processing new game session placement requests."
    },
    {
      "permission": "gamelift:CreateMatchmakingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new FlexMatch matchmaker."
    },
    {
      "permission": "gamelift:CreateMatchmakingRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new matchmaking rule set for FlexMatch."
    },
    {
      "permission": "gamelift:CreatePlayerSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Reserves an available game session slot for a player."
    },
    {
      "permission": "gamelift:CreatePlayerSessions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Reserves available game session slots for multiple players."
    },
    {
      "permission": "gamelift:CreateScript",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new Realtime Servers script."
    },
    {
      "permission": "gamelift:CreateVpcPeeringAuthorization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows GameLift to create or delete a peering connection between a GameLift fleet VPC and a VPC on another AWS account."
    },
    {
      "permission": "gamelift:CreateVpcPeeringConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Establishes a peering connection between your GameLift fleet VPC and a VPC on another account."
    },
    {
      "permission": "gamelift:DeleteAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes an alias."
    },
    {
      "permission": "gamelift:DeleteBuild",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes a game build."
    },
    {
      "permission": "gamelift:DeleteFleet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes an empty fleet."
    },
    {
      "permission": "gamelift:DeleteGameSessionQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes an existing game session queue."
    },
    {
      "permission": "gamelift:DeleteMatchmakingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes an existing FlexMatch matchmaker."
    },
    {
      "permission": "gamelift:DeleteMatchmakingRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes an existing FlexMatch matchmaking rule set."
    },
    {
      "permission": "gamelift:DeleteScalingPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes a set of auto-scaling rules."
    },
    {
      "permission": "gamelift:DeleteScript",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes a Realtime Servers script."
    },
    {
      "permission": "gamelift:DeleteVpcPeeringAuthorization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cancels a VPC peering authorization."
    },
    {
      "permission": "gamelift:DeleteVpcPeeringConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Removes a peering connection between VPCs."
    },
    {
      "permission": "gamelift:DescribeAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for an alias."
    },
    {
      "permission": "gamelift:DescribeBuild",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for a game build."
    },
    {
      "permission": "gamelift:DescribeEC2InstanceLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the maximum allowed and current usage for EC2 instance types."
    },
    {
      "permission": "gamelift:DescribeFleetAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves general properties (including status) for fleets."
    },
    {
      "permission": "gamelift:DescribeFleetCapacity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the current capacity setting for fleets."
    },
    {
      "permission": "gamelift:DescribeFleetEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves entries from a fleet's event log."
    },
    {
      "permission": "gamelift:DescribeFleetPortSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the inbound connection permissions for a fleet."
    },
    {
      "permission": "gamelift:DescribeFleetUtilization",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves utilization statistics for fleets."
    },
    {
      "permission": "gamelift:DescribeGameSessionDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for game sessions in a fleet including the protection policy."
    },
    {
      "permission": "gamelift:DescribeGameSessionPlacement",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves details of a game session placement request."
    },
    {
      "permission": "gamelift:DescribeGameSessionQueues",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for game session queues."
    },
    {
      "permission": "gamelift:DescribeGameSessions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for game sessions in a fleet."
    },
    {
      "permission": "gamelift:DescribeInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves information about instances in a fleet."
    },
    {
      "permission": "gamelift:DescribeMatchmaking",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves details of matchmaking tickets."
    },
    {
      "permission": "gamelift:DescribeMatchmakingConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for FlexMatch matchmakers."
    },
    {
      "permission": "gamelift:DescribeMatchmakingRuleSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for FlexMatch matchmaking rule sets."
    },
    {
      "permission": "gamelift:DescribePlayerSessions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for player sessions in a game session."
    },
    {
      "permission": "gamelift:DescribeRuntimeConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the current runtime configuration for a fleet."
    },
    {
      "permission": "gamelift:DescribeScalingPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves all scaling policies that are applied to a fleet."
    },
    {
      "permission": "gamelift:DescribeScript",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for a Realtime Servers script."
    },
    {
      "permission": "gamelift:DescribeVpcPeeringAuthorizations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves valid VPC peering authorizations."
    },
    {
      "permission": "gamelift:DescribeVpcPeeringConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves details on active or pending VPC peering connections."
    },
    {
      "permission": "gamelift:GetGameSessionLogUrl",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the location of stored logs for a game session."
    },
    {
      "permission": "gamelift:GetInstanceAccess",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Requests remote access to a specified fleet instance."
    },
    {
      "permission": "gamelift:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves all aliases that are defined in the current region."
    },
    {
      "permission": "gamelift:ListBuilds",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves all game build in the current region."
    },
    {
      "permission": "gamelift:ListFleets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves a list of fleet IDs for all fleets in the current region."
    },
    {
      "permission": "gamelift:ListScripts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves properties for all Realtime Servers scripts in the current region."
    },
    {
      "permission": "gamelift:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "List Tags for GameLift Resource"
    },
    {
      "permission": "gamelift:PutScalingPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates or updates a fleet auto-scaling policy."
    },
    {
      "permission": "gamelift:RequestUploadCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves fresh upload credentials to use when uploading a new game build."
    },
    {
      "permission": "gamelift:ResolveAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the fleet ID associated with an alias."
    },
    {
      "permission": "gamelift:SearchGameSessions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves game sessions that match a set of search criteria."
    },
    {
      "permission": "gamelift:StartFleetActions",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Resumes auto-scaling activity on a fleet after it was suspended with StopFleetActions()."
    },
    {
      "permission": "gamelift:StartGameSessionPlacement",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Sends a game session placement request to a game session queue."
    },
    {
      "permission": "gamelift:StartMatchBackfill",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Requests FlexMatch matchmaking to fill available player slots in an existing game session."
    },
    {
      "permission": "gamelift:StartMatchmaking",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Requests FlexMatch matchmaking for one or a group of players and game session placement for a resulting match."
    },
    {
      "permission": "gamelift:StopFleetActions",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Suspends auto-scaling activity on a fleet."
    },
    {
      "permission": "gamelift:StopGameSessionPlacement",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cancels a game session placement request that is in progress."
    },
    {
      "permission": "gamelift:StopMatchmaking",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Cancels a matchmaking or match backfill request that is in progress."
    },
    {
      "permission": "gamelift:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Tags GameLift Resources"
    },
    {
      "permission": "gamelift:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Untags GameLift Resources"
    },
    {
      "permission": "gamelift:UpdateAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates the properties of an existing alias."
    },
    {
      "permission": "gamelift:UpdateBuild",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates an existing build's metadata."
    },
    {
      "permission": "gamelift:UpdateFleetAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates the general properties of an existing fleet."
    },
    {
      "permission": "gamelift:UpdateFleetCapacity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Adjusts a fleet's capacity settings."
    },
    {
      "permission": "gamelift:UpdateFleetPortSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Adjusts a fleet's port settings."
    },
    {
      "permission": "gamelift:UpdateGameSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates the properties of an existing game session."
    },
    {
      "permission": "gamelift:UpdateGameSessionQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates properties of an existing game session queue."
    },
    {
      "permission": "gamelift:UpdateMatchmakingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates properties of an existing FlexMatch matchmaking configuration."
    },
    {
      "permission": "gamelift:UpdateRuntimeConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates how server processes are configured on instances in an existing fleet."
    },
    {
      "permission": "gamelift:UpdateScript",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates the metadata and content of an existing Realtime Servers script."
    },
    {
      "permission": "gamelift:ValidateMatchmakingRuleSet",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Validates the syntax of a FlexMatch matchmaking rule set."
    },
    {
      "permission": "glacier:AbortMultipartUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:AbortVaultLock",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Aborts the vault locking process if the vault lock is not in the Locked state."
    },
    {
      "permission": "glacier:AddTagsToVault",
      "grant": "Operator",
      "resourceType": "vault",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:CompleteMultipartUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:CompleteVaultLock",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Completes the vault locking process by transitioning the vault lock from the InProgress state to the Locked state."
    },
    {
      "permission": "glacier:CreateVault",
      "grant": "Admin",
      "resourceType": "vault",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:DeleteArchive",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:DeleteVault",
      "grant": "Admin",
      "resourceType": "vault",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:DeleteVaultAccessPolicy",
      "grant": "Admin",
      "resourceType": "vault",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes the access policy associated with the specified vault."
    },
    {
      "permission": "glacier:DeleteVaultNotifications",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:DescribeJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:DescribeVault",
      "grant": "Metadata",
      "resourceType": "vault",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:GetDataRetrievalPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:GetJobOutput",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Data access for the retrieved object."
    },
    {
      "permission": "glacier:GetVaultAccessPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:GetVaultLock",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:GetVaultNotifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:InitiateJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:InitiateMultipartUpload",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:InitiateVaultLock",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Installs a vault lock policy on the specified vault and sets the lock state."
    },
    {
      "permission": "glacier:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:ListMultipartUploads",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:ListParts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:ListProvisionedCapacity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:ListTagsForVault",
      "grant": "Metadata",
      "resourceType": "vault",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:ListVaults",
      "grant": "Metadata",
      "resourceType": "vault",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:PurchaseProvisionedCapacity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:RemoveTagsFromVault",
      "grant": "Operator",
      "resourceType": "vault",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:SetDataRetrievalPolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:SetVaultAccessPolicy",
      "grant": "Admin",
      "resourceType": "vault",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Configures an access policy for a vault and will overwrite an existing policy. Can apply cross account access."
    },
    {
      "permission": "glacier:SetVaultNotifications",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:UploadArchive",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glacier:UploadMultipartPart",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:GetTemplateSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeKeyPairs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeRouteTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchCreatePartition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates one or more partitions in a batch operation."
    },
    {
      "permission": "glue:BatchDeleteConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes a list of connection definitions from the Data Catalog."
    },
    {
      "permission": "glue:BatchDeletePartition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchDeleteTable",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchDeleteTableVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchGetCrawlers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchGetDevEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchGetJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchGetPartition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchGetTriggers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchGetWorkflows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:BatchStopJobRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CancelMLTaskRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateClassifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can creates a classifier in the user's account."
    },
    {
      "permission": "glue:CreateConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a new Crawler with specified targets or role or configuration or optional schedule. At least one crawl target must be specified in either the s3Targets or the jdbcTargets field."
    },
    {
      "permission": "glue:CreateCrawler",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateDatabase",
      "grant": "Admin",
      "resourceType": "database",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateDevEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateMLTransform",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreatePartition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateScript",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateSecurityConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateTable",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This can take cross account S3 bucket as data inout store. Cross account S3 access is controlled by S3. Turbot may come up secific guardrail in future."
    },
    {
      "permission": "glue:CreateTrigger",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:CreateUserDefinedFunction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new function definition in the Data Catalog."
    },
    {
      "permission": "glue:CreateWorkflow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteClassifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteCrawler",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteDatabase",
      "grant": "Admin",
      "resourceType": "database",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteDevEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteMLTransform",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeletePartition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteResourcePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes a specified policy."
    },
    {
      "permission": "glue:DeleteSecurityConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteTable",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteTableVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteTrigger",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteUserDefinedFunction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:DeleteWorkflow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetCatalogImportStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetClassifier",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetClassifiers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetConnection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves a connection definition from the Data Catalog. http://docs.aws.amazon.com/glue/latest/webapi/API_GetConnection.html"
    },
    {
      "permission": "glue:GetConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetCrawler",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetCrawlerMetrics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetCrawlers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetDataCatalogEncryptionSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetDatabase",
      "grant": "Metadata",
      "resourceType": "database",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetDatabases",
      "grant": "Metadata",
      "resourceType": "databse",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetDataflowGraph",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetDevEndpoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetDevEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetJobBookmark",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetJobRun",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetJobRuns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetMLTaskRun",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetMLTaskRuns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetMLTransform",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetMLTransforms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetMapping",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can create the mappings. http://docs.aws.amazon.com/glue/latest/webapi/API_GetMapping.html"
    },
    {
      "permission": "glue:GetPartition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetPartitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetPlan",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetResourcePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetSecurityConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetSecurityConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetTable",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetTableVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetTableVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the definitions of some or all of the tables in a given Database."
    },
    {
      "permission": "glue:GetTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetTrigger",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetTriggers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetUserDefinedFunction",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetUserDefinedFunctions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetWorkflow",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetWorkflowRun",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetWorkflowRunProperties",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:GetWorkflowRunsMetadata",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ImportCatalogToGlue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ListCrawlers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ListDevEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ListTriggers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ListWorkflows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:PutDataCatalogEncryptionSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can set the security configuration for a specified catalog. Once set the specified encryption configuration is applied to every catalog write thereafter."
    },
    {
      "permission": "glue:PutResourcePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Sets the Data Catalog resource policy for access control."
    },
    {
      "permission": "glue:PutWorkflowRunProperties",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:ResetJobBookmark",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:SearchTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartCrawler",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartCrawlerSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartExportLabelsTaskRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartImportLabelsTaskRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartJobRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartMLEvaluationTaskRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartMLLabelingSetGenerationTaskRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartTrigger",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StartWorkflowRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StopCrawler",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StopCrawlerSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:StopTrigger",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateClassifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateCrawler",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateCrawlerSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateDatabase",
      "grant": "Admin",
      "resourceType": "database",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateDevEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateMLTransform",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdatePartition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateTable",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateTrigger",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateUserDefinedFunction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UpdateWorkflow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "glue:UseMLTransforms",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRolePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required to create clusters."
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterSubnetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketAcl",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeNotebookInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS Glue now supports connecting Amazon SageMaker notebooks to development endpoint."
    },
    {
      "permission": "sagemaker:ListNotebookInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AWS Glue now supports connecting Amazon SageMaker notebooks to development endpoint."
    },
    {
      "permission": "greengrass:AssociateRoleToGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:AssociateServiceRoleToAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateCoreDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateCoreDefinitionVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateDeployment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateDeviceDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateDeviceDefinitionVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateFunctionDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateFunctionDefinitionVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateGroup",
      "grant": "Admin",
      "resourceType": "group",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateGroupCertificateAuthority",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateGroupVersion",
      "grant": "Admin",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateLoggerDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateLoggerDefinitionVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateResourceDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateResourceDefinitionVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateSoftwareUpdateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateSubscriptionDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:CreateSubscriptionDefinitionVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteCoreDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteDeviceDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteFunctionDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteGroup",
      "grant": "Admin",
      "resourceType": "group",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteLoggerDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteResourceDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DeleteSubscriptionDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DisassociateRoleFromGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:DisassociateServiceRoleFromAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetAssociatedRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetBulkDeploymentStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetConnectivityInfo",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetCoreDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetCoreDefinitionVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetDeploymentStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetDeviceDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetDeviceDefinitionVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetFunctionDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetFunctionDefinitionVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetGroupCertificateAuthority",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetGroupCertificateConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetGroupVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetLoggerDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetLoggerDefinitionVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetResourceDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetResourceDefinitionVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetServiceRoleForAccount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetSubscriptionDefinition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:GetSubscriptionDefinitionVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListBulkDeploymentDetailedReports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListBulkDeployments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListCoreDefinitionVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListCoreDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListDeployments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListDeviceDefinitionVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListDeviceDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListFunctionDefinitionVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListFunctionDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListGroupCertificateAuthorities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListGroupVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListLoggerDefinitionVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListLoggerDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListResourceDefinitionVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListResourceDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListSubscriptionDefinitionVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ListSubscriptionDefinitions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:ResetDeployments",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:StartBulkDeployment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:StopBulkDeployment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:TagResource",
      "grant": "Admin",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UntagResource",
      "grant": "Admin",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateConnectivityInfo",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateCoreDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateDeviceDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateFunctionDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateGroupCertificateConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateLoggerDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateResourceDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "greengrass:UpdateSubscriptionDefinition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:AcceptInvitation",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ArchiveFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:CreateDetector",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:CreateFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:CreateIPSet",
      "grant": "Admin",
      "resourceType": "ipSet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:CreateMembers",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:CreateSampleFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:CreateThreatIntelSet",
      "grant": "Admin",
      "resourceType": "threatIntelSet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DeclineInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DeleteDetector",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DeleteFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DeleteIPSet",
      "grant": "Admin",
      "resourceType": "ipSet",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DeleteInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes invitations sent to the current member account by AWS accounts specified by their account IDs"
    },
    {
      "permission": "guardduty:DeleteMembers",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DeleteThreatIntelSet",
      "grant": "Admin",
      "resourceType": "threatIntelSet",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DisassociateFromMasterAccount",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:DisassociateMembers",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetDetector",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetFilter",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetFindings",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetFindingsStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetIPSet",
      "grant": "Metadata",
      "resourceType": "ipSet",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetInvitationsCount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetMasterAccount",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:GetMembers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns the details on the GuardDuty member accounts specified by the account IDs."
    },
    {
      "permission": "guardduty:GetThreatIntelSet",
      "grant": "Metadata",
      "resourceType": "threatIntelSet",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:InviteMembers",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ListDetectors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ListFilters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ListFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ListIPSets",
      "grant": "Metadata",
      "resourceType": "ipSet",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ListInvitations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:ListMembers",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists details about all member accounts for the current GuardDuty master account."
    },
    {
      "permission": "guardduty:ListThreatIntelSets",
      "grant": "Metadata",
      "resourceType": "threatIntelSet",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the ThreatIntelSets of the GuardDuty service specified by the detector ID."
    },
    {
      "permission": "guardduty:StartMonitoringMembers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:StopMonitoringMembers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:TagResource",
      "grant": "Admin",
      "resourceType": "ipSet|detector|threatIntelSet",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UnarchiveFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UntagResource",
      "grant": "Admin",
      "resourceType": "ipSet|detector|threatIntelSet",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UpdateDetector",
      "grant": "Admin",
      "resourceType": "detector",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UpdateFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UpdateFindingsFeedback",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UpdateIPSet",
      "grant": "Admin",
      "resourceType": "ipSet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "guardduty:UpdateThreatIntelSet",
      "grant": "Admin",
      "resourceType": "threatIntelSet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeAffectedEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEntityAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ApplyArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:CreateAccessPreview",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:CreateAnalyzer",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:CreateArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:DeleteAnalyzer",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:DeleteArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetAccessPreview",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetAnalyzedResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetAnalyzer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetArchiveRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:GetFinding",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAccessPreviewFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAccessPreviews",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAnalyzedResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListAnalyzers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListArchiveRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:StartResourceScan",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:UpdateArchiveRule",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:UpdateFindings",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "access-analyzer:ValidatePolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:AddClientIDToOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:AddRoleToInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "CreateOrUpdate",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:AddUserToGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:AttachGroupPolicy",
      "grant": "Owner",
      "resourceType": "groupPolicyAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:AttachRolePolicy",
      "grant": "Owner",
      "resourceType": "rolePolicyAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:AttachUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userPolicyAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:ChangePassword",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Users are not allowed to change their own password. Owners may change passwords for users through *LoginProfile permissions."
    },
    {
      "permission": "iam:CreateAccessKey",
      "grant": "Whitelist",
      "resourceType": "accessKey",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAccessKeyAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:CreateAccountAlias",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage the AWS account alias."
    },
    {
      "permission": "iam:CreateGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:CreateInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:CreateLoginProfile",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserPasswordAdministration",
      "help": "Optionally Owners can create passwords for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:CreateOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:CreatePolicy",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:CreatePolicyVersion",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:CreateRole",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can create custom roles."
    },
    {
      "permission": "iam:CreateSAMLProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SAML is not used in Turbot accounts."
    },
    {
      "permission": "iam:CreateServiceLinkedRole",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owner can manage service-linked roles."
    },
    {
      "permission": "iam:CreateUser",
      "grant": "Whitelist",
      "resourceType": "user",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:CreateVirtualMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeactivateMFADevice",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteAccessKey",
      "grant": "Whitelist",
      "resourceType": "accessKey",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAccessKeyAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteAccountAlias",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage the AWS account alias."
    },
    {
      "permission": "iam:DeleteAccountPasswordPolicy",
      "grant": "Owner",
      "resourceType": "accountPasswordPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:DeleteGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:DeleteGroupPolicy",
      "grant": "Owner",
      "resourceType": "group|groupInlinePolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:DeleteInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DeleteLoginProfile",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserPasswordAdministration",
      "help": "Optionally Owners can manage passwords for custom users. Management of Turbot users is explicitly denied. Deletion of the login profile is always allowed so user deletion in the IAM console works."
    },
    {
      "permission": "iam:DeleteOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:DeletePolicy",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:DeletePolicyVersion",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:DeleteRole",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DeleteRolePermissionsBoundary",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can delete permission boundary."
    },
    {
      "permission": "iam:DeleteRolePolicy",
      "grant": "Owner",
      "resourceType": "roleInlinePolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DeleteSAMLProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SAML is not used in Turbot accounts."
    },
    {
      "permission": "iam:DeleteSSHPublicKey",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Users may be granted permission to manage SSH public keys by other services (e.g. CodeCommit)."
    },
    {
      "permission": "iam:DeleteServerCertificate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage server certificates. Users are also granted permission to manage server certs by other services (e.g. ELB)."
    },
    {
      "permission": "iam:DeleteServiceLinkedRole",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:DeleteSigningCertificate",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SOAP is deprecated by AWS and not supported by Turbot."
    },
    {
      "permission": "iam:DeleteUser",
      "grant": "Whitelist",
      "resourceType": "user",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteUserPermissionsBoundary",
      "grant": "Owner",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can delete permission boundary."
    },
    {
      "permission": "iam:DeleteUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userInlinePolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DeleteVirtualMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:DetachGroupPolicy",
      "grant": "Owner",
      "resourceType": "groupPolicyAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:DetachRolePolicy",
      "grant": "Owner",
      "resourceType": "rolePolicyAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:DetachUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userPolicyAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:EnableMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:GenerateCredentialReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GenerateServiceLastAccessedDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccessKeyLastUsed",
      "grant": "Metadata",
      "resourceType": "accessKey",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccountAuthorizationDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccountPasswordPolicy",
      "grant": "Metadata",
      "resourceType": "accountPasswordPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetAccountSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetContextKeysForCustomPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetContextKeysForPrincipalPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetCredentialReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetGroup",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetGroupPolicy",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetInstanceProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetLoginProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetOpenIDConnectProvider",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetPolicy",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetPolicyVersion",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRolePolicy",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetSAMLProvider",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetSSHPublicKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetServerCertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetServiceLastAccessedDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetServiceLinkedRoleDeletionStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetUser",
      "grant": "Metadata",
      "resourceType": "user",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetUserPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccessKeys",
      "grant": "Metadata",
      "resourceType": "accessKey",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccountAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedGroupPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedUserPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListEntitiesForPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroupPolicies",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroups",
      "grant": "Metadata",
      "resourceType": "group",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListGroupsForUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListInstanceProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListInstanceProfilesForRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListMFADevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListOpenIDConnectProviders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListPolicies",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListPolicyVersions",
      "grant": "Metadata",
      "resourceType": "iamPolicy",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoleTags",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the tags on an IAM user."
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "role",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSAMLProviders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSSHPublicKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListServerCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListServiceSpecificCredentials",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListSigningCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListUserPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListUserTags",
      "grant": "Metadata",
      "resourceType": "user",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the tags on an IAM role."
    },
    {
      "permission": "iam:ListUsers",
      "grant": "Metadata",
      "resourceType": "user",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListVirtualMFADevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owner needs PassRole to allow creation of IAM roles for EC2. This also whitelists it for others to be granted specifically by services. PassRole for Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:PutGroupPolicy",
      "grant": "Owner",
      "resourceType": "group|groupInlinePolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:PutRolePermissionsBoundary",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can add permission boundary."
    },
    {
      "permission": "iam:PutRolePolicy",
      "grant": "Owner",
      "resourceType": "roleInlinePolicy",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:PutUserPermissionsBoundary",
      "grant": "Owner",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can add permission boundary."
    },
    {
      "permission": "iam:PutUserPolicy",
      "grant": "Whitelist",
      "resourceType": "userInlinePolicy",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:RemoveClientIDFromOpenIDConnectProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:RemoveRoleFromInstanceProfile",
      "grant": "Owner",
      "resourceType": "instanceProfile",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:RemoveUserFromGroup",
      "grant": "Owner",
      "resourceType": "group",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:ResyncMFADevice",
      "grant": "Owner",
      "resourceType": "mfaVirtual",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage MFA for custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:SetDefaultPolicyVersion",
      "grant": "Owner",
      "resourceType": "iamPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom policies. Management of Turbot policies is explicitly denied."
    },
    {
      "permission": "iam:SimulateCustomPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allow users to simulate and investigate IAM permssions. This does allow access to view permissions of other users."
    },
    {
      "permission": "iam:SimulatePrincipalPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allow users to simulate and investigate IAM permssions. This does allow access to view permissions of other users."
    },
    {
      "permission": "iam:TagRole",
      "grant": "Operator",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Creates or modifies the tags on an IAM user."
    },
    {
      "permission": "iam:TagUser",
      "grant": "Operator",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Creates or modifies the tags on an IAM role."
    },
    {
      "permission": "iam:UntagRole",
      "grant": "Operator",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the tags on an IAM user."
    },
    {
      "permission": "iam:UntagUser",
      "grant": "Operator",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the tags on an IAM role."
    },
    {
      "permission": "iam:UpdateAccessKey",
      "grant": "Whitelist",
      "resourceType": "accessKey",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAccessKeyAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:UpdateAccountPasswordPolicy",
      "grant": "Owner",
      "resourceType": "accountPasswordPolicy",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:UpdateAssumeRolePolicy",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom roles. Management of Turbot roles is explicitly denied."
    },
    {
      "permission": "iam:UpdateGroup",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage custom groups. Management of Turbot groups is explicitly denied."
    },
    {
      "permission": "iam:UpdateLoginProfile",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserPasswordAdministration",
      "help": "Optionally Owners can change passwords for custom users. Turbot users are explicitly denied from managing passwords."
    },
    {
      "permission": "iam:UpdateOpenIDConnectProviderThumbprint",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "OpenID is not used in Turbot accounts."
    },
    {
      "permission": "iam:UpdateRole",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Updates the description or maximum session duration setting of a role."
    },
    {
      "permission": "iam:UpdateRoleDescription",
      "grant": "Owner",
      "resourceType": "role",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can modify the description of a role."
    },
    {
      "permission": "iam:UpdateSAMLProvider",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SAML is not used in Turbot accounts."
    },
    {
      "permission": "iam:UpdateSSHPublicKey",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage SSH public keys. Users may be granted permission to manage SSH public keys by other services (e.g. CodeCommit)."
    },
    {
      "permission": "iam:UpdateServerCertificate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage server certificates. Users are also granted permission to manage server certs by other services (e.g. ELB)."
    },
    {
      "permission": "iam:UpdateSigningCertificate",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SOAP is deprecated by AWS and not supported by Turbot."
    },
    {
      "permission": "iam:UpdateUser",
      "grant": "Whitelist",
      "resourceType": "user",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "iamPermissionsLevelsServiceUserAdministration",
      "help": "Owners can manage custom users. Management of Turbot users is explicitly denied."
    },
    {
      "permission": "iam:UploadSSHPublicKey",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage SSH public keys. Users may be granted permission to manage SSH public keys by other services (e.g. CodeCommit)."
    },
    {
      "permission": "iam:UploadServerCertificate",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners can manage server certificates. Users are also granted permission to manage server certs by other services (e.g. ELB)."
    },
    {
      "permission": "iam:UploadSigningCertificate",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "SOAP is deprecated by AWS and not supported by Turbot."
    },
    {
      "permission": "sts:AssumeRole",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assuming Turbot roles (determined by path) is explicitly denied."
    },
    {
      "permission": "sts:AssumeRoleWithSAML",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assuming Turbot roles (determined by path) is explicitly denied."
    },
    {
      "permission": "sts:AssumeRoleWithWebIdentity",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assuming Turbot roles (determined by path) is explicitly denied."
    },
    {
      "permission": "sts:DecodeAuthorizationMessage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Users with access to Metadata are granted the ability to decode any authorization failure messages they receive. This aids troubleshooting and is appropriate given they already have access at a Metadata level."
    },
    {
      "permission": "inspector:AddAttributesToFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:CreateAssessmentTarget",
      "grant": "Admin",
      "resourceType": "assessmentTarget",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:CreateAssessmentTemplate",
      "grant": "Admin",
      "resourceType": "assessmentTemplate",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:CreateExclusionsPreview",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:CreateResourceGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DeleteAssessmentRun",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DeleteAssessmentTarget",
      "grant": "Admin",
      "resourceType": "assessmentTarget",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DeleteAssessmentTemplate",
      "grant": "Admin",
      "resourceType": "assessmentTemplate",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeAssessmentRuns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeAssessmentTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeAssessmentTemplates",
      "grant": "Metadata",
      "resourceType": "assessmentTemplate",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeCrossAccountAccessRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the IAM role that enables Amazon Inspector to access AWS account."
    },
    {
      "permission": "inspector:DescribeExclusions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeResourceGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:DescribeRulesPackages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:GetAssessmentReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:GetExclusionsPreview",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:GetTelemetryMetadata",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListAssessmentRunAgents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListAssessmentRuns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListAssessmentTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListAssessmentTemplates",
      "grant": "Metadata",
      "resourceType": "assessmentTemplate",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListEventSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListExclusions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListRulesPackages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:PreviewAgents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:RegisterCrossAccountAccessRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can register the IAM role that Amazon Inspector uses to list EC2 instances at the start of the assessment run or when using the PreviewAgents action."
    },
    {
      "permission": "inspector:RemoveAttributesFromFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:SetTagsForResource",
      "grant": "Operator",
      "resourceType": "assessmentTemplate",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:StartAssessmentRun",
      "grant": "Operator",
      "resourceType": "assessmentTemplate",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:StopAssessmentRun",
      "grant": "Operator",
      "resourceType": "assessmentTemplate",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:SubscribeToEvent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:UnsubscribeFromEvent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "inspector:UpdateAssessmentTarget",
      "grant": "Admin",
      "resourceType": "assessmentTarget",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListTopics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows to use existing role in IoT rule action."
    },
    {
      "permission": "iot-jobs-data:DescribeJobExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot-jobs-data:GetPendingJobExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot-jobs-data:StartNextPendingJobExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot-jobs-data:UpdateJobExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AcceptCertificateTransfer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AddThingToBillingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AddThingToThingGroup",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AssociateTargetsWithJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AttachPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AttachPrincipalPolicy",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Attaches the specified policy to the specified principal (certificate or other credential)."
    },
    {
      "permission": "iot:AttachSecurityProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:AttachThingPrincipal",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CancelAuditMitigationActionsTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CancelAuditTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CancelCertificateTransfer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CancelJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CancelJobExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ClearDefaultAuthorizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CloseTunnel",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ConfirmTopicRuleDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:Connect",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateAuthorizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateBillingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateCertificateFromCsr",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateDomainConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateDynamicThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateKeysAndCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateMitigationAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateOTAUpdate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateParticipantConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreatePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage an AWS IoT policy."
    },
    {
      "permission": "iot:CreatePolicyVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateProvisioningClaim",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateProvisioningTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateProvisioningTemplateVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateRoleAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateScheduledAudit",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateSecurityProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateThing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateThingType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateTopicRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:CreateTopicRuleDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteAccountAuditConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteAuthorizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteBillingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteCACertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteDomainConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteDynamicThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteJobExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteMitigationAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteOTAUpdate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeletePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeletePolicyVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteProvisioningTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteProvisioningTemplateVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteRegistrationCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteRoleAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteScheduledAudit",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteSecurityProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteThing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteThingShadow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteThingType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteTopicRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteTopicRuleDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeleteV2LoggingLevel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DeprecateThingType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeAccountAuditConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeAuditFinding",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeAuditMitigationActionsTask",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeAuditTask",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeAuthorizer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeBillingGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeCACertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeCertificate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeDefaultAuthorizer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeDomainConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeEndpoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeEventConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeIndex",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeJobExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeMitigationAction",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeProvisioningTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeProvisioningTemplateVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeRoleAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeScheduledAudit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeSecurityProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeThing",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeThingGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeThingRegistrationTask",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeThingType",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DescribeTunnel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DetachPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DetachPrincipalPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DetachSecurityProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DetachThingPrincipal",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DisableTopicRule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:DisconnectParticipant",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:EnableTopicRule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetCardinality",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetConnection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetEffectivePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetIndexingConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetJobDocument",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetLoggingOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetOTAUpdate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetPendingJobExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetPercentiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetPolicyVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetRegistrationCode",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetThingShadow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetTopicRule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetTopicRuleDestination",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetTranscript",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:GetV2LoggingOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListActiveViolations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListAttachedPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListAuditFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListAuditMitigationActionsExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListAuditMitigationActionsTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListAuditTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListAuthorizers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListBillingGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListCACertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListCertificatesByCA",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListDomainConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListIndices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListJobExecutionsForJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListJobExecutionsForThing",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListMitigationActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListOTAUpdates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListOutgoingCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListPolicyPrincipals",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListPolicyVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListPrincipalPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListPrincipalThings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListProvisioningTemplateVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListProvisioningTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListRoleAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListScheduledAudits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListSecurityProfiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListSecurityProfilesForTarget",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListTargetsForPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListTargetsForSecurityProfile",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingGroupsForThing",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingPrincipals",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingRegistrationTaskReports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingRegistrationTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingsInBillingGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListThingsInThingGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListTopicRuleDestinations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListTopicRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListTunnels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListV2LoggingLevels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ListViolationEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:OpenTunnel",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:PostToConnection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:Publish",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:Receive",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:RegisterCACertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:RegisterCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:RegisterThing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:RejectCertificateTransfer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:RemoveThingFromBillingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:RemoveThingFromThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ReplaceTopicRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SearchIndex",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SendEvent",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SendMessage",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SetDefaultAuthorizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SetDefaultPolicyVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This action affects all certificates to which the policy is attached."
    },
    {
      "permission": "iot:SetLoggingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SetV2LoggingLevel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:SetV2LoggingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:StartAuditMitigationActionsTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:StartNextPendingJobExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:StartOnDemandAuditTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:StartThingRegistrationTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:StopThingRegistrationTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:Subscribe",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:TestAuthorization",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:TestInvokeAuthorizer",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:TransferCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can initiate transfer of the specified certificate to the specified AWS account."
    },
    {
      "permission": "iot:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateAccountAuditConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateAuthorizer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateBillingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateCACertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateDomainConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateDynamicThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateEventConfigurations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateIndexingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateJobExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateMitigationAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateProvisioningTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateRoleAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateScheduledAudit",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateSecurityProfile",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateThing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateThingGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateThingGroupsForThing",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateThingShadow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:UpdateTopicRuleDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot:ValidateSecurityProfileBehaviors",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotdata:DeleteThingShadow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotdata:GetThingShadow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotdata:Publish",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotdata:UpdateThingShadow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:AssociateDeviceWithPlacement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:ClaimDevicesByClaimCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:CreatePlacement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:CreateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:DeletePlacement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:DeleteProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:DescribeDevice",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:DescribePlacement",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:DescribeProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:DisassociateDeviceFromPlacement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:FinalizeDeviceClaim",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:GetDeviceMethods",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:GetDevicesInPlacement",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:InitiateDeviceClaim",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:InvokeDeviceMethod",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:ListDeviceEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:ListDevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:ListPlacements",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:ListProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:UnclaimDevice",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:UpdateDeviceState",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:UpdatePlacement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iot1click:UpdateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:BatchPutMessage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:CancelPipelineReprocessing",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:CreateChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:CreateDataset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:CreateDatasetContent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:CreateDatastore",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:CreatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DeleteChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DeleteDataset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DeleteDatasetContent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DeleteDatastore",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DeletePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DescribeChannel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DescribeDataset",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DescribeDatastore",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DescribeLoggingOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:DescribePipeline",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:GetDatasetContent",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:ListChannels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:ListDatasetContents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:ListDatasets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:ListDatastores",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:ListPipelines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:PutLoggingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:RunPipelineActivity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:SampleChannelData",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:StartPipelineReprocessing",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:UpdateChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:UpdateDataset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:UpdateDatastore",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotanalytics:UpdatePipeline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:BatchPutMessage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:BatchUpdateDetector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:CreateDetectorModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:CreateInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:DeleteDetectorModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:DeleteInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:DescribeDetector",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:DescribeDetectorModel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:DescribeInput",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:DescribeLoggingOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:ListDetectorModelVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:ListDetectorModels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:ListDetectors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:ListInputs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:PutLoggingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:UpdateDetectorModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:UpdateInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotevents:UpdateInputRouting",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:AssociateAssets",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:AssociateViewEntities",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:BatchAssociateProjectAssets",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:BatchDisassociateProjectAssets",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:BatchPutAssetPropertyValue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateAccessPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateAsset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateAssetModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateAssetTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateDashboard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateMeasurementDataStore",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateMetricType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreatePortal",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:CreateView",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteAccessPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteAsset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteAssetModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteAssetTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteDashboard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteMeasurementDataStore",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteMetricType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeletePortal",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeleteView",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DeregisterViewEntities",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeAccessPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeAsset",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeAssetModel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeAssetProperty",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeAssetTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeAssets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeDashboard",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeLoggingOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeMeasurementDataStores",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeMetricTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribePortal",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeProject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DescribeViews",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DisassociateAssets",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:DisassociateViewEntities",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:GetAssetPropertyAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:GetAssetPropertyValue",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:GetAssetPropertyValueHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:GetMeasurementData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:GetMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListAccessPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListAssetModels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListAssetTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListAssets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListAssociatedAssets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListDashboards",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListMeasurementDataStores",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListMeasurementDataStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListMetricTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListPortals",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListProjectAssets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListProjects",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListViewEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:ListViews",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:PutLoggingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:RegisterViewEntities",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateAccessPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateAsset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateAssetModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateAssetProperty",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateAssetTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateDashboard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateMeasurementDataStore",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdatePortal",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateProject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotsitewise:UpdateView",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:AssociateEntityToThing",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:CreateFlowTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:CreateSystemInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:CreateSystemTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeleteFlowTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeleteNamespace",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeleteSystemInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeleteSystemTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeploySystemInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeprecateFlowTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DeprecateSystemTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DescribeNamespace",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:DissociateEntityFromThing",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetEntities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetFlowTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetFlowTemplateRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetNamespaceDeletionStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetSystemInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetSystemTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetSystemTemplateRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:GetUploadStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:ListFlowExecutionMessages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:SearchEntities",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:SearchFlowExecutions",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:SearchFlowTemplates",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:SearchSystemInstances",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:SearchSystemTemplates",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:SearchThings",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:UndeploySystemInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:UpdateFlowTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:UpdateSystemTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iotthingsgraph:UploadEntityDefinitions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:CreateDeliveryStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:DeleteDeliveryStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:DescribeDeliveryStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only contains metadata about the stream and does not include the Redshift password."
    },
    {
      "permission": "firehose:GetKinesisStream",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:ListDeliveryStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:ListTagsForDeliveryStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:PutRecord",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:PutRecordBatch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:StartDeliveryStreamEncryption",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can enable server-side encryption (SSE) for the delivery stream."
    },
    {
      "permission": "firehose:StopDeliveryStreamEncryption",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can disable server-side encryption (SSE) for the delivery stream."
    },
    {
      "permission": "firehose:TagDeliveryStream",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:UntagDeliveryStream",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "firehose:UpdateDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:AddTagsToStream",
      "grant": "Operator",
      "resourceType": "stream",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Tags are traditionally given to Operator in Turbot."
    },
    {
      "permission": "kinesis:CreateStream",
      "grant": "Admin",
      "resourceType": "stream",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DecreaseStreamRetentionPeriod",
      "grant": "Admin",
      "resourceType": "stream",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DeleteStream",
      "grant": "Admin",
      "resourceType": "stream",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DeregisterStreamConsumer",
      "grant": "Admin",
      "resourceType": "consumer",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DescribeLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DescribeStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DescribeStreamConsumer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DescribeStreamSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:DisableEnhancedMonitoring",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage enhanced monitoring for streams."
    },
    {
      "permission": "kinesis:EnableEnhancedMonitoring",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage enhanced monitoring for streams."
    },
    {
      "permission": "kinesis:GetRecords",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Contains data from the stream."
    },
    {
      "permission": "kinesis:GetShardIterator",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "No stream data; just metadata about the position."
    },
    {
      "permission": "kinesis:IncreaseStreamRetentionPeriod",
      "grant": "Admin",
      "resourceType": "stream",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:ListShards",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:ListStreamConsumers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:ListStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:ListTagsForStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:MergeShards",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:PutRecord",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:PutRecords",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:RegisterStreamConsumer",
      "grant": "Admin",
      "resourceType": "consumer",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:RemoveTagsFromStream",
      "grant": "Operator",
      "resourceType": "stream",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:SplitShard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesis:StartStreamEncryption",
      "grant": "Admin",
      "resourceType": "stream",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can enable or update server-side encryption using an AWS KMS key for a specified stream."
    },
    {
      "permission": "kinesis:StopStreamEncryption",
      "grant": "Admin",
      "resourceType": "stream",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can disable server-side encryption for a specified stream."
    },
    {
      "permission": "kinesis:SubscribeToShard",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Listening to a specific shard with enhanced fan-out."
    },
    {
      "permission": "kinesis:UpdateShardCount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:AddApplicationInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:AddApplicationInputProcessingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can add an input configuration."
    },
    {
      "permission": "kinesisanalytics:AddApplicationOutput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:AddApplicationReferenceDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:CreateApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:DeleteApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete an input configuration."
    },
    {
      "permission": "kinesisanalytics:DeleteApplicationOutput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:DeleteApplicationReferenceDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:DescribeApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:DiscoverInputSchema",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Sample records are returned in the response."
    },
    {
      "permission": "kinesisanalytics:ListApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:StartApplication",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:StopApplication",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisanalytics:UpdateApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:CreateStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:DeleteStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:DescribeStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:GetDataEndpoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:GetHLSStreamingSessionURL",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create a URL for HLS video streaming."
    },
    {
      "permission": "kinesisvideo:GetMedia",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:GetMediaForFragmentList",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:ListFragments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:ListStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:ListTagsForStream",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:PutMedia",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:TagStream",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:UntagStream",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:UpdateDataRetention",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kinesisvideo:UpdateStream",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:CancelKeyDeletion",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:CreateAlias",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:CreateGrant",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Limited to AWS resource grants only through an explicit deny on the Lockdown group to prevent cross-account grants."
    },
    {
      "permission": "kms:CreateKey",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can be used to add policies to keys. Turbot detects and resets any non-default policies added during key creation."
    },
    {
      "permission": "kms:Decrypt",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DeleteAlias",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DeleteImportedKeyMaterial",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides Metadata about the key only."
    },
    {
      "permission": "kms:DisableKey",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DisableKeyRotation",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:EnableKey",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:EnableKeyRotation",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:Encrypt",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:GenerateDataKey",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:GenerateDataKeyWithoutPlaintext",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:GenerateRandom",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:GetKeyPolicy",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:GetKeyRotationStatus",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:GetParametersForImport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only a public key is returned; the import token is not returned."
    },
    {
      "permission": "kms:ImportKeyMaterial",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListGrants",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListKeyPolicies",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListKeys",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides Metadata about the keys only."
    },
    {
      "permission": "kms:ListResourceTags",
      "grant": "Metadata",
      "resourceType": "key",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListRetirableGrants",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:PutKeyPolicy",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Key policies are reset by a guardrail after creation."
    },
    {
      "permission": "kms:ReEncryptFrom",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ReEncryptTo",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:RetireGrant",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:RevokeGrant",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ScheduleKeyDeletion",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:TagResource",
      "grant": "Operator",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:UntagResource",
      "grant": "Operator",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:UpdateAlias",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:UpdateKeyDescription",
      "grant": "Admin",
      "resourceType": "key",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "To create a Lambda function the user must have permission to pass the role to it."
    },
    {
      "permission": "lambda:AddLayerVersionPermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "AddLayerVersionPermission is for resources utilizing the push model. This will be common and should be at Operator level. But it allows cross-account pushing to Lambda so needs associated guardrails."
    },
    {
      "permission": "lambda:AddPermission",
      "grant": "Admin",
      "resourceType": "function|functionVersion",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:AddPermission20150331v2",
      "dependency": "",
      "help": "AddPermission is for resources utilizing the push model. This will be common and should be at Operator level. But it allows cross-account pushing to Lambda so needs associated guardrails."
    },
    {
      "permission": "lambda:CreateAlias",
      "grant": "Admin",
      "resourceType": "functionAlias",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:CreateAlias20150331",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:CreateEventSourceMapping",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage the triggers & use of functions."
    },
    {
      "permission": "lambda:CreateFunction",
      "grant": "Admin",
      "resourceType": "function",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:CreateFunction20150331",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:DeleteAlias",
      "grant": "Admin",
      "resourceType": "functionAlias",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:DeleteAlias20150331",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:DeleteEventSourceMapping",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage the triggers & use of functions."
    },
    {
      "permission": "lambda:DeleteFunction",
      "grant": "Admin",
      "resourceType": "function",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "lambda:DeleteFunction20150331",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:DeleteFunction",
      "grant": "Admin",
      "resourceType": "functionVersion",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "lambda:DeleteFunction20150331",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:DeleteFunctionConcurrency",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can manage concurrent execution limit."
    },
    {
      "permission": "lambda:DeleteFunctionEventInvokeConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:DeleteLayerVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:DeleteProvisionedConcurrencyConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:DisableReplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:EnableReplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can Add a permission to resource policy that gives Lambda replication service permission to get function code and configuration."
    },
    {
      "permission": "lambda:GetAccountSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetAlias",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetEventSourceMapping",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetFunction",
      "grant": "ReadOnly",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lambda function code is considered data and requires privileges to view."
    },
    {
      "permission": "lambda:GetFunctionConcurrency",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetFunctionConfiguration",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetFunctionEventInvokeConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetLayerVersion",
      "grant": "ReadOnly",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetLayerVersionByArn",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetLayerVersionPolicy",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:GetProvisionedConcurrencyConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:InvokeAsync",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "NOTE - Deprecated use Invoke instead."
    },
    {
      "permission": "lambda:InvokeFunction",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can invoke/run functions."
    },
    {
      "permission": "lambda:ListAliases",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListEventSourceMappings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListFunctionEventInvokeConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListFunctions",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Does not include function code only the configuration information."
    },
    {
      "permission": "lambda:ListLayerVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListLayers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListProvisionedConcurrencyConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListTags",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:ListVersionsByFunction",
      "grant": "Metadata",
      "resourceType": "function",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:PublishLayerVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a function layer from a ZIP archive. Each time you call PublishLayerVersion with the same version name a new version is created."
    },
    {
      "permission": "lambda:PublishVersion",
      "grant": "Admin",
      "resourceType": "functionVersion",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:PublishVersion20150331",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:PutFunctionConcurrency",
      "grant": "Admin",
      "resourceType": "function",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "lambda:PutFunctionConcurrency20171031",
      "dependency": "",
      "help": "Admin can manage concurrent execution limit."
    },
    {
      "permission": "lambda:PutFunctionEventInvokeConfig",
      "grant": "Admin",
      "resourceType": "functionVersion",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:PutProvisionedConcurrencyConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:RemoveLayerVersionPermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lambda:RemovePermission",
      "grant": "Operator",
      "resourceType": "function|functionVersion",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:RemovePermission20150331v2",
      "dependency": "",
      "help": "Allows removal of permissions from push resources. This can be safely granted to Operator since it doesn't allow extra permissions."
    },
    {
      "permission": "lambda:TagResource",
      "grant": "Operator",
      "resourceType": "function",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:TagResource20170331v2",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "lambda:UntagResource",
      "grant": "Operator",
      "resourceType": "function",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:UntagResource20170331v2",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "lambda:UpdateAlias",
      "grant": "Operator",
      "resourceType": "functionAlias",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "lambda:UpdateAlias20150331",
      "dependency": "",
      "help": "Operators can deploy released versions. (But can't control releases or edit functions.)"
    },
    {
      "permission": "lambda:UpdateEventSourceMapping",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage the triggers & use of functions."
    },
    {
      "permission": "lambda:UpdateFunctionCode",
      "grant": "Admin",
      "resourceType": "function",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "lambda:UpdateFunctionCode20150331v2",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:UpdateFunctionConfiguration",
      "grant": "Admin",
      "resourceType": "function",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "lambda:UpdateFunctionConfiguration20150331v2",
      "dependency": "",
      "help": "Admin controls functions release of functions and aliases to functions."
    },
    {
      "permission": "lambda:UpdateFunctionEventInvokeConfig",
      "grant": "Admin",
      "resourceType": "functionVersion",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObject",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per http://docs.aws.amazon.com/lex/latest/dg/access-control-managing-permissions.html#additional-console-required-permissions"
    },
    {
      "permission": "cloudwatch:DescribeAlarmsForMetric",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per http://docs.aws.amazon.com/lex/latest/dg/access-control-managing-permissions.html#additional-console-required-permissions"
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access per http://docs.aws.amazon.com/lex/latest/dg/access-control-managing-permissions.html#additional-console-required-permissions"
    },
    {
      "permission": "lex:CreateBotChannelAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Not available in http://docs.aws.amazon.com/lex/latest/dg/API_DeleteBotChannelAssociation.html. Same is available in the IAM policy generator. This permission allows to crate messaging channel to associate to specific Bot."
    },
    {
      "permission": "lex:CreateBotVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:CreateIntentVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:CreateSlotTypeVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteBot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteBotAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteBotChannelAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletes the association between an Amazon Lex bot and a messaging platform."
    },
    {
      "permission": "lex:DeleteBotVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteIntent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteIntentVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteSlotType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteSlotTypeVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:DeleteUtterances",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBot",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns metadata information for a specific bot."
    },
    {
      "permission": "lex:GetBotAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBotAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBotChannelAssociation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBotChannelAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns a list of all of the channels associated with the specified bot."
    },
    {
      "permission": "lex:GetBotVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBuiltinIntent",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBuiltinIntents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetBuiltinSlotTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetExport",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Exports the contents of a Amazon Lex resource in a specified format."
    },
    {
      "permission": "lex:GetImport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets information about an import job started with the StartImport operation."
    },
    {
      "permission": "lex:GetIntent",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns information about an intent."
    },
    {
      "permission": "lex:GetIntentVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetIntents",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetSlotType",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetSlotTypeVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetSlotTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:GetUtterancesView",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lex:PostContent",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Sends user input (text or speech) to Amazon Lex. Clients use this API to send requests to Amazon Lex at runtime. Amazon Lex interprets the user input using the machine learning model that it built for the bot."
    },
    {
      "permission": "lex:PostText",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Sends user input (text-only) to Amazon Lex. Client applications can use this API to send requests to Amazon Lex at runtime. Amazon Lex then interprets the user input using the machine learning model it built for the bot."
    },
    {
      "permission": "lex:PutBot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates an Amazon Lex conversational bot or replaces an existing bot. When you create or update a bot you only required to specify a name."
    },
    {
      "permission": "lex:PutBotAlias",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates an alias for the specified version of the bot or replaces an alias for the specified bot."
    },
    {
      "permission": "lex:PutIntent",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "You first define the actions performed by the bot. These actions are the intents that need to be fulfilled by the Bot."
    },
    {
      "permission": "lex:PutSlotType",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Each intent requires sample utterances and slots. Slots are input data required to fulfill the intent."
    },
    {
      "permission": "lex:StartImport",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Starts a job to import a resource to Amazon Lex."
    },
    {
      "permission": "lightsail:AllocateStaticIp",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:AttachDisk",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:AttachInstancesToLoadBalancer",
      "grant": "Operator",
      "resourceType": "loadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:AttachLoadBalancerTlsCertificate",
      "grant": "Operator",
      "resourceType": "loadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:AttachStaticIp",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CloseInstancePublicPorts",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CopySnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateCloudFormationStack",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateDisk",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateDiskFromSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateDiskSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateDomainEntry",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateInstanceSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateInstances",
      "grant": "Admin",
      "resourceType": "instance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateInstancesFromSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateKeyPair",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateLoadBalancer",
      "grant": "Admin",
      "resourceType": "loadBalancer",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateLoadBalancerTlsCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateRelationalDatabase",
      "grant": "Admin",
      "resourceType": "database",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateRelationalDatabaseFromSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:CreateRelationalDatabaseSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteAutoSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteDisk",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteDiskSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteDomainEntry",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteInstance",
      "grant": "Admin",
      "resourceType": "instance",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteInstanceSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteKeyPair",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteKnownHostKeys",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteLoadBalancer",
      "grant": "Admin",
      "resourceType": "loadBalancer",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteLoadBalancerTlsCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteRelationalDatabase",
      "grant": "Admin",
      "resourceType": "database",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DeleteRelationalDatabaseSnapshot",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DetachDisk",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DetachInstancesFromLoadBalancer",
      "grant": "Operator",
      "resourceType": "loadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DetachStaticIp",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DisableAddOn",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:DownloadDefaultKeyPair",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:EnableAddOn",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:ExportSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetActiveNames",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetAutoSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetBlueprints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetBundles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetCloudFormationStackRecords",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetDisk",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetDiskSnapshot",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetDiskSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetDisks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetDomain",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetDomains",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetExportSnapshotRecords",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstanceAccessDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstanceMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstancePortStates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstanceSnapshot",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstanceSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstanceState",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetKeyPair",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetKeyPairs",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetLoadBalancer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetLoadBalancerMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetLoadBalancerTlsCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetLoadBalancers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetOperation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetOperations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetOperationsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRegions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabase",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseBlueprints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseBundles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseLogEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseLogStreams",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseMasterUserPassword",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseMetricData",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseSnapshot",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabaseSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetRelationalDatabases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetStaticIp",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:GetStaticIps",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:ImportKeyPair",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:IsVpcPeered",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:OpenInstancePublicPorts",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:PeerVpc",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:PutInstancePublicPorts",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:RebootInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:RebootRelationalDatabase",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:ReleaseStaticIp",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:StartInstance",
      "grant": "Operator",
      "resourceType": "instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:StartRelationalDatabase",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:StopInstance",
      "grant": "Operator",
      "resourceType": "instance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:StopRelationalDatabase",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:TagResource",
      "grant": "Operator",
      "resourceType": "instance|database|loadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:UnpeerVpc",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:UntagResource",
      "grant": "Operator",
      "resourceType": "instance|database|loadBalancer",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:UpdateDomainEntry",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:UpdateLoadBalancerAttribute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:UpdateRelationalDatabase",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "lightsail:UpdateRelationalDatabaseParameters",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:AssociateKmsKey",
      "grant": "Admin",
      "resourceType": "logGroup",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Associates the specified AWS Key Management Service (AWS KMS) customer master key (CMK) with the specified log group."
    },
    {
      "permission": "logs:CancelExportTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:CreateExportTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:CreateLogGroup",
      "grant": "Admin",
      "resourceType": "logGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:CreateLogStream",
      "grant": "Operator",
      "resourceType": "logStream",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create but cannot delete streams. (Deletion of stream deletes the events in it.)"
    },
    {
      "permission": "logs:DeleteDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can delete a Destination."
    },
    {
      "permission": "logs:DeleteLogGroup",
      "grant": "Admin",
      "resourceType": "logGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DeleteLogStream",
      "grant": "Admin",
      "resourceType": "logStream",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DeleteMetricFilter",
      "grant": "Operator",
      "resourceType": "metricFilter",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DeleteResourcePolicy",
      "grant": "Admin",
      "resourceType": "resourcePolicy",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "If resourcce policy is deleted then this revokes the access of the identities in that policy to put log events to this account."
    },
    {
      "permission": "logs:DeleteRetentionPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DeleteSubscriptionFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Safe for admin since it requires an associated IAM role which is controlled by Turbot."
    },
    {
      "permission": "logs:DescribeDestinations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeExportTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeLogGroups",
      "grant": "Metadata",
      "resourceType": "logGroup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeLogStreams",
      "grant": "Metadata",
      "resourceType": "logStream",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeMetricFilters",
      "grant": "Metadata",
      "resourceType": "metricFilter",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DescribeResourcePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the resource policies in this account."
    },
    {
      "permission": "logs:DescribeSubscriptionFilters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:DisassociateKmsKey",
      "grant": "Admin",
      "resourceType": "logGroup",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Disassociates the associated AWS Key Management Service (AWS KMS) customer master key (CMK) from the specified log group."
    },
    {
      "permission": "logs:FilterLogEvents",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:GetLogEvents",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:ListTagsLogGroup",
      "grant": "Metadata",
      "resourceType": "logGroup",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:PutDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create or update a Destination. Currently only supported physical resource is a Kinesis stream belonging to the same account as the destination."
    },
    {
      "permission": "logs:PutDestinationPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create or update an access policy associated with an existing destination."
    },
    {
      "permission": "logs:PutLogEvents",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:PutMetricFilter",
      "grant": "Operator",
      "resourceType": "metricFilter",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:PutResourcePolicy",
      "grant": "Admin",
      "resourceType": "resourcePolicy",
      "operationType": "CreateOrUpdate",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Creates or updates a resource policy allowing other AWS services (within the account) to put log events to this account such as Amazon Route 53. An account can have up to 10 resource policies per region."
    },
    {
      "permission": "logs:PutRetentionPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:PutSubscriptionFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Safe for admin since it requires an associated IAM role which is controlled by Turbot."
    },
    {
      "permission": "logs:TagLogGroup",
      "grant": "Operator",
      "resourceType": "logGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage log group tags."
    },
    {
      "permission": "logs:TestMetricFilter",
      "grant": "Operator",
      "resourceType": "metricFilter",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "logs:UntagLogGroup",
      "grant": "Operator",
      "resourceType": "logGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage log group tags."
    },
    {
      "permission": "machinelearning:AddTags",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "machinelearning:CreateBatchPrediction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:CreateDataSourceFromRDS",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:CreateDataSourceFromRedshift",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:CreateDataSourceFromS3",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:CreateEvaluation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:CreateMLModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:CreateRealtimeEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:DeleteBatchPrediction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:DeleteDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:DeleteEvaluation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:DeleteMLModel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:DeleteRealtimeEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:DeleteTags",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage tags."
    },
    {
      "permission": "machinelearning:DescribeBatchPredictions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Does not return any sensitive data."
    },
    {
      "permission": "machinelearning:DescribeDataSources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Does not return any sensitive data."
    },
    {
      "permission": "machinelearning:DescribeEvaluations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Does not return any sensitive data."
    },
    {
      "permission": "machinelearning:DescribeMLModels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Does not return any sensitive data."
    },
    {
      "permission": "machinelearning:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:GetBatchPrediction",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:GetDataSource",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:GetEvaluation",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:GetMLModel",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:Predict",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:UpdateBatchPrediction",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:UpdateDataSource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:UpdateEvaluation",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "machinelearning:UpdateMLModel",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:AcceptInvitation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:BatchGetCustomDataIdentifiers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:CreateClassificationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:CreateCustomDataIdentifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:CreateFindingsFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:CreateInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:CreateMember",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:CreateSampleFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DeclineInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DeleteCustomDataIdentifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DeleteFindingsFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DeleteInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DeleteMember",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DescribeBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DescribeClassificationJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DescribeOrganizationConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DisableMacie",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DisableOrganizationAdminAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DisassociateFromMasterAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:DisassociateMember",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:EnableMacie",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:EnableOrganizationAdminAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetBucketStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetClassificationExportConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetCustomDataIdentifier",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetFindingStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetFindingsFilter",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetInvitationsCount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetMacieSession",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetMasterAccount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetMember",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetUsageStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:GetUsageTotals",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListClassificationJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListCustomDataIdentifiers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListFindingsFilters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListInvitations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListMembers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListOrganizationAdminAccounts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:PutClassificationExportConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:TestCustomDataIdentifier",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:UpdateClassificationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:UpdateFindingsFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:UpdateMacieSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:UpdateMemberSession",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie2:UpdateOrganizationConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:AssociateMemberAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:AssociateS3Resources",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:CreateMacieAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:DescribeMacieAccountDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:DisassociateMemberAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:DisassociateS3Resources",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:GetIdentityDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:ListMemberAccounts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:ListS3Resources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "macie:UpdateS3Resources",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "organizations:DescribeOrganization",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:AddFlowOutputs",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:CreateFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:DeleteFlow",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:DescribeFlow",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:GrantFlowEntitlements",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:ListEntitlements",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:ListFlows",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:RemoveFlowOutput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:RevokeFlowEntitlement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:StartFlow",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:StopFlow",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:UpdateFlowEntitlement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:UpdateFlowOutput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconnect:UpdateFlowSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:CancelJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:CreateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:CreateJobTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:CreatePreset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:CreateQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:DeleteJobTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:DeletePreset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:DeleteQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:DescribeEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:GetJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:GetJobTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:GetPreset",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:GetQueue",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:ListJobTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:ListPresets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:ListQueues",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:UpdateJobTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:UpdatePreset",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediaconvert:UpdateQueue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRolePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:BatchUpdateSchedule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:CreateChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:CreateInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:CreateInputSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DeleteChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DeleteInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DeleteInputSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DeleteReservation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DescribeChannel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DescribeInput",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DescribeInputSecurityGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DescribeOffering",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DescribeReservation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:DescribeSchedule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:ListChannels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:ListInputSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:ListInputs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:ListOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:ListReservations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:PurchaseOffering",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:StartChannel",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:StopChannel",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:UpdateChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:UpdateInput",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "medialive:UpdateInputSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:CreateChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:CreateOriginEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:DeleteChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:DeleteOriginEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:DescribeChannel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:DescribeOriginEndpoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:ListChannels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:ListOriginEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:RotateChannelCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:UpdateChannel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediapackage:UpdateOriginEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:CreateContainer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:DeleteContainer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:DeleteContainerPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:DeleteCorsPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can apply cross account access."
    },
    {
      "permission": "mediastore:DeleteObject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:DescribeContainer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:DescribeObject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:GetContainerPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:GetCorsPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:GetObject",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:ListContainers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:ListItems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediastore:PutContainerPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can apply cross account access."
    },
    {
      "permission": "mediastore:PutCorsPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This allows cross-origin resource sharing of container. Turbot will bring future controls on CORS policy."
    },
    {
      "permission": "mediastore:PutObject",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediatailor:DeletePlaybackConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediatailor:GetPlaybackConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediatailor:ListPlaybackConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mediatailor:PutPlaybackConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInternetGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:CreateBroker",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "amazonmq:CreateBroker",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:CreateConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:CreateTags",
      "grant": "Operator",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:CreateTags",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:CreateUser",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:CreateUser",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DeleteBroker",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "amazonmq:DeleteBroker",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DeleteTags",
      "grant": "Operator",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:DeleteTags",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DeleteUser",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:DeleteUser",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DescribeBroker",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DescribeConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DescribeConfigurationRevision",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:DescribeUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:ListBrokers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:ListConfigurationRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:ListConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:ListTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:RebootBroker",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:RebootBroker",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:UpdateBroker",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:UpdateBroker",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:UpdateConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "mq:UpdateUser",
      "grant": "Admin",
      "resourceType": "Broker",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "amazonmq:UpdateUser",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeAvailabilityZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:CreateCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:CreateConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:DeleteCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:DescribeCluster",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:DescribeClusterOperation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:DescribeConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:DescribeConfigurationRevision",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:GetBootstrapBrokers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:ListClusterOperations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:ListClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:ListConfigurationRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:ListConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:ListNodes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:TagResource",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:UntagResource",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:UpdateBrokerCount",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:UpdateBrokerStorage",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kafka:UpdateClusterConfiguration",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:CreateCliToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:CreateEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:CreateWebLoginToken",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:DeleteEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:GetEnvironment",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:ListEnvironments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:PublishMetrics",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "airflow:UpdateEnvironment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides Metadata about the keys only."
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:CreateOutpost",
      "grant": "Admin",
      "resourceType": "outpost",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:DeleteOutpost",
      "grant": "Admin",
      "resourceType": "outpost",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:DeleteSite",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:GetOutpost",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:GetOutpostInstanceTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:ListOutposts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:ListSites",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:TagResource",
      "grant": "Admin",
      "resourceType": "outpost",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:UntagResource",
      "grant": "Admin",
      "resourceType": "outpost",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "outposts:UpdateOutpost",
      "grant": "Admin",
      "resourceType": "outpost",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:DeleteLexicon",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:DescribeVoices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:GetLexicon",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:GetSpeechSynthesisTask",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:ListLexicons",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:ListSpeechSynthesisTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:PutLexicon",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:StartSpeechSynthesisTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "polly:SynthesizeSpeech",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Synthesizing speech does not store or retrieve any data."
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:DescribeKey",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:CreateLedger",
      "grant": "Admin",
      "resourceType": "ledger",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:DeleteLedger",
      "grant": "Admin",
      "resourceType": "ledger",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:DescribeJournalS3Export",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:DescribeLedger",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ExecuteStatement",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ExportJournalToS3",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:GetBlock",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:GetDigest",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:GetRevision",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:InsertSampleData",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ListJournalS3Exports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ListJournalS3ExportsForLedger",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ListLedgers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:SendCommand",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:ShowCatalog",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:TagResource",
      "grant": "Operator",
      "resourceType": "ledger",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:UntagResource",
      "grant": "Operator",
      "resourceType": "ledger",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "qldb:UpdateLedger",
      "grant": "Admin",
      "resourceType": "ledger",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ds:DescribeTrusts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAccountAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CancelIngestion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateAdmin",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateDashboard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateDataSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateGroupMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateIAMPolicyAssignment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateIngestion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateReader",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateTemplateAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateTheme",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateThemeAlias",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:CreateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteDashboard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteDataSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteGroupMembership",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteIAMPolicyAssignment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteTemplateAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteTheme",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteThemeAlias",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DeleteUserByPrincipalId",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeDashboard",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeDashboardPermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeDataSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeDataSetPermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeDataSource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeDataSourcePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeIAMPolicyAssignment",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeIngestion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeTemplateAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeTemplatePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeTheme",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeThemeAlias",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeThemePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:DescribeUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:GetAuthCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:GetDashboardEmbedUrl",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:GetGroupMapping",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListDashboardVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListDashboards",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListDataSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListDataSources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListGroupMemberships",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListIAMPolicyAssignments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListIAMPolicyAssignmentsForUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListIngestions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListTemplateAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListTemplateVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListThemeAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListThemeVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListThemes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListUserGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:RegisterUser",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:SearchDashboards",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:SearchDirectoryGroups",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:SetGroupMapping",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:Subscribe",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:Unsubscribe",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDashboard",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDashboardPermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDashboardPublishedVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDataSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDataSetPermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDataSource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateDataSourcePermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateIAMPolicyAssignment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateTemplateAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateTemplatePermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateTheme",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateThemeAlias",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateThemePermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "quicksight:UpdateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:AcceptResourceShareInvitation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:AssociateResourceShare",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:AssociateResourceSharePermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:CreateResourceShare",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:DeleteResourceShare",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:DisassociateResourceShare",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:DisassociateResourceSharePermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:EnableSharingWithAwsOrganization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:GetPermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:GetResourcePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:GetResourceShareAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:GetResourceShareInvitations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:GetResourceShares",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:ListPendingInvitationResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:ListPermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:ListPrincipals",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:ListResourceSharePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:ListResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:PromoteResourceShareCreatedFromPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:RejectResourceShareInvitation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:TagResource",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:UntagResource",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ram:UpdateResourceShare",
      "grant": "Admin",
      "resourceType": "resourceShare",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "ec2:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "ec2:DescribeAvailabilityZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/UsingWithRDS.IAM.html"
    },
    {
      "permission": "pi:*",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Performance Insights is currently in preview."
    },
    {
      "permission": "rds:AddRoleToDBCluster",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:AddSourceIdentifierToSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "dbInstance|dbCluster|dbSnapshotManual|optionGroup|subnetGroup|dbParameterGroup|dbClusterParameterGroup|dbClusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ApplyPendingMaintenanceAction",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:AuthorizeDBSecurityGroupIngress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "You can't authorize ingress from an EC2 security group in one AWS Region to an Amazon RDS DB instance in another. You can't authorize ingress from a VPC security group in one VPC to an Amazon RDS DB instance in another."
    },
    {
      "permission": "rds:BacktrackDBCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CopyDBClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "dbClusterParameterGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CopyDBClusterSnapshot",
      "grant": "Operator",
      "resourceType": "dbClusterSnapshotManual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CopyDBParameterGroup",
      "grant": "Admin",
      "resourceType": "dbParameterGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CopyDBSnapshot",
      "grant": "Operator",
      "resourceType": "dbSnapshotManual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CopyOptionGroup",
      "grant": "Admin",
      "resourceType": "optionGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBCluster",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBClusterEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "dbClusterParameterGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBClusterSnapshot",
      "grant": "Operator",
      "resourceType": "dbClusterSnapshotManual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBInstance",
      "grant": "Admin",
      "resourceType": "dbInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBInstanceReadReplica",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBParameterGroup",
      "grant": "Admin",
      "resourceType": "dbParameterGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can manage DB security group controls access to EC2-Classic DB instances that are not in a VPC."
    },
    {
      "permission": "rds:CreateDBSnapshot",
      "grant": "Operator",
      "resourceType": "dbSnapshotManual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateDBSubnetGroup",
      "grant": "Whitelist",
      "resourceType": "subnetGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "rdsPermissionsLevelsSubnetGroupAdministration",
      "help": "Permission controlled by AWS > RDS > Subnet Group Management"
    },
    {
      "permission": "rds:CreateEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:CreateOptionGroup",
      "grant": "Admin",
      "resourceType": "optionGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBCluster",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBClusterEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "dbClusterParameterGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBClusterSnapshot",
      "grant": "Admin",
      "resourceType": "dbClusterSnapshotManual",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletion of snapshots is limited to Admins even though Operators can create them."
    },
    {
      "permission": "rds:DeleteDBInstance",
      "grant": "Admin",
      "resourceType": "dbInstance",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBInstanceAutomatedBackup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can delete automated backups based on the source instance's DbiResourceId value or the restorable instance's resource ID."
    },
    {
      "permission": "rds:DeleteDBParameterGroup",
      "grant": "Admin",
      "resourceType": "dbParameterGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteDBSnapshot",
      "grant": "Admin",
      "resourceType": "dbSnapshotManual",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deletion of snapshots is limited to Admins even though Operators can create them."
    },
    {
      "permission": "rds:DeleteDBSubnetGroup",
      "grant": "Whitelist",
      "resourceType": "subnetGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "rdsPermissionsLevelsSubnetGroupAdministration",
      "help": "Permission controlled by AWS > RDS > Subnet Group Management"
    },
    {
      "permission": "rds:DeleteEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DeleteOptionGroup",
      "grant": "Admin",
      "resourceType": "optionGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusterBacktracks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusterEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusterParameterGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusterParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusterSnapshotAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusterSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBEngineVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBInstanceAutomatedBackups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBLogFiles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBParameterGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBSnapshotAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeDBSubnetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeEngineDefaultClusterParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeEngineDefaultParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeEventCategories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeEventSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeOptionGroupOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeOptionGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeOrderableDBInstanceOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribePendingMaintenanceActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeReservedDBInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeReservedDBInstancesOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeSourceRegions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DescribeValidDBInstanceModifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DownloadCompleteDBLogFile",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:DownloadDBLogFilePortion",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:FailoverDBCluster",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ModifyCurrentDBClusterCapacity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can set the capacity of an Aurora Serverless DB cluster to a specific value."
    },
    {
      "permission": "rds:ModifyDBCluster",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ModifyDBClusterEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can modify the properties of an endpoint in an Amazon Aurora DB cluster."
    },
    {
      "permission": "rds:ModifyDBClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "dbClusterParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ModifyDBClusterSnapshotAttribute",
      "grant": "Admin",
      "resourceType": "dbClusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allows for cross-account access."
    },
    {
      "permission": "rds:ModifyDBInstance",
      "grant": "Admin",
      "resourceType": "dbInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ModifyDBParameterGroup",
      "grant": "Admin",
      "resourceType": "dbParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ModifyDBSnapshot",
      "grant": "Operator",
      "resourceType": "dbSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Can update a manual DB snapshot's engine version. Currently only supports MySQL."
    },
    {
      "permission": "rds:ModifyDBSnapshotAttribute",
      "grant": "Admin",
      "resourceType": "dbSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allows for cross-account access."
    },
    {
      "permission": "rds:ModifyDBSubnetGroup",
      "grant": "Whitelist",
      "resourceType": "subnetGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "rdsPermissionsLevelsSubnetGroupAdministration",
      "help": "Permission controlled by AWS > RDS > Subnet Group Management"
    },
    {
      "permission": "rds:ModifyEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ModifyOptionGroup",
      "grant": "Admin",
      "resourceType": "optionGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:PromoteReadReplica",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:PromoteReadReplicaDBCluster",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:PurchaseReservedDBInstancesOffering",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RebootDBInstance",
      "grant": "Operator",
      "resourceType": "dbInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RemoveRoleFromDBCluster",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RemoveSourceIdentifierFromSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "dbInstance|dbCluster|dbSnapshotManual|optionGroup|subnetGroup|dbParameterGroup|dbClusterParameterGroup|dbClusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ResetDBClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "dbClusterParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:ResetDBParameterGroup",
      "grant": "Admin",
      "resourceType": "dbParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RestoreDBClusterFromS3",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RestoreDBClusterFromSnapshot",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RestoreDBClusterToPointInTime",
      "grant": "Admin",
      "resourceType": "dbCluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RestoreDBInstanceFromDBSnapshot",
      "grant": "Admin",
      "resourceType": "dbInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RestoreDBInstanceFromS3",
      "grant": "Admin",
      "resourceType": "dbInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create backup of there database and store it in s3."
    },
    {
      "permission": "rds:RestoreDBInstanceToPointInTime",
      "grant": "Admin",
      "resourceType": "dbInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:RevokeDBSecurityGroupIngress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:StartDBCluster",
      "grant": "Operator",
      "resourceType": "dbCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:StartDBInstance",
      "grant": "Operator",
      "resourceType": "dbInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:StopDBCluster",
      "grant": "Operator",
      "resourceType": "dbCluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rds:StopDBInstance",
      "grant": "Operator",
      "resourceType": "dbInstance",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudwatch:DescribeAlarmHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "cloudwatch:DescribeAlarms",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "cloudwatch:DescribeAlarmsForMetric",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "cloudwatch:GetMetricStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "cloudwatch:ListMetrics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "ec2:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "ec2:DescribeAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "ec2:DescribeAvailabilityZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "ec2:DescribeInternetGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata for console access"
    },
    {
      "permission": "redshift:AcceptReservedNodeExchange",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:AuthorizeClusterSecurityGroupIngress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Adds an inbound (ingress) rule to an Amazon Redshift security group. Only used for non-VPC clusters"
    },
    {
      "permission": "redshift:AuthorizeSnapshotAccess",
      "grant": "Admin",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allows cross-account snapshot sharing"
    },
    {
      "permission": "redshift:BatchDeleteClusterSnapshots",
      "grant": "Admin",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can delete a set of cluster snapshots. High risk, deletes data."
    },
    {
      "permission": "redshift:BatchModifyClusterSnapshots",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can modify the settings for a list of snapshots."
    },
    {
      "permission": "redshift:CancelQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CancelQuerySession",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, cancels a query"
    },
    {
      "permission": "redshift:CancelResize",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CopyClusterSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, copies the snapshot within account"
    },
    {
      "permission": "redshift:CreateCluster",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, creates new empty cluster"
    },
    {
      "permission": "redshift:CreateClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "clusterParameterGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Turbot manages low skill parameters, other parameters are advanced to manage."
    },
    {
      "permission": "redshift:CreateClusterSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manageto create Amazon Redshift security group. Only used for non-VPC clusters"
    },
    {
      "permission": "redshift:CreateClusterSnapshot",
      "grant": "Operator",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, creates new manual snapshot"
    },
    {
      "permission": "redshift:CreateClusterSubnetGroup",
      "grant": "Admin",
      "resourceType": "clustersubnetgroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage custom subnet groups, but cannot modify the Turbot managed ones."
    },
    {
      "permission": "redshift:CreateClusterUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can auto create the specified redshift user if it does not exist."
    },
    {
      "permission": "redshift:CreateEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, just watches event metadata"
    },
    {
      "permission": "redshift:CreateHsmClientCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CreateHsmConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CreateSavedQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CreateScheduledAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CreateSnapshotCopyGrant",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a snapshot copy grant that permits Amazon Redshift to use a customer master key (CMK) from AWS Key Management Service (AWS KMS) to encrypt copied snapshots in a destination region."
    },
    {
      "permission": "redshift:CreateSnapshotSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CreateTags",
      "grant": "Operator",
      "resourceType": "cluster|clusterParameterGroup|clustersubnetgroup|clusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:CreateUsageLimit",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DeleteCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "High risk, deletes cluster and automated snapshots"
    },
    {
      "permission": "redshift:DeleteClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "clusterParameterGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Turbot manages low skill parameters, other parameters are advanced to manage."
    },
    {
      "permission": "redshift:DeleteClusterSecurityGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only used for non-VPC clusters"
    },
    {
      "permission": "redshift:DeleteClusterSnapshot",
      "grant": "Admin",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "High risk, deletes data"
    },
    {
      "permission": "redshift:DeleteClusterSubnetGroup",
      "grant": "Admin",
      "resourceType": "clustersubnetgroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage custom subnet groups, but cannot modify the Turbot managed ones."
    },
    {
      "permission": "redshift:DeleteEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, removes watch on events"
    },
    {
      "permission": "redshift:DeleteHsmClientCertificate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "HSM not yet supported by Turbot"
    },
    {
      "permission": "redshift:DeleteHsmConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "HSM not yet supported by Turbot"
    },
    {
      "permission": "redshift:DeleteSavedQueries",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DeleteScheduledAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DeleteSnapshotCopyGrant",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Not supported by Turbot until the use case is better understood."
    },
    {
      "permission": "redshift:DeleteSnapshotSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DeleteTags",
      "grant": "Operator",
      "resourceType": "cluster|clusterParameterGroup|clustersubnetgroup|clusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DeleteUsageLimit",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeAccountAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterDbRevisions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterParameterGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterSubnetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusterTracks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns a list of all the available maintenance tracks."
    },
    {
      "permission": "redshift:DescribeClusterVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeDefaultClusterParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeEventCategories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeEventSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeEvents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeHsmClientCertificates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeHsmConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeLoggingStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeNodeConfigurationOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeOrderableClusterOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeReservedNodeOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeReservedNodes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeResize",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeSavedQueries",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeScheduledActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeSnapshotCopyGrants",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeSnapshotSchedules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeStorage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeTable",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeTableRestoreStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DescribeUsageLimits",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DisableLogging",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:DisableSnapshotCopy",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk since old snapshots are not deleted, it just disables creation of new ones."
    },
    {
      "permission": "redshift:EnableLogging",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:EnableSnapshotCopy",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, starts creating data copies."
    },
    {
      "permission": "redshift:ExecuteQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can use query editor for creating and listing tables and other info."
    },
    {
      "permission": "redshift:FetchResults",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:GetClusterCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:GetReservedNodeExchangeOfferings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:JoinGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ListDatabases",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ListSavedQueries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ListSchemas",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ListTables",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifyCluster",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Turbot manages low skill parameters, other parameters are advanced to manage."
    },
    {
      "permission": "redshift:ModifyClusterDbRevision",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifyClusterIamRoles",
      "grant": "Admin",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can assign roles to Redshift, similar to the use of iam:PassRole for EC2 etc."
    },
    {
      "permission": "redshift:ModifyClusterMaintenance",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can modify the maintenance settings of a cluster."
    },
    {
      "permission": "redshift:ModifyClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "clusterParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Turbot manages low skill parameters, other parameters are advanced to manage."
    },
    {
      "permission": "redshift:ModifyClusterSnapshot",
      "grant": "Operator",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifyClusterSnapshotSchedule",
      "grant": "Operator",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifyClusterSubnetGroup",
      "grant": "Admin",
      "resourceType": "clustersubnetgroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Administrators can manage custom subnet groups, but cannot modify the Turbot managed ones."
    },
    {
      "permission": "redshift:ModifyEventSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, event watching only."
    },
    {
      "permission": "redshift:ModifySavedQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifyScheduledAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifySnapshotCopyRetentionPeriod",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can be decreased, deleting old snapshots. High risk Admin level."
    },
    {
      "permission": "redshift:ModifySnapshotSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ModifyUsageLimit",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:PauseCluster",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:PurchaseReservedNodeOffering",
      "grant": "Owner",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Owners are responsible for cost commitments."
    },
    {
      "permission": "redshift:RebootCluster",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Medium risk. Impacts availability."
    },
    {
      "permission": "redshift:ResetClusterParameterGroup",
      "grant": "Admin",
      "resourceType": "clusterParameterGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Turbot manages low skill parameters, other parameters are advanced to manage."
    },
    {
      "permission": "redshift:ResizeCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can change the size of the cluster. Cluster type, the number or type of nodes can be changed"
    },
    {
      "permission": "redshift:RestoreFromClusterSnapshot",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, creates new cluster copy"
    },
    {
      "permission": "redshift:RestoreTableFromClusterSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Low risk, creates a new table."
    },
    {
      "permission": "redshift:ResumeCluster",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:RevokeClusterSecurityGroupIngress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only used for non-VPC clusters"
    },
    {
      "permission": "redshift:RevokeSnapshotAccess",
      "grant": "Admin",
      "resourceType": "clusterSnapshotManual",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allows cross-account snapshot sharing"
    },
    {
      "permission": "redshift:RotateEncryptionKey",
      "grant": "Operator",
      "resourceType": "cluster",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Medium risk. No impact on data since keys managed by Redshift, but impacts availability."
    },
    {
      "permission": "redshift:ViewQueriesFromConsole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "redshift:ViewQueriesInConsole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "No data, just metadata about queries"
    },
    {
      "permission": "sns:GetEndpointAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "sns:GetPlatformApplicationAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "sns:GetSubscriptionAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "sns:GetTopicAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "sns:ListEndpointsByPlatformApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "sns:ListPlatformApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "sns:ListSubscriptionsByTopic",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "For console access, per Redshift ReadOnly policy but limited"
    },
    {
      "permission": "rekognition:CompareFaces",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This does not persist any data."
    },
    {
      "permission": "rekognition:CreateCollection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:CreateStreamProcessor",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:DeleteCollection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:DeleteFaces",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manages faces in collections."
    },
    {
      "permission": "rekognition:DeleteStreamProcessor",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:DescribeStreamProcessor",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:DetectFaces",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This does not persist any data."
    },
    {
      "permission": "rekognition:DetectLabels",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This does not persist any data."
    },
    {
      "permission": "rekognition:DetectModerationLabels",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can manage suggestive adult content in a specified .jpeg or .png image"
    },
    {
      "permission": "rekognition:DetectText",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:GetCelebrityInfo",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns information about a celebrity based on the ID."
    },
    {
      "permission": "rekognition:GetCelebrityRecognition",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:GetContentModeration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:GetFaceDetection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:GetFaceSearch",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:GetLabelDetection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:GetPersonTracking",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:IndexFaces",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manages faces in collections."
    },
    {
      "permission": "rekognition:ListCollections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:ListFaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns metadata about all faces in a collection."
    },
    {
      "permission": "rekognition:ListStreamProcessors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:RecognizeCelebrities",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:SearchFaces",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only metadata for matched faces is returned."
    },
    {
      "permission": "rekognition:SearchFacesByImage",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only metadata for matched faces is returned."
    },
    {
      "permission": "rekognition:StartCelebrityRecognition",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StartContentModeration",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StartFaceDetection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StartFaceSearch",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StartLabelDetection",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StartPersonTracking",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StartStreamProcessor",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "rekognition:StopStreamProcessor",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:CreateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:DeleteGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:GetGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:GetGroupQuery",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:GetTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:ListGroupResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:ListGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:SearchResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:Tag",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:Untag",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:UpdateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-groups:UpdateGroupQuery",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:BatchDescribeSimulationJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CancelSimulationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateDeploymentJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateFleet",
      "grant": "Admin",
      "resourceType": "Fleet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateRobot",
      "grant": "Admin",
      "resourceType": "Robot",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateRobotApplication",
      "grant": "Admin",
      "resourceType": "RobotApplication",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateRobotApplicationVersion",
      "grant": "Admin",
      "resourceType": "RobotApplication",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateSimulationApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateSimulationApplicationVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:CreateSimulationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DeleteFleet",
      "grant": "Admin",
      "resourceType": "Fleet",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DeleteRobot",
      "grant": "Admin",
      "resourceType": "Robot",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DeleteRobotApplication",
      "grant": "Admin",
      "resourceType": "RobotApplication",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DeleteSimulationApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DeregisterRobot",
      "grant": "Admin",
      "resourceType": "Fleet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DescribeDeploymentJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DescribeFleet",
      "grant": "Metadata",
      "resourceType": "Fleet",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DescribeRobot",
      "grant": "Metadata",
      "resourceType": "Robot",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DescribeRobotApplication",
      "grant": "Metadata",
      "resourceType": "RobotApplication",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DescribeSimulationApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:DescribeSimulationJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:ListDeploymentJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:ListFleets",
      "grant": "Metadata",
      "resourceType": "Fleet",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:ListRobotApplications",
      "grant": "Metadata",
      "resourceType": "RobotApplication",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:ListRobots",
      "grant": "Metadata",
      "resourceType": "Robot",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:ListSimulationApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:ListSimulationJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:RegisterRobot",
      "grant": "Admin",
      "resourceType": "Fleet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:RestartSimulationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:SyncDeploymentJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:TagResource",
      "grant": "Operator",
      "resourceType": "Robot|Fleet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:UntagResource",
      "grant": "Operator",
      "resourceType": "Robot|Fleet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:UpdateRobotApplication",
      "grant": "Admin",
      "resourceType": "RobotApplication",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "robomaker:UpdateSimulationApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudfront:ListDistributions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for AWS console access to Route 53 per http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/UsingWithIAM.html"
    },
    {
      "permission": "ec2:DescribeRegions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for AWS console access to Route 53 per http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/UsingWithIAM.html"
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for AWS console access to Route 53 per http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/UsingWithIAM.html"
    },
    {
      "permission": "elasticloadbalancing:DescribeLoadBalancers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for AWS console access to Route 53 per http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/UsingWithIAM.html"
    },
    {
      "permission": "route53:AssociateVPCWithHostedZone",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allowed since network admins control the DNS servers (through VPC settings) so this will only work if they have chosen to use AmazonProvidedDNS."
    },
    {
      "permission": "route53:ChangeResourceRecordSets",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ChangeTagsForResource",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Typically Operator but no sense creating Operator group just for tagging permissions."
    },
    {
      "permission": "route53:CreateHealthCheck",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Public zones only."
    },
    {
      "permission": "route53:CreateHostedZone",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:CreateQueryLoggingConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a configuration for DNS query logging to publish log data to an Amazon CloudWatch Logs log group."
    },
    {
      "permission": "route53:CreateReusableDelegationSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:CreateTrafficPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53:CreateTrafficPolicyInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53:CreateTrafficPolicyVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53:CreateVPCAssociationAuthorization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:DeleteHealthCheck",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Public zones only."
    },
    {
      "permission": "route53:DeleteHostedZone",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:DeleteQueryLoggingConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete a configuration for DNS query logging to stop publishing log data to an Amazon CloudWatch Logs log group."
    },
    {
      "permission": "route53:DeleteReusableDelegationSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:DeleteTrafficPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53:DeleteTrafficPolicyInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53:DeleteVPCAssociationAuthorization",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:DisassociateVPCFromHostedZone",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allowed since network admins control the DNS servers (through VPC settings) so this will only work if they have chosen to use AmazonProvidedDNS."
    },
    {
      "permission": "route53:GetAccountLimit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetChange",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetChangeDetails",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetCheckerIpRanges",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetGeoLocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHealthCheck",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHealthCheckCount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHealthCheckLastFailureReason",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHealthCheckStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHostedZone",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHostedZoneCount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetHostedZoneLimit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetQueryLoggingConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets information about a specified configuration for DNS query logging."
    },
    {
      "permission": "route53:GetReusableDelegationSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetReusableDelegationSetLimit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetTrafficPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetTrafficPolicyInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:GetTrafficPolicyInstanceCount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListChangeBatchesByHostedZone",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListChangeBatchesByRRSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListGeoLocations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListHealthChecks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListHostedZones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListHostedZonesByName",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListQueryLoggingConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the configurations for DNS query logging that are associated with the current AWS account"
    },
    {
      "permission": "route53:ListResourceRecordSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListReusableDelegationSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTagsForResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTrafficPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTrafficPolicyInstances",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTrafficPolicyInstancesByHostedZone",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTrafficPolicyInstancesByPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListTrafficPolicyVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:ListVPCAssociationAuthorizations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:TestDNSAnswer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Not listed in policy simulator."
    },
    {
      "permission": "route53:UpdateHealthCheck",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Public zones only."
    },
    {
      "permission": "route53:UpdateHostedZoneComment",
      "grant": "Admin",
      "resourceType": "hostedZone",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53:UpdateTrafficPolicyComment",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53:UpdateTrafficPolicyInstance",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage traffic policies."
    },
    {
      "permission": "route53domains:CheckDomainAvailability",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:CheckDomainTransferability",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for AWS console access to Route 53 per http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/UsingWithIAM.html"
    },
    {
      "permission": "route53domains:AcceptDomainTransferFromAnotherAwsAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:CancelDomainTransferToAnotherAwsAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:CheckDomainAvailability",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:CheckDomainTransferability",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:DeleteDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:DeleteTagsForDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Typically Operator but no sense creating Operator group just for tagging permissions."
    },
    {
      "permission": "route53domains:DisableDomainAutoRenew",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:DisableDomainTransferLock",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:EnableDomainAutoRenew",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:EnableDomainTransferLock",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:GetContactReachabilityStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:GetDomainDetail",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:GetDomainSuggestions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:GetOperationDetail",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:ListDomains",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:ListOperations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:ListTagsForDomain",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:RegisterDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:RejectDomainTransferFromAnotherAwsAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:RenewDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:ResendContactReachabilityEmail",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:RetrieveDomainAuthCode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns AuthCode required to transfer domain to another registrar."
    },
    {
      "permission": "route53domains:TransferDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:TransferDomainToAnotherAwsAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53domains:UpdateDomainContact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:UpdateDomainContactPrivacy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:UpdateDomainNameservers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage domains."
    },
    {
      "permission": "route53domains:UpdateTagsForDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Typically Operator but no sense creating Operator group just for tagging permissions."
    },
    {
      "permission": "route53domains:ViewBilling",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:AssociateResolverEndpointIpAddress",
      "grant": "Admin",
      "resourceType": "resolverEndpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:AssociateResolverRule",
      "grant": "Admin",
      "resourceType": "resolverRule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:CreateResolverEndpoint",
      "grant": "Admin",
      "resourceType": "resolverEndpoint",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:CreateResolverRule",
      "grant": "Admin",
      "resourceType": "resolverRule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:DeleteResolverEndpoint",
      "grant": "Admin",
      "resourceType": "resolverEndpoint",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:DeleteResolverRule",
      "grant": "Admin",
      "resourceType": "resolverRule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:DisassociateResolverEndpointIpAddress",
      "grant": "Admin",
      "resourceType": "resolverEndpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:DisassociateResolverRule",
      "grant": "Admin",
      "resourceType": "resolverRule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:GetResolverEndpoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:GetResolverRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:GetResolverRuleAssociation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:GetResolverRulePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:ListResolverEndpointIpAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:ListResolverEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:ListResolverRuleAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:ListResolverRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:PutResolverRulePolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:TagResource",
      "grant": "Operator",
      "resourceType": "resolverRule|resolverEndpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:UntagResource",
      "grant": "Operator",
      "resourceType": "resolverRule|resolverEndpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:UpdateResolverEndpoint",
      "grant": "Admin",
      "resourceType": "resolverEndpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "route53resolver:UpdateResolverRule",
      "grant": "Admin",
      "resourceType": "resolverRule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:AbortMultipartUpload",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:CreateBucket",
      "grant": "Operator",
      "resourceType": "Bucket",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:DeleteAccountPublicAccessBlock",
      "grant": "Admin",
      "resourceType": "s3Account",
      "operationType": "CreateOrUpdate",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:DeleteBucket",
      "grant": "Operator",
      "resourceType": "Bucket",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:DeleteBucketCors",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "TEMPORARY permission since CloudTrail events are different"
    },
    {
      "permission": "s3:DeleteBucketEncryption",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "TEMPORARY permission since CloudTrail events are different"
    },
    {
      "permission": "s3:DeleteBucketLifecycle",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "TEMPORARY permission since CloudTrail events are different"
    },
    {
      "permission": "s3:DeleteBucketPolicy",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:DeleteBucketReplication",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "TEMPORARY permission since CloudTrail events are different"
    },
    {
      "permission": "s3:DeleteBucketTagging",
      "grant": "Operator",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "TEMPORARY permission since CloudTrail events are different"
    },
    {
      "permission": "s3:DeleteBucketWebsite",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Website management is safe but requires anonymous access to be granted to the bucket for it to work."
    },
    {
      "permission": "s3:DeleteObject",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:DeleteObjectVersion",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:DeleteReplicationConfiguration",
      "grant": "Whitelist",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "s3PermissionsLevelsCrossReplicationAdministration",
      "help": "Admins can delete the replication configuration set for the bucket."
    },
    {
      "permission": "s3:GetAccelerateConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetAccountPublicAccessBlock",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetAnalyticsConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Covers ListAnalyticsConfigurations."
    },
    {
      "permission": "s3:GetBucketAcl",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketCORS",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLocation",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketLogging",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketNotification",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketPolicy",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketPolicyStatus",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketPublicAccessBlock",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketRequestPayment",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketTagging",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketVersioning",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketWebsite",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetEncryptionConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetInventoryConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Covers ListInventoryConfigurations."
    },
    {
      "permission": "s3:GetLifecycleConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetMetricsConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Covers ListMetricsConfigurations."
    },
    {
      "permission": "s3:GetObject",
      "grant": "ReadOnly",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObjectAcl",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObjectTagging",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObjectTorrent",
      "grant": "ReadOnly",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObjectVersion",
      "grant": "ReadOnly",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObjectVersionAcl",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObjectVersionTagging",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves tags of earlier object version. - http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGETtagging.html."
    },
    {
      "permission": "s3:GetObjectVersionTorrent",
      "grant": "ReadOnly",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetReplicationConfiguration",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:HeadBucket",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Helps to determine if a bucket exists and you have permission to access it."
    },
    {
      "permission": "s3:HeadObject",
      "grant": "ReadOnly",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "The HEAD operation retrieves metadata from an object without returning the object itself. This depends in s3:GetObject permission. This operation is useful if you're only interested in an object's metadata."
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "Bucket",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucket",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucketMultipartUploads",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListBucketVersions",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListMultipartUploadParts",
      "grant": "Metadata",
      "resourceType": "Object",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutAccelerateConfiguration",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage transfer acceleration for buckets."
    },
    {
      "permission": "s3:PutAccountPublicAccessBlock",
      "grant": "Admin",
      "resourceType": "s3Account",
      "operationType": "CreateOrUpdate",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutAnalyticsConfiguration",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Covers DeleteAnalyticsConfiguration."
    },
    {
      "permission": "s3:PutBucketAcl",
      "grant": "Whitelist",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "s3PermissionsLevelsAclAdministration",
      "help": "Per AWS guidelines Turbot considers ACLs deprecated but still supports them through an option - http://blogs.aws.amazon.com/security/post/TxPOJBY6FE360K/IAM-policies-and-Bucket-Policies-and-ACLs-Oh-My-Controlling-Access-to-S3-Resourc"
    },
    {
      "permission": "s3:PutBucketCORS",
      "grant": "Whitelist",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "s3:PutBucketCors",
      "dependency": "s3PermissionsLevelsCorsAdministration",
      "help": "Can be used for cross-account access."
    },
    {
      "permission": "s3:PutBucketLogging",
      "grant": "Whitelist",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "s3PermissionsLevelsAccessLoggingAdministration",
      "help": "Turbot automates logging settings."
    },
    {
      "permission": "s3:PutBucketNotification",
      "grant": "Operator",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutBucketPolicy",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutBucketPublicAccessBlock",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutBucketRequestPayment",
      "grant": "None",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Can be used for cross-account access."
    },
    {
      "permission": "s3:PutBucketTagging",
      "grant": "Operator",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Covers DeleteBucketTagging."
    },
    {
      "permission": "s3:PutBucketVersioning",
      "grant": "Operator",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutBucketWebsite",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Website management is safe but requires anonymous access to be granted to the bucket for it to work."
    },
    {
      "permission": "s3:PutEncryptionConfiguration",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "s3:PutBucketEncryption",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:PutInventoryConfiguration",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Covers DeleteInventoryConfiguration."
    },
    {
      "permission": "s3:PutLifecycleConfiguration",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "s3:PutBucketLifecycle",
      "dependency": "",
      "help": "Bucket management is restricted to Admins. Covers PutBucketLifecycle; PutBucketLifecycleConfiguration; DeleteBucketLifecycle."
    },
    {
      "permission": "s3:PutMetricsConfiguration",
      "grant": "Admin",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Covers DeleteMetricsConfiguration."
    },
    {
      "permission": "s3:PutObject",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Covers CompleteMultipartUpload; CreateMultipartUpload; UploadPart; UploadPartCopy."
    },
    {
      "permission": "s3:PutObjectAcl",
      "grant": "Whitelist",
      "resourceType": "Object",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "s3PermissionsLevelsAclAdministration",
      "help": "Per AWS guidelines Turbot considers ACLs deprecated but still supports them through an option - http://blogs.aws.amazon.com/security/post/TxPOJBY6FE360K/IAM-policies-and-Bucket-Policies-and-ACLs-Oh-My-Controlling-Access-to-S3-Resourc"
    },
    {
      "permission": "s3:PutObjectTagging",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Covers DeleteObjectTagging."
    },
    {
      "permission": "s3:PutObjectVersionAcl",
      "grant": "Whitelist",
      "resourceType": "Object",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "s3PermissionsLevelsAclAdministration",
      "help": "Per AWS guidelines Turbot considers ACLs deprecated but still supports them through an option - http://blogs.aws.amazon.com/security/post/TxPOJBY6FE360K/IAM-policies-and-Bucket-Policies-and-ACLs-Oh-My-Controlling-Access-to-S3-Resourc"
    },
    {
      "permission": "s3:PutObjectVersionTagging",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Enables to associate tag to object based on versionId. http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUTtagging.html."
    },
    {
      "permission": "s3:PutReplicationConfiguration",
      "grant": "Whitelist",
      "resourceType": "Bucket",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "s3:PutBucketReplication",
      "dependency": "s3PermissionsLevelsCrossReplicationAdministration",
      "help": "In a versioning-enabled bucket Admins can create a replication configuration (or replace an existing one if present) and can also be used for cross-account access."
    },
    {
      "permission": "s3:RestoreObject",
      "grant": "Operator",
      "resourceType": "Object",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required to create SageMaker instances/models."
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "While creating NotebookInstance Amazon SageMaker uses it to encrypt data at rest on the ML storage volume which is attached to notebook instance"
    },
    {
      "permission": "sagemaker:AddTags",
      "grant": "Operator",
      "resourceType": "notebookInstance|endpointConfig|model|trainingJob|endpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateCodeRepository",
      "grant": "Admin",
      "resourceType": "codeRepository",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateEndpoint",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateEndpointConfig",
      "grant": "Admin",
      "resourceType": "endpointConfig",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateHyperParameterTuningJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateModel",
      "grant": "Admin",
      "resourceType": "model",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateNotebookInstance",
      "grant": "Admin",
      "resourceType": "notebookInstance",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateNotebookInstanceLifecycleConfig",
      "grant": "Admin",
      "resourceType": "lifecycleConfiguration",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create lifecycle configuration for notebook instance."
    },
    {
      "permission": "sagemaker:CreatePresignedNotebookInstanceUrl",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateTrainingJob",
      "grant": "Admin",
      "resourceType": "trainingJob",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:CreateTransformJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteCodeRepository",
      "grant": "Admin",
      "resourceType": "codeRepository",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteEndpoint",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteEndpointConfig",
      "grant": "Admin",
      "resourceType": "endpointConfig",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteModel",
      "grant": "Admin",
      "resourceType": "model",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteNotebookInstance",
      "grant": "Admin",
      "resourceType": "notebookInstance",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteNotebookInstanceLifecycleConfig",
      "grant": "Admin",
      "resourceType": "lifecycleConfiguration",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DeleteTags",
      "grant": "Operator",
      "resourceType": "notebookInstance|endpointConfig|model|trainingJob|endpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeEndpoint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeEndpointConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeHyperParameterTuningJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeModel",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeNotebookInstance",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeNotebookInstanceLifecycleConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeTrainingJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:DescribeTransformJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:InvokeEndpoint",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListEndpointConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListHyperParameterTuningJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListModels",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListNotebookInstanceLifecycleConfigs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListNotebookInstances",
      "grant": "Metadata",
      "resourceType": "notebookInstance",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListTags",
      "grant": "Metadata",
      "resourceType": "notebookInstance",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListTrainingJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:ListTransformJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:StartNotebookInstance",
      "grant": "Operator",
      "resourceType": "notebookInstance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:StopHyperParameterTuningJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can stop a running hyperparameter tuning job and all running training jobs that this hyperparameter tuning job launched"
    },
    {
      "permission": "sagemaker:StopNotebookInstance",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:StopTrainingJob",
      "grant": "Operator",
      "resourceType": "trainingJob",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:StopTransformJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:UpdateCodeRepository",
      "grant": "Admin",
      "resourceType": "codeRepository",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:UpdateEndpoint",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:UpdateEndpointWeightsAndCapacities",
      "grant": "Admin",
      "resourceType": "endpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "",
      "field9": ""
    },
    {
      "permission": "sagemaker:UpdateNotebookInstance",
      "grant": "Admin",
      "resourceType": "notebookInstance",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sagemaker:UpdateNotebookInstanceLifecycleConfig",
      "grant": "Admin",
      "resourceType": "lifecycleConfiguration",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:CancelRotateSecret",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can disable automatic scheduled rotation and cancels the rotation of a secret if one is currently in progress."
    },
    {
      "permission": "secretsmanager:CreateSecret",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a new secret. A secret in Secrets Manager consists of both the protected secret data and the important information needed to manage the secret."
    },
    {
      "permission": "secretsmanager:DeleteResourcePolicy",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:DeleteSecret",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete an entire secret and all of its versions."
    },
    {
      "permission": "secretsmanager:DescribeSecret",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the details of a secret. It does not include the encrypted fields. Only those fields that are populated with a value are returned in the response."
    },
    {
      "permission": "secretsmanager:GetRandomPassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Generates a random password of the specified complexity. This operation is intended for use in the Lambda rotation function."
    },
    {
      "permission": "secretsmanager:GetResourcePolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:GetSecretValue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can retrieve the contents of the encrypted fields SecretString and SecretBinary from the specified version of a secret."
    },
    {
      "permission": "secretsmanager:ListSecretVersionIds",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists all of the versions attached to the specified secret."
    },
    {
      "permission": "secretsmanager:ListSecrets",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can list all of the secrets that are stored by AWS Secrets Manager in the AWS account."
    },
    {
      "permission": "secretsmanager:PutResourcePolicy",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Attaches the contents of the specified resource-based permission policy to a secret. It is a cross-account permission."
    },
    {
      "permission": "secretsmanager:PutSecretValue",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Stores a new encrypted secret value in the specified secret."
    },
    {
      "permission": "secretsmanager:RestoreSecret",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:RotateSecret",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:TagResource",
      "grant": "Operator",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:UntagResource",
      "grant": "Operator",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "secretsmanager:UpdateSecret",
      "grant": "Admin",
      "resourceType": "secret",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can modify many of the details of a secret."
    },
    {
      "permission": "secretsmanager:UpdateSecretVersionStage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can allow Security Hub service to use existing IAM roles."
    },
    {
      "permission": "securityhub:AcceptInvitation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can accept the invitation to be monitored by a master Security Hub account."
    },
    {
      "permission": "securityhub:BatchDisableStandards",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:BatchEnableStandards",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:BatchImportFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:CancelProductSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:CreateActionTarget",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:CreateInsight",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:CreateMembers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DeclineInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DeleteActionTarget",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DeleteInsight",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DeleteInvitations",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DeleteMembers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DescribeActionTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DescribeHub",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DescribeProducts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DisableImportFindingsForProduct",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DisableSecurityHub",
      "grant": "Admin",
      "resourceType": "hub",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DisassociateFromMasterAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:DisassociateMembers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:EnableImportFindingsForProduct",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:EnableSecurityHub",
      "grant": "Admin",
      "resourceType": "hub",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetEnabledStandards",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetFindings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetInsightResults",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetInsights",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetInvitationsCount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetMasterAccount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetMembers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:GetProductSubscription",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:InviteMembers",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:IsSecurityHubEnabled",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:ListEnabledProductsForImport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:ListInvitations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:ListMembers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:TagResource",
      "grant": "Operator",
      "resourceType": "hub",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:UntagResource",
      "grant": "Operator",
      "resourceType": "hub",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:UpdateActionTarget",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:UpdateFindings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "securityhub:UpdateInsight",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:CreateApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:CreateApplicationVersion",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:CreateCloudFormationChangeSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:CreateCloudFormationTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:DeleteApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:GetApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:GetApplicationPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:GetCloudFormationTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:ListApplicationDependencies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:ListApplicationVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:ListApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:PutApplicationPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:SearchApplications",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "serverlessrepo:UpdateApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:CreateReplicationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:DeleteReplicationJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:DeleteServerCatalog",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:DisassociateConnector",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:GetConnectors",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:GetReplicationJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:GetReplicationRuns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:GetServers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:ImportServerCatalog",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:StartOnDemandReplicationRun",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sms:UpdateReplicationJob",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "catalog-admin:*",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Catalog-admin permissions are not published APIs nor documented thoroughly by AWS.  In the AWS Service Catalog Administrator guide http://docs.aws.amazon.com/servicecatalog/latest/adminguide/permissions.html; these permissions are needed for Administrative activities."
    },
    {
      "permission": "catalog-user:*",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Catalog-user permissions are not published APIs nor documented thoroughly by AWS.  Catalog-user:* permission is referenced in the Service Catalog Read Only Access Policy as being required for end users.  http://docs.aws.amazon.com/servicecatalog/latest/adminguide/permissions.html."
    },
    {
      "permission": "servicecatalog:AcceptPortfolioShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:AssociateBudgetWithResource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:AssociatePrincipalWithPortfolio",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants portfolio access to an IAM entity (user/group/role)."
    },
    {
      "permission": "servicecatalog:AssociateProductWithPortfolio",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:AssociateServiceActionWithProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:AssociateTagOptionWithResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:BatchAssociateServiceActionWithProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:BatchDisassociateServiceActionFromProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:CopyProduct",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Copy the product to the same account or another account."
    },
    {
      "permission": "servicecatalog:CreateConstraint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:CreatePortfolio",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:CreatePortfolioShare",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows for cross-account access."
    },
    {
      "permission": "servicecatalog:CreateProduct",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:CreateProvisionedProductPlan",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a plan to create list of resources to be created or modified."
    },
    {
      "permission": "servicecatalog:CreateProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:CreateServiceAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:CreateTagOption",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DeleteConstraint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DeletePortfolio",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DeletePortfolioShare",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows for cross-account access."
    },
    {
      "permission": "servicecatalog:DeleteProduct",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DeleteProvisionedProductPlan",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete the specified plan."
    },
    {
      "permission": "servicecatalog:DeleteProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DeleteServiceAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DeleteTagOption",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can delete the specified TagOption."
    },
    {
      "permission": "servicecatalog:DescribeConstraint",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeCopyProductStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the status of the specified copy product operation."
    },
    {
      "permission": "servicecatalog:DescribePortfolio",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribePortfolioShareStatus",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeProduct",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeProductAsAdmin",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Same as DescribeProduct except with admin access but does not return any product data."
    },
    {
      "permission": "servicecatalog:DescribeProductView",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeProvisionedProduct",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieve detailed information about the provisioned product."
    },
    {
      "permission": "servicecatalog:DescribeProvisionedProductPlan",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets information about the resource changes for the specified plan."
    },
    {
      "permission": "servicecatalog:DescribeProvisioningArtifact",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeProvisioningParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeRecord",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeServiceAction",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeServiceActionExecutionParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DescribeTagOption",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DisableAWSOrganizationsAccess",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DisassociateBudgetFromResource",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DisassociatePrincipalFromPortfolio",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Grants portfolio access to an IAM entity (user/group/role)."
    },
    {
      "permission": "servicecatalog:DisassociateProductFromPortfolio",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DisassociateServiceActionFromProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:DisassociateTagOptionFromResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:EnableAWSOrganizationsAccess",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ExecuteProvisionedProductPlan",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provisions or modifies a product based on the resource changes for the specified plan."
    },
    {
      "permission": "servicecatalog:ExecuteProvisionedProductServiceAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:GetAWSOrganizationsAccessStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListAcceptedPortfolioShares",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListBudgetsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListConstraintsForPortfolio",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListLaunchPaths",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListOrganizationPortfolioAccess",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListPortfolioAccess",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListPortfolios",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListPortfoliosForProduct",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListPrincipalsForPortfolio",
      "grant": "Metadata",
      "resourceType": "portfolio",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListProvisionedProductPlans",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the plans for the specified provisioned product or all plans to which the user has access."
    },
    {
      "permission": "servicecatalog:ListProvisioningArtifacts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListProvisioningArtifactsForServiceAction",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListRecordHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListResourcesForTagOption",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists resources associated with a TagOption."
    },
    {
      "permission": "servicecatalog:ListServiceActions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListServiceActionsForProvisioningArtifact",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListStackInstancesForProvisionedProduct",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ListTagOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ProvisionProduct",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Similar to CloudFormation permissions to provisioning existing template; Operators can provision/update/terminate Service Catalog products provisioned in their account."
    },
    {
      "permission": "servicecatalog:RejectPortfolioShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:ScanProvisionedProducts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:SearchProducts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:SearchProductsAsAdmin",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Same as SearchProducts except with admin access but does not return any product data."
    },
    {
      "permission": "servicecatalog:SearchProvisionedProducts",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gets information about the provisioned products that meet the specified criteria."
    },
    {
      "permission": "servicecatalog:TerminateProvisionedProduct",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Similar to CloudFormation permissions to provisioning existing template; Operators can provision/update/terminate Service Catalog products provisioned in their account."
    },
    {
      "permission": "servicecatalog:UpdateConstraint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:UpdatePortfolio",
      "grant": "Admin",
      "resourceType": "portfolio",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:UpdateProduct",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:UpdateProvisionedProduct",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Similar to CloudFormation permissions to provisioning existing template; Operators can provision/update/terminate Service Catalog products provisioned in their account."
    },
    {
      "permission": "servicecatalog:UpdateProvisionedProductProperties",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:UpdateProvisioningArtifact",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:UpdateServiceAction",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "servicecatalog:UpdateTagOption",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CloneReceiptRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateConfigurationSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateConfigurationSetEventDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateConfigurationSetTrackingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateCustomVerificationEmailTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateDedicatedIpPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateDeliverabilityTestReport",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateEmailIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateReceiptFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateReceiptRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateReceiptRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:CreateTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteConfigurationSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteConfigurationSetEventDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteConfigurationSetTrackingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteCustomVerificationEmailTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteDedicatedIpPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteEmailIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteIdentityPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteReceiptFilter",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteReceiptRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteReceiptRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteSuppressedDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DeleteVerifiedEmailAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DescribeActiveReceiptRuleSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DescribeConfigurationSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DescribeReceiptRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:DescribeReceiptRuleSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetAccount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetAccountSendingEnabled",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetBlacklistReports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetConfigurationSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetConfigurationSetEventDestinations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetCustomVerificationEmailTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetDedicatedIp",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetDedicatedIps",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetDeliverabilityDashboardOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetDeliverabilityTestReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetDomainDeliverabilityCampaign",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetDomainStatisticsReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetEmailIdentity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetIdentityDkimAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetIdentityMailFromDomainAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetIdentityNotificationAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetIdentityPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetIdentityVerificationAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetSendQuota",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetSendStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetSuppressedDestination",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:GetTemplate",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListConfigurationSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListCustomVerificationEmailTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListDedicatedIpPools",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListDeliverabilityTestReports",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListDomainDeliverabilityCampaigns",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListEmailIdentities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListIdentities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListIdentityPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListReceiptFilters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListReceiptRuleSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListSuppressedDestinations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListTemplates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ListVerifiedEmailAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutAccountDedicatedIpWarmupAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutAccountSendingAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutAccountSuppressionAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutConfigurationSetDeliveryOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutConfigurationSetReputationOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutConfigurationSetSendingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutConfigurationSetSuppressionOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutConfigurationSetTrackingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutDedicatedIpInPool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutDedicatedIpWarmupAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutDeliverabilityDashboardOption",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutEmailIdentityDkimAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutEmailIdentityDkimSigningAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutEmailIdentityFeedbackAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutEmailIdentityMailFromAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutIdentityPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:PutSuppressedDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:ReorderReceiptRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SendBounce",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SendBulkTemplatedEmail",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SendCustomVerificationEmail",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SendEmail",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SendRawEmail",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SendTemplatedEmail",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetActiveReceiptRuleSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetIdentityDkimEnabled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetIdentityFeedbackForwardingEnabled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetIdentityHeadersInNotificationsEnabled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetIdentityMailFromDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetIdentityNotificationTopic",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:SetReceiptRulePosition",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:TagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:TestRenderTemplate",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UntagResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateAccountSendingEnabled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateConfigurationSetEventDestination",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateConfigurationSetReputationMetricsEnabled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateConfigurationSetSendingEnabled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateConfigurationSetTrackingOptions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateCustomVerificationEmailTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateReceiptRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:UpdateTemplate",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:VerifyDomainDkim",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:VerifyDomainIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:VerifyEmailAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ses:VerifyEmailIdentity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListAttachedRolePolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetBucketPolicy",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:AssociateDRTLogBucket",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can authorize the DDoS Response team to access the specified Amazon S3 bucket containing user's flow logs."
    },
    {
      "permission": "shield:AssociateDRTRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can authorize the DDoS Response team using the specified role to access user's AWS account to assist with DDoS attack mitigation during potential attacks."
    },
    {
      "permission": "shield:CreateProtection",
      "grant": "Admin",
      "resourceType": "protection",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:CreateSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DeleteProtection",
      "grant": "Admin",
      "resourceType": "protection",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DeleteSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DescribeAttack",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DescribeDRTAccess",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DescribeEmergencyContactSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DescribeProtection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DescribeSubscription",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DisassociateDRTLogBucket",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:DisassociateDRTRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:GetSubscriptionState",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:ListAttacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:ListProtections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "shield:UpdateEmergencyContactSettings",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can update the details of the list of email addresses that the DRT can use to contact you during a suspected attack."
    },
    {
      "permission": "shield:UpdateSubscription",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sdb:BatchDeleteAttributes",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can delete attributes in an item"
    },
    {
      "permission": "sdb:BatchPutAttributes",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can put or replace attributes in an item"
    },
    {
      "permission": "sdb:CreateDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin controls domains"
    },
    {
      "permission": "sdb:DeleteAttributes",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can delete attributes in an item"
    },
    {
      "permission": "sdb:DeleteDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin controls domains"
    },
    {
      "permission": "sdb:DomainMetadata",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about item and attribute counts and sizes with no access to attribute data"
    },
    {
      "permission": "sdb:GetAttributes",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Items and their attributes are considered data"
    },
    {
      "permission": "sdb:ListDomains",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Metadata about domain names with no access to attribute data"
    },
    {
      "permission": "sdb:PutAttributes",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can put or replace attributes in an item"
    },
    {
      "permission": "sdb:Select",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Select expressions can be used to retrieve items and attributes"
    },
    {
      "permission": "importexport:CancelJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only."
    },
    {
      "permission": "importexport:CreateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only."
    },
    {
      "permission": "importexport:GetShippingLabel",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only; GetShippingLabel generates a pre-paid shipping label for the job."
    },
    {
      "permission": "importexport:GetStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "importexport:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "importexport:UpdateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only."
    },
    {
      "permission": "s3:PutObjectAcl",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Required for jobs using Snowball IAM Role for S3 Data Transfers."
    },
    {
      "permission": "snowball:CancelCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:CancelJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only."
    },
    {
      "permission": "snowball:CreateAddress",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:CreateCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:CreateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only."
    },
    {
      "permission": "snowball:DescribeAddress",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:DescribeAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:DescribeCluster",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:DescribeJob",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:GetJobManifest",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Manifest is an encrypted file stored in S3."
    },
    {
      "permission": "snowball:GetJobUnlockCode",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used to decrypt manifest file."
    },
    {
      "permission": "snowball:GetSnowballUsage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:GetSoftwareUpdates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:ListClusterJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:ListClusters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:ListCompatibleImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:ListJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:UpdateCluster",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "snowball:UpdateJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All job related actions are managed by Admins only."
    },
    {
      "permission": "sns:AddPermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows cross-account access."
    },
    {
      "permission": "sns:CheckIfPhoneNumberIsOptedOut",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ConfirmSubscription",
      "grant": "Operator",
      "resourceType": "subscription",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:CreatePlatformApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Applications are managed by Admins; used for managing Amazon SNS Mobile Push Notifications operations."
    },
    {
      "permission": "sns:CreatePlatformEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Endpoints are managed by Admins; used for managing Amazon SNS Mobile Push Notifications operations."
    },
    {
      "permission": "sns:CreateTopic",
      "grant": "Admin",
      "resourceType": "topic",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:DeleteEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Endpoints are managed by Admins; used for managing Amazon SNS Mobile Push Notifications operations."
    },
    {
      "permission": "sns:DeletePlatformApplication",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Applications are managed by Admins; used for managing Amazon SNS Mobile Push Notifications operations."
    },
    {
      "permission": "sns:DeleteTopic",
      "grant": "Admin",
      "resourceType": "topic",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:GetEndpointAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:GetPlatformApplicationAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:GetSMSAttributes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:GetSubscriptionAttributes",
      "grant": "Metadata",
      "resourceType": "subscription",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:GetTopicAttributes",
      "grant": "Metadata",
      "resourceType": "topic",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListEndpointsByPlatformApplication",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListPhoneNumbersOptedOut",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListPlatformApplications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListSubscriptions",
      "grant": "Metadata",
      "resourceType": "subscription",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListSubscriptionsByTopic",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "topic",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:ListTopics",
      "grant": "Metadata",
      "resourceType": "topic",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:OptInPhoneNumber",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage SMS preferences."
    },
    {
      "permission": "sns:Publish",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:RemovePermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows cross-account access."
    },
    {
      "permission": "sns:SetEndpointAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Endpoints are managed by Admins; used for managing Amazon SNS Mobile Push Notifications operations."
    },
    {
      "permission": "sns:SetPlatformApplicationAttributes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Applications are managed by Admins; used for managing Amazon SNS Mobile Push Notifications operations."
    },
    {
      "permission": "sns:SetSMSAttributes",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage SMS preferences."
    },
    {
      "permission": "sns:SetSubscriptionAttributes",
      "grant": "Operator",
      "resourceType": "subscription",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:SetTopicAttributes",
      "grant": "Operator",
      "resourceType": "topic",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:Subscribe",
      "grant": "Operator",
      "resourceType": "subscription",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:TagResource",
      "grant": "Operator",
      "resourceType": "topic",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sns:Unsubscribe",
      "grant": "Operator",
      "resourceType": "subscription",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Topics are managed by Admins; Subscriptions by Operators."
    },
    {
      "permission": "sns:UntagResource",
      "grant": "Operator",
      "resourceType": "topic",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:AddPermission",
      "grant": "Admin",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows cross-account access."
    },
    {
      "permission": "sqs:ChangeMessageVisibility",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:ChangeMessageVisibilityBatch",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:CreateQueue",
      "grant": "Admin",
      "resourceType": "queue",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:DeleteMessage",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:DeleteMessageBatch",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:DeleteQueue",
      "grant": "Admin",
      "resourceType": "queue",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:GetQueueAttributes",
      "grant": "Metadata",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:GetQueueUrl",
      "grant": "Metadata",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:ListDeadLetterSourceQueues",
      "grant": "Metadata",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:ListQueueTags",
      "grant": "Metadata",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:ListQueues",
      "grant": "Metadata",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:PurgeQueue",
      "grant": "Admin",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:ReceiveMessage",
      "grant": "ReadOnly",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:RemovePermission",
      "grant": "Admin",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:SendMessage",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:SendMessageBatch",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:SetQueueAttributes",
      "grant": "Admin",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Allows management of many attributes which are fine and necessary. Also allows managmenet of the queue policy which may include sharing across accounts - checked with a detective control."
    },
    {
      "permission": "sqs:TagQueue",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "sqs:UntagQueue",
      "grant": "Operator",
      "resourceType": "queue",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2messages:AcknowledgeMessage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2messages:DeleteMessage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2messages:FailMessage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2messages:GetEndpoint",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2messages:GetMessages",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2messages:SendReply",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows to use existing role in SSM."
    },
    {
      "permission": "ssm:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "document|maintenanceWindow|ssmParameter",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Considered to be low risk operation. Tags are metadata that you assign to your managed instances. Tags enable you to categorize your managed instances in different ways. E.g. by purpose/ owner/ or environment."
    },
    {
      "permission": "ssm:CancelCommand",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Attempts to cancel the command specified by the Command ID"
    },
    {
      "permission": "ssm:CreateActivation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can manage to registers on-premises server or virtual machine with Amazon EC2 so that you can manage these resources using Run Command"
    },
    {
      "permission": "ssm:CreateAssociation",
      "grant": "Operator",
      "resourceType": "association",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can associates the specified Systems Manager document with the specified instances or targets."
    },
    {
      "permission": "ssm:CreateAssociationBatch",
      "grant": "Operator",
      "resourceType": "association",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:CreateDocument",
      "grant": "Admin",
      "resourceType": "document",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:CreateMaintenanceWindow",
      "grant": "Admin",
      "resourceType": "maintenanceWindow",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:CreatePatchBaseline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can creates a patch baseline. This is a admin definition for the patch base line. Verify that the AWS-DefaultPatchBaseline meets the need. Or create a patch baseline that defines a standard set of patches for the instances."
    },
    {
      "permission": "ssm:CreateResourceDataSync",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a resource data sync configuration to a single bucket in Amazon S3."
    },
    {
      "permission": "ssm:DeleteActivation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeleteAssociation",
      "grant": "Operator",
      "resourceType": "association",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeleteDocument",
      "grant": "Admin",
      "resourceType": "document",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Before deleting the document. It is recommend that you use DeleteAssociation to disassociate all instances that are associated with the document."
    },
    {
      "permission": "ssm:DeleteInventory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeleteMaintenanceWindow",
      "grant": "Admin",
      "resourceType": "maintenanceWindow",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeleteParameter",
      "grant": "Operator",
      "resourceType": "ssmParameter",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Delete a parameter from the system."
    },
    {
      "permission": "ssm:DeleteParameters",
      "grant": "Operator",
      "resourceType": "ssmParameter",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Delete a list of parameters."
    },
    {
      "permission": "ssm:DeletePatchBaseline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeleteResourceDataSync",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeregisterManagedInstance",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the server or virtual machine from the list of registered servers. You can reregister the instance again at any time. If you don’t plan to use Run Command on the server. We suggest uninstalling the SSM Agent first."
    },
    {
      "permission": "ssm:DeregisterPatchBaselineForPatchGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeregisterTargetFromMaintenanceWindow",
      "grant": "Operator",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DeregisterTaskFromMaintenanceWindow",
      "grant": "Operator",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeActivations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the associations for the specified Systems Manager document or instance"
    },
    {
      "permission": "ssm:DescribeAssociation",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeAutomationExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides details about all active and terminated Automation executions."
    },
    {
      "permission": "ssm:DescribeAutomationStepExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Provides details about all active and terminated step executions in an Automation workflow."
    },
    {
      "permission": "ssm:DescribeAvailablePatches",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeDocument",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the specified SSM document."
    },
    {
      "permission": "ssm:DescribeDocumentParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Displays the Documents node in the left navigation for EC2 and SSM. https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsimplesystemsmanager.html"
    },
    {
      "permission": "ssm:DescribeDocumentPermission",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only account ID is displayed"
    },
    {
      "permission": "ssm:DescribeEffectiveInstanceAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "All associations for the instance(s)."
    },
    {
      "permission": "ssm:DescribeEffectivePatchesForPatchBaseline",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "The EffectivePatch structure defines metadata about a patch along with the approval state of the patch in a particular patch baseline"
    },
    {
      "permission": "ssm:DescribeInstanceAssociationsStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only status information about the instance association"
    },
    {
      "permission": "ssm:DescribeInstanceInformation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "As it provides detailed information like the operating system platform the SSM Agent version (Linux) status etc."
    },
    {
      "permission": "ssm:DescribeInstancePatchStates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Very high-level information of the patch state."
    },
    {
      "permission": "ssm:DescribeInstancePatchStatesForPatchGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Defines the high-level patch compliance state for a managed instance. providing information about the number of installed. missing. not applicable. and failed patches along with metadata about the operation when this information was gathered for the instance"
    },
    {
      "permission": "ssm:DescribeInstancePatches",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the high-level patch state of one or more instances"
    },
    {
      "permission": "ssm:DescribeInstanceProperties",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Displays the Managed Instances node in the left navigation for EC2 and SSM. https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsimplesystemsmanager.html"
    },
    {
      "permission": "ssm:DescribeInventoryDeletions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeMaintenanceWindowExecutionTaskInvocations",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the individual task executions (one per target) for a particular task executed as part of a Maintenance Window execution."
    },
    {
      "permission": "ssm:DescribeMaintenanceWindowExecutionTasks",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeMaintenanceWindowExecutions",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeMaintenanceWindowTargets",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeMaintenanceWindowTasks",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeMaintenanceWindows",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribeParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribePatchBaselines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribePatchGroupState",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:DescribePatchGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetAutomationExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetCommandInvocation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns detailed information about command execution"
    },
    {
      "permission": "ssm:GetDefaultPatchBaseline",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetDeployablePatchSnapshotForInstance",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Contains A pre-signed Amazon S3 URL that can be used to download the patch snapshot.http://docs.aws.amazon.com/systems-manager/latest/APIReference/API_GetDeployablePatchSnapshotForInstance.html#EC2-GetDeployablePatchSnapshotForInstance-response-SnapshotDownloadUrl"
    },
    {
      "permission": "ssm:GetDocument",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetInventory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetInventorySchema",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetMaintenanceWindow",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetMaintenanceWindowExecution",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetMaintenanceWindowExecutionTask",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetMaintenanceWindowExecutionTaskInvocation",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetMaintenanceWindowTask",
      "grant": "Metadata",
      "resourceType": "maintenanceWindow",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetManifest",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Fetches the installation description for a package. https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsimplesystemsmanager.html"
    },
    {
      "permission": "ssm:GetParameter",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Get information about a parameter by using the parameter name."
    },
    {
      "permission": "ssm:GetParameterHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetParameters",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Get details of a parameter."
    },
    {
      "permission": "ssm:GetParametersByPath",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieve parameters in a specific hierarchy."
    },
    {
      "permission": "ssm:GetPatchBaseline",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:GetPatchBaselineForPatchGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListAssociationVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves all versions of an association for a specific association ID."
    },
    {
      "permission": "ssm:ListAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Lists the associations for the specified Systems Manager document or instance"
    },
    {
      "permission": "ssm:ListCommandInvocations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListCommands",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "No direct access to the S3 data"
    },
    {
      "permission": "ssm:ListComplianceItems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListComplianceSummaries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListDocumentVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListDocuments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListInstanceAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This is shown only part of the AWS managed service part. not part of the API list"
    },
    {
      "permission": "ssm:ListInventoryEntries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListResourceComplianceSummaries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListResourceDataSync",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:ModifyDocumentPermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:PutComplianceItems",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:PutConfigurePackageResult",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Reports installation result for a package. https://docs.aws.amazon.com/IAM/latest/UserGuide/list_amazonsimplesystemsmanager.html"
    },
    {
      "permission": "ssm:PutInventory",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:PutParameter",
      "grant": "Admin",
      "resourceType": "ssmParameter",
      "operationType": "CreateOrUpdate",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:RegisterDefaultPatchBaseline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "As creation is associated to Admin above"
    },
    {
      "permission": "ssm:RegisterPatchBaselineForPatchGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:RegisterTargetWithMaintenanceWindow",
      "grant": "Operator",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Uses the Maintenance created by Admin"
    },
    {
      "permission": "ssm:RegisterTaskWithMaintenanceWindow",
      "grant": "Operator",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Uses the Maintenance created by Admin"
    },
    {
      "permission": "ssm:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "document|maintenanceWindow|ssmParameter",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:SendAutomationSignal",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:SendCommand",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:StartAutomationExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:StopAutomationExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateAssociation",
      "grant": "Operator",
      "resourceType": "association",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "As create/delete is part of the Operation function"
    },
    {
      "permission": "ssm:UpdateAssociationStatus",
      "grant": "Operator",
      "resourceType": "association",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateDocument",
      "grant": "Admin",
      "resourceType": "document",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateDocumentDefaultVersion",
      "grant": "Admin",
      "resourceType": "document",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateInstanceAssociationStatus",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateInstanceInformation",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateMaintenanceWindow",
      "grant": "Admin",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ssm:UpdateMaintenanceWindowTarget",
      "grant": "Operator",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can change the target of an existing Maintenance Window."
    },
    {
      "permission": "ssm:UpdateMaintenanceWindowTask",
      "grant": "Operator",
      "resourceType": "maintenanceWindow",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can modify a task assigned to a Maintenance Window."
    },
    {
      "permission": "ssm:UpdateManagedInstanceRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Assigns or changes an Amazon Identity and Access Management (IAM) role to the managed instance."
    },
    {
      "permission": "ssm:UpdatePatchBaseline",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:CreateActivity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:CreateStateMachine",
      "grant": "Admin",
      "resourceType": "stateMachine",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:DeleteActivity",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:DeleteStateMachine",
      "grant": "Admin",
      "resourceType": "stateMachine",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:DescribeActivity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:DescribeExecution",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns input and output details."
    },
    {
      "permission": "states:DescribeStateMachine",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:DescribeStateMachineForExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:GetActivityTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used by workers to retrieve a task initiating a long poll."
    },
    {
      "permission": "states:GetExecutionHistory",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Returns input and output details."
    },
    {
      "permission": "states:ListActivities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:ListExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:ListStateMachines",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:SendTaskFailure",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used by workers to report task failures."
    },
    {
      "permission": "states:SendTaskHeartbeat",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used by workers to report task progress."
    },
    {
      "permission": "states:SendTaskSuccess",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Used by workers to report task successes."
    },
    {
      "permission": "states:StartExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:StopExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:TagResource",
      "grant": "Operator",
      "resourceType": "stateMachine",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:UntagResource",
      "grant": "Operator",
      "resourceType": "stateMachine",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "states:UpdateStateMachine",
      "grant": "Admin",
      "resourceType": "stateMachine",
      "operationType": "Update",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can modify existing state of machine."
    },
    {
      "permission": "storagegateway:ActivateGateway",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage gateways."
    },
    {
      "permission": "storagegateway:AddCache",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage caches for cached-volume gateways."
    },
    {
      "permission": "storagegateway:AddTagsToResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can add tags to all resources."
    },
    {
      "permission": "storagegateway:AddUploadBuffer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage upload buffers for gateways."
    },
    {
      "permission": "storagegateway:AddWorkingStorage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated and replaced by AddUploadBuffer by AWS. Set to Whitelist instead of None to consolidate characters in lockdown whitelist policy."
    },
    {
      "permission": "storagegateway:AssignTapePool",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:AttachVolume",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:CancelArchival",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can cancel archivals."
    },
    {
      "permission": "storagegateway:CancelRetrieval",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can cancel retrievals."
    },
    {
      "permission": "storagegateway:CreateCachediSCSIVolume",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage caches for cached-volume gateways."
    },
    {
      "permission": "storagegateway:CreateNFSFileShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage NFS file shares."
    },
    {
      "permission": "storagegateway:CreateSMBFileShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:CreateSnapshot",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create volume snapshots."
    },
    {
      "permission": "storagegateway:CreateSnapshotFromVolumeRecoveryPoint",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can create volume snapshots."
    },
    {
      "permission": "storagegateway:CreateStorediSCSIVolume",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage volumes for gateway-stored gateways."
    },
    {
      "permission": "storagegateway:CreateTapeWithBarcode",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage tapes."
    },
    {
      "permission": "storagegateway:CreateTapes",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage tapes."
    },
    {
      "permission": "storagegateway:DeleteAutomaticTapeCreationPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DeleteBandwidthRateLimit",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators manage gateway bandwidth rate limits."
    },
    {
      "permission": "storagegateway:DeleteChapCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage Challenge-Handshake Authentication Protocol (CHAP) credentials."
    },
    {
      "permission": "storagegateway:DeleteFileShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage NFS file shares."
    },
    {
      "permission": "storagegateway:DeleteGateway",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage gateways."
    },
    {
      "permission": "storagegateway:DeleteSnapshotSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deleting a volume's snapshot schedule does not delete snapshots."
    },
    {
      "permission": "storagegateway:DeleteTape",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage tapes."
    },
    {
      "permission": "storagegateway:DeleteTapeArchive",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage tapes."
    },
    {
      "permission": "storagegateway:DeleteVolume",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage volumes."
    },
    {
      "permission": "storagegateway:DescribeAvailabilityMonitorTest",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeBandwidthRateLimit",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeCache",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeCachediSCSIVolumes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeChapCredentials",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Even though initiator-target secret keys are returned; low risk as admin actions are still needed to setup connection."
    },
    {
      "permission": "storagegateway:DescribeGatewayInformation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeMaintenanceStartTime",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeNFSFileShares",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeSMBFileShares",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeSMBSettings",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeSnapshotSchedule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeStorediSCSIVolumes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeTapeArchives",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeTapeRecoveryPoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeTapes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeUploadBuffer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeVTLDevices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DescribeWorkingStorage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Deprecated and replaced by DescribeUploadBuffer by AWS. Retained by Turbot since it's a read permission."
    },
    {
      "permission": "storagegateway:DetachVolume",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:DisableGateway",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can only disable gateways that are no longer functioning. Disabled gateways cannot be re-enabled."
    },
    {
      "permission": "storagegateway:JoinDomain",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListAutomaticTapeCreationPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListFileShares",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListLocalDisks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListTapes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListVolumeInitiators",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListVolumeRecoveryPoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ListVolumes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:NotifyWhenUploaded",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can enable the NotifyWhenUploaded action."
    },
    {
      "permission": "storagegateway:RefreshCache",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:RemoveTagsFromResource",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can remove tags from all resources."
    },
    {
      "permission": "storagegateway:ResetCache",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can only reset caches that have experienced errors."
    },
    {
      "permission": "storagegateway:RetrieveTapeArchive",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can retrieve archived tapes."
    },
    {
      "permission": "storagegateway:RetrieveTapeRecoveryPoint",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can retrieve recovery points for the specific tape. The retrieved tape is read only."
    },
    {
      "permission": "storagegateway:SetLocalConsolePassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Console passwords are managed by admins."
    },
    {
      "permission": "storagegateway:SetSMBGuestPassword",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:ShutdownGateway",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Shutdown gateways can be started again."
    },
    {
      "permission": "storagegateway:StartAvailabilityMonitorTest",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:StartGateway",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can restart shutdown gateways."
    },
    {
      "permission": "storagegateway:UpdateAutomaticTapeCreationPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:UpdateBandwidthRateLimit",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Gateway bandwidth rate limits are managed by operators."
    },
    {
      "permission": "storagegateway:UpdateChapCredentials",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage CHAP credentials."
    },
    {
      "permission": "storagegateway:UpdateGatewayInformation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage gateway names and timezones."
    },
    {
      "permission": "storagegateway:UpdateGatewaySoftwareNow",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can update gateway software."
    },
    {
      "permission": "storagegateway:UpdateMaintenanceStartTime",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can set weekly maintenance start times."
    },
    {
      "permission": "storagegateway:UpdateNFSFileShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins manage NFS file shares."
    },
    {
      "permission": "storagegateway:UpdateSMBFileShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:UpdateSMBSecurityStrategy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "storagegateway:UpdateSnapshotSchedule",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage when snapshots are created. Old snapshots are not deleted according to this schedule."
    },
    {
      "permission": "storagegateway:UpdateVTLDeviceType",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Update medium changer in an already activated gateway-VTL."
    },
    {
      "permission": "swf:CancelTimer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:CancelWorkflowExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:CompleteWorkflowExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ContinueAsNewWorkflowExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:CountClosedWorkflowExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:CountOpenWorkflowExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:CountPendingActivityTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:CountPendingDecisionTasks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:DeprecateActivityType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "After an activity type has been deprecated you cannot create new tasks of that activity type."
    },
    {
      "permission": "swf:DeprecateDomain",
      "grant": "Admin",
      "resourceType": "Domain",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "swf:DeprecateDomain",
      "dependency": "",
      "help": "After a domain has been deprecated it cannot be used to create new workflow executions or register new types."
    },
    {
      "permission": "swf:DeprecateWorkflowType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "After a workflow type has been deprecated you cannot create new executions of that type."
    },
    {
      "permission": "swf:DescribeActivityType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:DescribeDomain",
      "grant": "Metadata",
      "resourceType": "Domain",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:DescribeWorkflowExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:DescribeWorkflowType",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:FailWorkflowExecution",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:GetWorkflowExecutionHistory",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ListActivityTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ListClosedWorkflowExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ListDomains",
      "grant": "Metadata",
      "resourceType": "Domain",
      "operationType": "Read",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ListOpenWorkflowExecutions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ListWorkflowTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:PollForActivityTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:PollForDecisionTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RecordActivityTaskHeartbeat",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RecordMarker",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RegisterActivityType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RegisterDomain",
      "grant": "Admin",
      "resourceType": "Domain",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "swf:RegisterDomain",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RegisterWorkflowType",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RequestCancelActivityTask",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RequestCancelExternalWorkflowExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RequestCancelWorkflowExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "This logically requests the cancellation of the workflow execution as a whole."
    },
    {
      "permission": "swf:RespondActivityTaskCanceled",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RespondActivityTaskCompleted",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RespondActivityTaskFailed",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:RespondDecisionTaskCompleted",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:ScheduleActivityTask",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:SignalExternalWorkflowExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:SignalWorkflowExecution",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:StartChildWorkflowExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:StartTimer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:StartWorkflowExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:TagResource",
      "grant": "Operator",
      "resourceType": "Domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "tagging:TagResources",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:TerminateWorkflowExecution",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "swf:UntagResource",
      "grant": "Operator",
      "resourceType": "Domain",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "tagging:UntagResources",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:DescribeStacks",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "cloudformation:ListStackResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "resource-explorer:ListResourceTypes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:DescribeReportCreation",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:GetComplianceSummary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:GetResources",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:GetTagKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:GetTagValues",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:StartReportCreation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:TagResources",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "tag:UntagResources",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObject",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "textract:AnalyzeDocument",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "textract:DetectDocumentText",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "textract:GetDocumentAnalysis",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "textract:GetDocumentTextDetection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "textract:StartDocumentAnalysis",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "textract:StartDocumentTextDetection",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:GetObject",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:CreateVocabulary",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:DeleteTranscriptionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:DeleteVocabulary",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:GetTranscriptionJob",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:GetVocabulary",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:ListTranscriptionJobs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:ListVocabularies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:StartTranscriptionJob",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transcribe:UpdateVocabulary",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListPolicies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:ListRoles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "s3:ListAllMyBuckets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:CreateServer",
      "grant": "Admin",
      "resourceType": "server",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create a server."
    },
    {
      "permission": "transfer:CreateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add a user associated with a server."
    },
    {
      "permission": "transfer:DeleteServer",
      "grant": "Admin",
      "resourceType": "server",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:DeleteSshPublicKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:DeleteUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:DescribeServer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:DescribeUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:ImportSshPublicKey",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add an SSH public key to a user."
    },
    {
      "permission": "transfer:ListServers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:ListUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:StartServer",
      "grant": "Operator",
      "resourceType": "server",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:StopServer",
      "grant": "Operator",
      "resourceType": "server",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:TagResource",
      "grant": "Operator",
      "resourceType": "server",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:UntagResource",
      "grant": "Operator",
      "resourceType": "server",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "transfer:UpdateServer",
      "grant": "Admin",
      "resourceType": "server",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can update the configuration of a server."
    },
    {
      "permission": "transfer:UpdateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "comprehend:DetectDominantLanguage",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "health:DescribeEventAggregates",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "kms:ListAliases",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "translate:DeleteTerminology",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "translate:GetTerminology",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "translate:ImportTerminology",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "translate:ListTerminologies",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "translate:TranslateText",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "trustedadvisor:DescribeCheckItems",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "trustedadvisor:DescribeCheckRefreshStatuses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "trustedadvisor:DescribeCheckStatusHistoryChanges",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "trustedadvisor:DescribeCheckSummaries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Only works with support:* permissions, and a premium support subscription"
    },
    {
      "permission": "trustedadvisor:DescribeNotificationPreferences",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "trustedadvisor:ExcludeCheckItems",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Excludes items from reported problems, setting is stored across sessions. See https://aws.amazon.com/premiumsupport/ta-iam/"
    },
    {
      "permission": "trustedadvisor:IncludeCheckItems",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Includes items back in reported problems, setting is stored across sessions. See https://aws.amazon.com/premiumsupport/ta-iam/"
    },
    {
      "permission": "trustedadvisor:RefreshCheck",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Making requests to update the Metadata is appropriate for users with access to the Metadata."
    },
    {
      "permission": "trustedadvisor:UpdateNotificationPreferences",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows settings for notifications by email weekly of status."
    },
    {
      "permission": "ec2:AcceptTransitGatewayPeeringAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:AcceptTransitGatewayVpcAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment|transitGatewayAttachmentCrossAccount",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:AcceptVpcEndpointConnections",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AcceptVpcPeeringConnection",
      "grant": "Whitelist",
      "resourceType": "vpcPeeringConnection",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsPeeringConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AllocateAddress",
      "grant": "Admin",
      "resourceType": "elasticIp",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can allocate new elastic IP addresses; this is considered safe as the proper routing still needs to be configured for public access."
    },
    {
      "permission": "ec2:AssociateAddress",
      "grant": "Admin",
      "resourceType": "elasticIp",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can associate elastic IP addresses; this is considered safe as the proper routing still needs to be configured for public access."
    },
    {
      "permission": "ec2:AssociateDhcpOptions",
      "grant": "Whitelist",
      "resourceType": "dhcpOptions|vpc",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsDhcpOptionsAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AssociateRouteTable",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AssociateSubnetCidrBlock",
      "grant": "Whitelist",
      "resourceType": "subnet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSubnetAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AssociateTransitGatewayRouteTable",
      "grant": "Admin",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:AssociateVpcCidrBlock",
      "grant": "Whitelist",
      "resourceType": "vpc",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AttachClassicLinkVpc",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:AttachInternetGateway",
      "grant": "Whitelist",
      "resourceType": "internetGateway",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsIgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AttachVpnGateway",
      "grant": "Whitelist",
      "resourceType": "vpnGateway",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AuthorizeSecurityGroupEgress",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": ""
    },
    {
      "permission": "ec2:AuthorizeSecurityGroupIngress",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateCustomerGateway",
      "grant": "Whitelist",
      "resourceType": "customerGateway",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsCgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateDefaultSubnet",
      "grant": "Whitelist",
      "resourceType": "subnet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSubnetAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateDefaultVpc",
      "grant": "Whitelist",
      "resourceType": "vpc",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateDhcpOptions",
      "grant": "Whitelist",
      "resourceType": "dhcpOptions",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsDhcpOptionsAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateEgressOnlyInternetGateway",
      "grant": "Whitelist",
      "resourceType": "egressOnlyInternetGateway",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateFlowLogs",
      "grant": "Whitelist",
      "resourceType": "flowLog",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsFlowLogsAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateInternetGateway",
      "grant": "Whitelist",
      "resourceType": "internetGateway",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsIgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateLocalGatewayRoute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateLocalGatewayRouteTableVpcAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateNatGateway",
      "grant": "Whitelist",
      "resourceType": "natGateway",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNatGatewayAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateNetworkAcl",
      "grant": "Whitelist",
      "resourceType": "networkAcl",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNetworkAclAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateNetworkAclEntry",
      "grant": "Whitelist",
      "resourceType": "networkAcl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNetworkAclAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateRoute",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateRoute",
      "grant": "Whitelist",
      "resourceType": "route",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateRouteTable",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateSecurityGroup",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateSubnet",
      "grant": "Whitelist",
      "resourceType": "subnet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSubnetAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateTags",
      "grant": "Operator",
      "resourceType": "vpc|subnet|elasticIp|flowLog|routeTable|securityGroup|internetGateway|vpnGateway|vpcEndpoint|natGateway|dhcpOptions|networkAcl|vpcPeeringConnection|transitGateway|customerGateway|vpnConnection|vpcEndpointService|transitGatewayAttachment|transitGatewayRouteTable|transitGatewayAttachmentCrossAccount",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Tags are low risk for management in Turbot since accounts are the isolation boundary; not tags."
    },
    {
      "permission": "ec2:CreateTransitGateway",
      "grant": "Admin",
      "resourceType": "transitGateway",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateTransitGatewayPeeringAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateTransitGatewayRouteTable",
      "grant": "Admin",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateTransitGatewayVpcAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:CreateVpc",
      "grant": "Whitelist",
      "resourceType": "vpc",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateVpcEndpoint",
      "grant": "Whitelist",
      "resourceType": "vpcEndpoint",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateVpcEndpointConnectionNotification",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "User is required to also have AWS/SNS/Operator role assigned for this action."
    },
    {
      "permission": "ec2:CreateVpcEndpointServiceConfiguration",
      "grant": "Whitelist",
      "resourceType": "vpcEndpointService",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "Allows cross-account access."
    },
    {
      "permission": "ec2:CreateVpcPeeringConnection",
      "grant": "Whitelist",
      "resourceType": "vpcPeeringConnection",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsPeeringConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateVpnConnection",
      "grant": "Whitelist",
      "resourceType": "vpnConnection|transitGatewayAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpnConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateVpnConnectionRoute",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpnConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:CreateVpnGateway",
      "grant": "Whitelist",
      "resourceType": "vpnGateway",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteCustomerGateway",
      "grant": "Whitelist",
      "resourceType": "customerGateway",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsCgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteDhcpOptions",
      "grant": "Whitelist",
      "resourceType": "dhcpOptions",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsDhcpOptionsAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteEgressOnlyInternetGateway",
      "grant": "Whitelist",
      "resourceType": "egressOnlyInternetGateway",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteFlowLogs",
      "grant": "Whitelist",
      "resourceType": "flowLog",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsFlowLogsAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteInternetGateway",
      "grant": "Whitelist",
      "resourceType": "internetGateway",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsIgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteLocalGatewayRoute",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteNatGateway",
      "grant": "Whitelist",
      "resourceType": "natGateway",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNatGatewayAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteNetworkAcl",
      "grant": "Whitelist",
      "resourceType": "networkAcl",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNetworkAclAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteNetworkAclEntry",
      "grant": "Whitelist",
      "resourceType": "networkAcl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNetworkAclAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteRoute",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteRoute",
      "grant": "Whitelist",
      "resourceType": "route",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteRouteTable",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteSecurityGroup",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteSubnet",
      "grant": "Whitelist",
      "resourceType": "subnet",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSubnetAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteTags",
      "grant": "Operator",
      "resourceType": "vpc|subnet|elasticIp|flowLog|routeTable|securityGroup|internetGateway|vpnGateway|vpcEndpoint|natGateway|dhcpOptions|networkAcl|vpcPeeringConnection|transitGateway|customerGateway|vpnConnection|vpcEndpointService|transitGatewayAttachment|transitGatewayRouteTable|transitGatewayAttachmentCrossAccount",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Tags are low risk for management in Turbot since accounts are the isolation boundary; not tags. Most deletions are denied to operator but tags are a low risk management activity even for deletion."
    },
    {
      "permission": "ec2:DeleteTransitGateway",
      "grant": "Admin",
      "resourceType": "transitGateway",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteTransitGatewayPeeringAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteTransitGatewayRouteTable",
      "grant": "Admin",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteTransitGatewayVpcAttachment",
      "grant": "Admin",
      "resourceType": "transitGateway",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteTransitGatewayVpcAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment|transitGatewayAttachmentCrossAccount",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DeleteVpc",
      "grant": "Whitelist",
      "resourceType": "vpc",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteVpcEndpointConnectionNotifications",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "User is required to also have AWS/SNS/Operator role assigned for this action."
    },
    {
      "permission": "ec2:DeleteVpcEndpointServiceConfigurations",
      "grant": "Whitelist",
      "resourceType": "vpcEndpointService",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "Allows cross-account access."
    },
    {
      "permission": "ec2:DeleteVpcEndpoints",
      "grant": "Whitelist",
      "resourceType": "vpcEndpoint",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteVpcPeeringConnection",
      "grant": "Whitelist",
      "resourceType": "vpcPeeringConnection",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsPeeringConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteVpnConnection",
      "grant": "Whitelist",
      "resourceType": "vpnConnection|transitGatewayAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpnConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteVpnConnectionRoute",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpnConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DeleteVpnGateway",
      "grant": "Whitelist",
      "resourceType": "vpnGateway",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DescribeAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeCustomerGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeDhcpOptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeEgressOnlyInternetGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeFlowLogs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeInternetGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLocalGatewayRouteTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLocalGatewayVirtualInterfaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeLocalGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeMovingAddresses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNatGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeNetworkAcls",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribePrefixLists",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeRouteTables",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroupReferences",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeStaleSecurityGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeSubnets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcAttribute",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcClassicLink",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcClassicLinkDnsSupport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpointConnectionNotifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpointConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpointServiceConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpointServicePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpointServices",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcEndpoints",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcPeeringConnection",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcPeeringConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpcs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpnConnections",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DescribeVpnGateways",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DetachInternetGateway",
      "grant": "Whitelist",
      "resourceType": "internetGateway",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsIgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DetachVpnGateway",
      "grant": "Whitelist",
      "resourceType": "vpnGateway",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVgwAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DisableVgwRoutePropagation",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DisableVpcClassicLink",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:DisableVpcClassicLinkDnsSupport",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:DisassociateAddress",
      "grant": "Admin",
      "resourceType": "elasticIp",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can disassociate elastic IP addresses."
    },
    {
      "permission": "ec2:DisassociateRouteTable",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DisassociateSubnetCidrBlock",
      "grant": "Whitelist",
      "resourceType": "subnet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSubnetAdministration",
      "help": ""
    },
    {
      "permission": "ec2:DisassociateTransitGatewayRouteTable",
      "grant": "Admin",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:DisassociateVpcCidrBlock",
      "grant": "Whitelist",
      "resourceType": "vpc",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:EnableTransitGatewayRouteTablePropagation",
      "grant": "Admin",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:EnableVgwRoutePropagation",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:EnableVpcClassicLink",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:EnableVpcClassicLinkDnsSupport",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:ExportTransitGatewayRoutes",
      "grant": "Admin",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifySubnetAttribute",
      "grant": "Whitelist",
      "resourceType": "subnet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSubnetAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ModifyTransitGatewayVpcAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment|transitGatewayAttachmentCrossAccount",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:ModifyVpcAttribute",
      "grant": "Whitelist",
      "resourceType": "vpc",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ModifyVpcEndpoint",
      "grant": "Whitelist",
      "resourceType": "vpcEndpoint",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ModifyVpcEndpointConnectionNotification",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "User is required to also have AWS/SNS/Operator role assigned for this action."
    },
    {
      "permission": "ec2:ModifyVpcEndpointServiceConfiguration",
      "grant": "Whitelist",
      "resourceType": "vpcEndpointService",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "Allows cross-account access."
    },
    {
      "permission": "ec2:ModifyVpcEndpointServicePermissions",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": "Allows cross-account access."
    },
    {
      "permission": "ec2:ModifyVpcPeeringConnectionOptions",
      "grant": "Whitelist",
      "resourceType": "vpcPeeringConnection",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsPeeringConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ModifyVpcTenancy",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsVpcAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ModifyVpnConnection",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Allows to create the transit gateway attachment via vpn connection."
    },
    {
      "permission": "ec2:ModifyVpnConnection",
      "grant": "Admin",
      "resourceType": "vpnConnection",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:MoveAddressToVpc",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:RejectTransitGatewayPeeringAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:RejectTransitGatewayVpcAttachment",
      "grant": "Admin",
      "resourceType": "transitGatewayAttachment|transitGatewayAttachmentCrossAccount",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:RejectVpcEndpointConnections",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsEndpointAdministration",
      "help": ""
    },
    {
      "permission": "ec2:RejectVpcPeeringConnection",
      "grant": "Whitelist",
      "resourceType": "vpcPeeringConnection",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsPeeringConnectionAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ReleaseAddress",
      "grant": "Admin",
      "resourceType": "elasticIp",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can release elastic IP addresses."
    },
    {
      "permission": "ec2:ReplaceNetworkAclAssociation",
      "grant": "Whitelist",
      "resourceType": "networkAcl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNetworkAclAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ReplaceNetworkAclEntry",
      "grant": "Whitelist",
      "resourceType": "networkAcl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsNetworkAclAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ReplaceRoute",
      "grant": "Whitelist",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:ReplaceRouteTableAssociation",
      "grant": "Whitelist",
      "resourceType": "routeTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsRouteTableAdministration",
      "help": ""
    },
    {
      "permission": "ec2:RestoreAddressToClassic",
      "grant": "None",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "EC2 classic should not be used"
    },
    {
      "permission": "ec2:RevokeSecurityGroupEgress",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": ""
    },
    {
      "permission": "ec2:RevokeSecurityGroupIngress",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": ""
    },
    {
      "permission": "ec2:SearchLocalGatewayRoutes",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:SearchTransitGatewayRoutes",
      "grant": "Metadata",
      "resourceType": "transitGatewayRouteTable",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": "Admin can update the description field only."
    },
    {
      "permission": "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
      "grant": "Whitelist",
      "resourceType": "securityGroup",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "vpcServicePermissionsLevelsSecurityGroupAdministration",
      "help": "Admin can update the description field only."
    },
    {
      "permission": "waf:CreateByteMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create the matchset part of a web request for AWS WAF to inspect"
    },
    {
      "permission": "waf:CreateGeoMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateIPSet",
      "grant": "Admin",
      "resourceType": "ipSet",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateRateBasedRule",
      "grant": "Admin",
      "resourceType": "rateBasedRule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateRegexMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateRegexPatternSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a rule which contains the condition objects to block or allow access."
    },
    {
      "permission": "waf:CreateRuleGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a rule group which is a collection of predefined rules that can be added to a web ACL."
    },
    {
      "permission": "waf:CreateSizeConstraintSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateSqlInjectionMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:CreateWebACL",
      "grant": "Admin",
      "resourceType": "webacl",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a WebACL that contains the Rules that identify the CloudFront web requests that should be allowed or blocked or counted."
    },
    {
      "permission": "waf:CreateXssMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteByteMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteGeoMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteIPSet",
      "grant": "Admin",
      "resourceType": "ipSet",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteLoggingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeletePermissionPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can permanently delete an IAM policy from the specified RuleGroup."
    },
    {
      "permission": "waf:DeleteRateBasedRule",
      "grant": "Admin",
      "resourceType": "rateBasedRule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteRegexMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteRegexPatternSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteRuleGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete a RuleGroup."
    },
    {
      "permission": "waf:DeleteSizeConstraintSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteSqlInjectionMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:DeleteWebACL",
      "grant": "Admin",
      "resourceType": "webacl",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can delete a WebACL."
    },
    {
      "permission": "waf:DeleteXssMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetByteMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetChangeToken",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetChangeTokenStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetGeoMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetIPSet",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetLoggingConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetPermissionPolicy",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetRateBasedRule",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetRateBasedRuleManagedKeys",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetRegexMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetRegexPatternSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetRuleGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetSampledRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetSizeConstraintSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetSqlInjectionMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetWebACL",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:GetXssMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListActivatedRulesInRuleGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListByteMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListGeoMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListIPSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListLoggingConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListRateBasedRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListRegexMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListRegexPatternSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListRuleGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListSizeConstraintSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListSqlInjectionMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListSubscribedRuleGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListWebACLs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:ListXssMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:PutLoggingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:PutPermissionPolicy",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can attache a IAM policy to the specified resource."
    },
    {
      "permission": "waf:TagResource",
      "grant": "Operator",
      "resourceType": "webacl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UntagResource",
      "grant": "Operator",
      "resourceType": "webacl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateByteMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateGeoMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateIPSet",
      "grant": "Admin",
      "resourceType": "ipSet",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateRateBasedRule",
      "grant": "Admin",
      "resourceType": "rateBasedRule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateRegexMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateRegexPatternSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateRuleGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can insert or delete an ActivatedRule objects in a RuleGroup."
    },
    {
      "permission": "waf:UpdateSizeConstraintSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateSqlInjectionMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf:UpdateWebACL",
      "grant": "Admin",
      "resourceType": "webacl",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can insert or delete ActivatedRule objects in a WebACL."
    },
    {
      "permission": "waf:UpdateXssMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:AssociateWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:CheckCapacity",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:CreateIPSet",
      "grant": "Admin",
      "resourceType": "ipSetV2Regional|ipSetV2Global",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:CreateRegexPatternSet",
      "grant": "Admin",
      "resourceType": "regexPatternSetV2Global|regexPatternSetV2Regional",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:CreateRuleGroup",
      "grant": "Admin",
      "resourceType": "ruleGroupV2Global|ruleGroupV2Regional",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:CreateWebACL",
      "grant": "Admin",
      "resourceType": "webAclV2Global|webAclV2Regional",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DeleteIPSet",
      "grant": "Admin",
      "resourceType": "ipSetV2Global|ipSetV2Regional",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DeleteLoggingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DeleteRegexPatternSet",
      "grant": "Admin",
      "resourceType": "regexPatternSetV2Global|regexPatternSetV2Regional",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DeleteRuleGroup",
      "grant": "Admin",
      "resourceType": "ruleGroupV2Global|ruleGroupV2Regional",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DeleteWebACL",
      "grant": "Admin",
      "resourceType": "webAclV2Global|webAclV2Regional",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DescribeManagedRuleGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:DisassociateWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetIPSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetLoggingConfiguration",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetRateBasedStatementManagedKeys",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetRegexPatternSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetRuleGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetSampledRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetWebACL",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:GetWebACLForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListAvailableManagedRuleGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListIPSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListLoggingConfigurations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListRegexPatternSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListResourcesForWebACL",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListRuleGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListTagsForResource",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:ListWebACLs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:PutLoggingConfiguration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:TagResource",
      "grant": "Operator",
      "resourceType": "ipSetV2Global|ruleGroupV2Global|webAclV2Global|regexPatternSetV2Global|ipSetV2Regional|webAclV2Regional|ruleGroupV2Regional|regexPatternSetV2Regional",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:UntagResource",
      "grant": "Operator",
      "resourceType": "ipSetV2Global|ruleGroupV2Global|webAclV2Global|regexPatternSetV2Global|ipSetV2Regional|webAclV2Regional|ruleGroupV2Regional|regexPatternSetV2Regional",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:UpdateIPSet",
      "grant": "Admin",
      "resourceType": "ipSetV2Regional|ipSetV2Regional",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:UpdateRegexPatternSet",
      "grant": "Admin",
      "resourceType": "regexPatternSetV2Regional|regexPatternSetV2Regional",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:UpdateRuleGroup",
      "grant": "Admin",
      "resourceType": "ruleGroupV2Global|ruleGroupV2Regional",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wafv2:UpdateWebACL",
      "grant": "Admin",
      "resourceType": "webAclV2Global|webAclV2Regional",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:AssociateWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateByteMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateGeoMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateIPSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateRateBasedRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateRegexMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateRegexPatternSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateSizeConstraintSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateSqlInjectionMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:CreateXssMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteByteMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteGeoMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteIPSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteRateBasedRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteRegexMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteRegexPatternSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteSizeConstraintSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteSqlInjectionMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DeleteXssMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:DisassociateWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetByteMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetChangeToken",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetChangeTokenStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetGeoMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetIPSet",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetRateBasedRule",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetRateBasedRuleManagedKeys",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetRegexMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetRegexPatternSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetRule",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetSampledRequests",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetSizeConstraintSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetSqlInjectionMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetWebACL",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetWebACLForResource",
      "grant": "ReadOnly",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:GetXssMatchSet",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListByteMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListGeoMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListIPSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListRateBasedRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListRegexMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListRegexPatternSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListResourcesForWebACL",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListSizeConstraintSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListSqlInjectionMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListWebACLs",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:ListXssMatchSets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateByteMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateGeoMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateIPSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateRateBasedRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateRegexMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateRegexPatternSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateRule",
      "grant": "Admin",
      "resourceType": "rule",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateSizeConstraintSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateSqlInjectionMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateWebACL",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "waf-regional:UpdateXssMatchSet",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:CreateWorkload",
      "grant": "Admin",
      "resourceType": "Workload",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:CreateWorkloadShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:DeleteWorkload",
      "grant": "Admin",
      "resourceType": "Workload",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:GetWorkload",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListWorkloads",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:UpdateWorkload",
      "grant": "Admin",
      "resourceType": "Workload",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:UpdateWorkloadShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:AssociateLenses",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:CreateMilestone",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:DeleteWorkloadShare",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:DisassociateLenses",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:GetAnswer",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:GetLensReview",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:GetLensReviewReport",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:GetLensVersionDifference",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:GetMilestone",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListAnswers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListLensReviewImprovements",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListLensReviews",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListLenses",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListMilestones",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListNotifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListShareInvitations",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:ListWorkloadShares",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:UpdateAnswer",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:UpdateLensReview",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:UpdateShareInvitation",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "wellarchitected:UpgradeLensReview",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:AbortDocumentVersionUpload",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:ActivateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can activate specified user. Only active users can access Amazon WorkDocs."
    },
    {
      "permission": "workdocs:AddResourcePermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create a set of permissions for the specified folder or document."
    },
    {
      "permission": "workdocs:CreateComment",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:CreateCustomMetadata",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:CreateFolder",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can create folder within parent folder."
    },
    {
      "permission": "workdocs:CreateLabels",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:CreateNotificationSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can configure WorkDocs to use Amazon SNS notifications."
    },
    {
      "permission": "workdocs:CreateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can create user in a Simple AD or Microsoft AD directory."
    },
    {
      "permission": "workdocs:DeactivateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can deactivate user to access  Amazon WorkDocs."
    },
    {
      "permission": "workdocs:DeleteComment",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteCustomMetadata",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteDocument",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteFolder",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteFolderContents",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteLabels",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteNotificationSubscription",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DeleteUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeActivities",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describes the user activities in a specified time period."
    },
    {
      "permission": "workdocs:DescribeComments",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeDocumentVersions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeFolderContents",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Can only view metadata. No data access."
    },
    {
      "permission": "workdocs:DescribeGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeNotificationSubscriptions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeResourcePermissions",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeRootFolders",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:DescribeUsers",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:GetCurrentUser",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves details of the current user for whom the authentication token was generated. This is not a valid action for SigV4 (administrative API) clients."
    },
    {
      "permission": "workdocs:GetDocument",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:GetDocumentPath",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:GetDocumentVersion",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:GetFolder",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the metadata of the specified folder."
    },
    {
      "permission": "workdocs:GetFolderPath",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the path information (the hierarchy from the root folder) for the requested document."
    },
    {
      "permission": "workdocs:InitiateDocumentVersionUpload",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Creates a new document object and version object."
    },
    {
      "permission": "workdocs:RemoveAllResourcePermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can remove all the permissions from the specified resource."
    },
    {
      "permission": "workdocs:RemoveResourcePermission",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Removes the permission for the specified principal from the specified resource."
    },
    {
      "permission": "workdocs:UpdateDocument",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:UpdateDocumentVersion",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Operator can change the status of the document version to ACTIVE."
    },
    {
      "permission": "workdocs:UpdateFolder",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workdocs:UpdateUser",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admin can update the specified attributes of the specified user. And grants/revokes administrative privileges to the Amazon WorkDocs site."
    },
    {
      "permission": "iam:GetRole",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "iam:PassRole",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can allow workspace to use workspaces_DefaultRole role to create and delete network interface and required permissions."
    },
    {
      "permission": "workspaces:AssociateIpGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can associate the specified IP access control group with the specified directory."
    },
    {
      "permission": "workspaces:AuthorizeIpRules",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can add one or more rules to the specified IP access control group."
    },
    {
      "permission": "workspaces:CopyWorkspaceImage",
      "grant": "Operator",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:CreateIpGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can create an IP access control group."
    },
    {
      "permission": "workspaces:CreateRegistration",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:CreateTags",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:CreateWorkspaces",
      "grant": "Admin",
      "resourceType": "workspace",
      "operationType": "Create",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage create/terminate WorkSpace Instances."
    },
    {
      "permission": "workspaces:DeleteIpGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DeleteTags",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:DeleteWorkspaceImage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DeregisterWorkspaceDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeAccount",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves a list that describes the configuration of bring your own license (BYOL) for the specified account."
    },
    {
      "permission": "workspaces:DescribeAccountModifications",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves a list that describes modifications to the configuration of bring your own license (BYOL) for the specified account."
    },
    {
      "permission": "workspaces:DescribeClientProperties",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Describe client properties about the specified resources."
    },
    {
      "permission": "workspaces:DescribeIpGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeTags",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeWorkspaceBundles",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeWorkspaceDirectories",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeWorkspaceImages",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves a list that describes one or more specified images."
    },
    {
      "permission": "workspaces:DescribeWorkspaceSnapshots",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeWorkspaces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DescribeWorkspacesConnectionStatus",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:DisassociateIpGroups",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:ImportWorkspaceImage",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Import a licensed EC2 image to into Amazon WorkSpaces."
    },
    {
      "permission": "workspaces:ListAvailableManagementCidrRanges",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "List available CIDR ranges for a CIDR range constraint."
    },
    {
      "permission": "workspaces:ModifyAccount",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Modify the configuration of bring your own license (BYOL) for the specified account."
    },
    {
      "permission": "workspaces:ModifyClientProperties",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Modify the client properties of a specified resource."
    },
    {
      "permission": "workspaces:ModifySelfservicePermissions",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:ModifyWorkspaceAccessProperties",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:ModifyWorkspaceCreationProperties",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:ModifyWorkspaceProperties",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:ModifyWorkspaceState",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can change the state of workSpace to ADMIN_MAINTENANCE inorder to perform maintenance."
    },
    {
      "permission": "workspaces:RebootWorkspaces",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:RebuildWorkspaces",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:RegisterWorkspaceDirectory",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:RestoreWorkspace",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "workspaces:RevokeIpRules",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can remove one or more rules from the specified IP access control group."
    },
    {
      "permission": "workspaces:StartWorkspaces",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:StopWorkspaces",
      "grant": "Operator",
      "resourceType": "workspace",
      "operationType": "Update",
      "fullCmdbUpdate": true,
      "eventPermission": "",
      "dependency": "",
      "help": "Operators can manage existing WorkSpace instances."
    },
    {
      "permission": "workspaces:TerminateWorkspaces",
      "grant": "Admin",
      "resourceType": "workspace",
      "operationType": "Delete",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can manage create/terminate WorkSpace Instances."
    },
    {
      "permission": "workspaces:UpdateRulesOfIpGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:BatchGetTraces",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:CreateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:CreateSamplingRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:DeleteGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:DeleteSamplingRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetEncryptionConfig",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Retrieves the current encryption configuration for X-Ray data."
    },
    {
      "permission": "xray:GetGroup",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetGroups",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetSamplingRules",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetSamplingStatisticSummaries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetSamplingTargets",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetServiceGraph",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetTimeSeriesServiceStatistics",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetTraceGraph",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:GetTraceSummaries",
      "grant": "Metadata",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:PutEncryptionConfig",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": "Admins can update the encryption configuration for X-Ray data."
    },
    {
      "permission": "xray:PutTelemetryRecords",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:PutTraceSegments",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:UpdateGroup",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    },
    {
      "permission": "xray:UpdateSamplingRule",
      "grant": "Admin",
      "resourceType": "",
      "operationType": "",
      "fullCmdbUpdate": "",
      "eventPermission": "",
      "dependency": "",
      "help": ""
    }
  ],
  "defaultPermissions": [
    {
      "permission": "aws-marketplace-management:uploadFiles",
      "grant": "None",
      "date": "1/13/2015",
      "help": ""
    },
    {
      "permission": "aws-marketplace-management:viewMarketing",
      "grant": "Metadata",
      "date": "1/13/2015",
      "help": ""
    },
    {
      "permission": "aws-marketplace-management:viewReports",
      "grant": "Metadata",
      "date": "1/13/2015",
      "help": ""
    },
    {
      "permission": "aws-marketplace-management:viewSupport",
      "grant": "Metadata",
      "date": "1/13/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ModifyAccount",
      "grant": "None",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ModifyBilling",
      "grant": "None",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ModifyPaymentMethods",
      "grant": "None",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewAccount",
      "grant": "Metadata",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewBilling",
      "grant": "Metadata",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewBudget",
      "grant": "Metadata",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewPaymentMethods",
      "grant": "Metadata",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "aws-portal:ViewUsage",
      "grant": "Metadata",
      "date": "12/16/2015",
      "help": ""
    },
    {
      "permission": "ce:GetCostAndUsage",
      "grant": "Metadata",
      "date": "12/5/17",
      "help": ""
    },
    {
      "permission": "ce:GetDimensionValues",
      "grant": "Metadata",
      "date": "12/5/17",
      "help": ""
    },
    {
      "permission": "ce:GetReservationCoverage",
      "grant": "Metadata",
      "date": "4/18/18",
      "help": "This retrieves the reservation coverage of the account."
    },
    {
      "permission": "ce:GetReservationPurchaseRecommendation",
      "grant": "Metadata",
      "date": "4/18/18",
      "help": ""
    },
    {
      "permission": "ce:GetReservationUtilization",
      "grant": "Metadata",
      "date": "12/5/17",
      "help": ""
    },
    {
      "permission": "ce:GetTags",
      "grant": "Metadata",
      "date": "12/5/17",
      "help": ""
    },
    {
      "permission": "pricing:DescribeServices",
      "grant": "Metadata",
      "date": "11/9/2017",
      "help": "Provides metadata for one service or a list of the metadata for all services."
    },
    {
      "permission": "pricing:GetAttributeValues",
      "grant": "Metadata",
      "date": "11/9/2017",
      "help": ""
    },
    {
      "permission": "pricing:GetProducts",
      "grant": "Metadata",
      "date": "11/9/2017",
      "help": "Provides list of all products that match the filter criteria."
    },
    {
      "permission": "sts:GetCallerIdentity",
      "grant": "User",
      "date": "1/14/15",
      "help": "All users have permissions to query their own user information from STS."
    },
    {
      "permission": "sts:GetFederationToken",
      "grant": "User",
      "date": "1/14/15",
      "help": "All users regardless of their rights to access resources need permission to GetFederationToken as this is used in the authentication / login flow to the AWS console from Turbot."
    },
    {
      "permission": "sts:GetSessionToken",
      "grant": "User",
      "date": "1/14/15",
      "help": "All users regardless of their permissions within AWS should be able to get temporary credentials to access AWS."
    },
    {
      "permission": "support:*",
      "grant": "User",
      "date": "3/20/2015",
      "help": "Only supports support:* as per http://docs.aws.amazon.com/awssupport/latest/user/getting-started.html#accessing-support Full API is at http://docs.aws.amazon.com/awssupport/latest/APIReference/Welcome.html. Open to all AWS users."
    }
  ],
  "action": {
    "types": {
      "accessKeyDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "parent": "#/resource/types/accessKey",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "category": "turbot#/control/categories/other",
        "description": "Delete the AWS IAM access key from the cloud provider, as well as the CMDB.",
        "function": {
          "src": "functions/accessKey/delete",
          "bundle": "functions/accessKey/delete/dist/index.zip",
          "memory": 1024,
          "hash": "c1b7f8ee7d"
        }
      },
      "accessKeyRouter": {
        "title": "Router",
        "icon": "fal-random",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/cmdb",
        "maintenanceRestriction": "anytime",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Process events for AWS IAM service Access Key resources.\n\nThe router receives events from the event handler and creates, updates, or deletes Access Key resources in the CMDB.\n",
        "events": [
          "iam:CreateAccessKey",
          "iam:DeleteAccessKey",
          "iam:UpdateAccessKey"
        ]
      },
      "accountPasswordPolicyRouter": {
        "title": "Router",
        "description": "Router for IAM Account Password Policy events.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:DeleteAccountPasswordPolicy",
          "iam:UpdateAccountPasswordPolicy"
        ]
      },
      "accountPasswordPolicySetPasswordPolicy": {
        "title": "Set Password Policy",
        "icon": "fal-key",
        "description": "Action that sets the account password policy based on polices set by the user.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "help": "#/help/accountPasswordPolicySetPasswordPolicy",
        "validationIgnoreChildProperties": [
          "params"
        ],
        "function": {
          "src": "functions/accountPasswordPolicy/setPasswordPolicy",
          "bundle": "functions/accountPasswordPolicy/setPasswordPolicy/dist/index.zip",
          "memory": 1024,
          "hash": "27d41daed9"
        }
      },
      "attachGroupPolicies": {
        "title": "Attach Group Policies",
        "icon": "fal-edit",
        "description": "Manages the IAM policies attached to AWS IAM group.",
        "parent": "#/resource/types/group",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/group/attachGroupPolicies",
          "bundle": "functions/group/attachGroupPolicies/dist/index.zip",
          "memory": 1024,
          "hash": "b02bf5f614"
        }
      },
      "groupDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "parent": "#/resource/types/group",
        "targets": [
          "#/resource/types/group"
        ],
        "category": "turbot#/control/categories/other",
        "description": "Delete the AWS IAM group from the cloud provider, as well as the CMDB.",
        "function": {
          "src": "functions/group/delete",
          "bundle": "functions/group/delete/dist/index.zip",
          "memory": 1024,
          "hash": "2ce9f7389b"
        }
      },
      "detachGroupPolicies": {
        "title": "Detach Policies",
        "icon": "fal-edit",
        "description": "Manages the IAM policies attached to AWS IAM group.",
        "parent": "#/resource/types/group",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/group/detachGroupPolicies",
          "bundle": "functions/group/detachGroupPolicies/dist/index.zip",
          "memory": 1024,
          "hash": "9528759710"
        }
      },
      "groupRouter": {
        "title": "Router",
        "icon": "fal-random",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "maintenanceRestriction": "anytime",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Process events for AWS IAM service Group resources.\n\nThe router receives events from the event handler and creates, updates, or deletes Group resources in the CMDB.\n",
        "events": [
          "iam:AddUserToGroup",
          "iam:CreateGroup",
          "iam:DeleteGroup",
          "iam:DeleteGroupPolicy",
          "iam:PutGroupPolicy",
          "iam:RemoveUserFromGroup"
        ]
      },
      "groupPolicyAttachmentDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "description": "Delete the AWS IAM group policy attachment.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/other",
        "help": "#/help/groupPolicyAttachmentDelete",
        "function": {
          "src": "functions/groupPolicyAttachment/delete",
          "bundle": "functions/groupPolicyAttachment/delete/dist/index.zip",
          "memory": 1024,
          "hash": "ab1f3b99d3"
        }
      },
      "groupPolicyAttachmentRouter": {
        "title": "Router",
        "description": "Router for IAM user events.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:AttachGroupPolicy",
          "iam:DetachGroupPolicy"
        ]
      },
      "iamPolicyCreateVersion": {
        "title": "Create Version",
        "icon": "fal-copy",
        "description": "Create a new version with the updated IAM policy document.",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/iamPolicy/createVersion",
          "bundle": "functions/iamPolicy/createVersion/dist/index.zip",
          "memory": 1024,
          "hash": "95054212f7"
        }
      },
      "iamPolicyDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "description": "Delete the AWS IAM aws iam policy.",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/other",
        "help": "#/help/iamPolicyDelete",
        "function": {
          "src": "functions/iamPolicy/delete",
          "bundle": "functions/iamPolicy/delete/dist/index.zip",
          "memory": 1024,
          "hash": "9d7ffade27"
        }
      },
      "iamPolicyRouter": {
        "title": "Router",
        "description": "Router for IAM Policy events.",
        "parent": "#/resource/types/iamPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:CreatePolicy",
          "iam:CreatePolicyVersion",
          "iam:DeletePolicy",
          "iam:DeletePolicyVersion",
          "iam:SetDefaultPolicyVersion"
        ]
      },
      "mfaVirtualRouter": {
        "title": "Router",
        "description": "Router for IAM mfaVirtual events.",
        "parent": "#/resource/types/mfaVirtual",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:CreateVirtualMFADevice",
          "iam:DeleteVirtualMFADevice",
          "iam:EnableMFADevice"
        ]
      },
      "roleAttachPolicies": {
        "title": "Attach Policies",
        "icon": "fal-trash-alt",
        "description": "Manages the IAM policies attached to AWS IAM role.",
        "parent": "#/resource/types/role",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/role/attachPolicies",
          "bundle": "functions/role/attachPolicies/dist/index.zip",
          "memory": 1024,
          "hash": "972a55d1b6"
        }
      },
      "roleDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "parent": "#/resource/types/role",
        "targets": [
          "#/resource/types/role"
        ],
        "category": "turbot#/control/categories/other",
        "description": "Delete the AWS IAM role from the cloud provider, as well as the CMDB.",
        "function": {
          "src": "functions/role/delete",
          "bundle": "functions/role/delete/dist/index.zip",
          "memory": 1024,
          "hash": "00d1833c60"
        }
      },
      "roleDetachPolicies": {
        "title": "Detach Policies",
        "icon": "fal-trash-alt",
        "description": "Manages the IAM policies attached to AWS IAM role.",
        "parent": "#/resource/types/role",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/role/detachPolicies",
          "bundle": "functions/role/detachPolicies/dist/index.zip",
          "memory": 1024,
          "hash": "3ef54ecfac"
        }
      },
      "roleRouter": {
        "title": "Router",
        "icon": "fal-random",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "maintenanceRestriction": "anytime",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Process events for AWS IAM service Role resources.\n\nThe router receives events from the event handler and creates, updates, or deletes Role resources in the CMDB.\n",
        "events": [
          "iam:CreateRole",
          "iam:DeleteRole",
          "iam:DeleteRolePermissionsBoundary",
          "iam:PutRolePermissionsBoundary",
          "iam:TagRole",
          "iam:UntagRole",
          "iam:UpdateAssumeRolePolicy",
          "iam:UpdateRole",
          "iam:UpdateRoleDescription"
        ]
      },
      "setRoleBoundaryPolicy": {
        "title": "Set Boundary Policy",
        "icon": "fal-edit",
        "description": "Set the desired Boundary Policy",
        "parent": "#/resource/types/role",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/role/setBoundaryPolicy",
          "bundle": "functions/role/setBoundaryPolicy/dist/index.zip",
          "memory": 1024,
          "hash": "d5e855776c"
        }
      },
      "roleSetPolicyTrustedAccess": {
        "title": "Set Policy Trusted Access",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/role",
        "targets": [
          "#/resource/types/role"
        ],
        "category": "turbot#/control/categories/securityTrustedAccess",
        "description": "Set Trusted Access for `AWS > IAM > Role`.",
        "function": {
          "src": "functions/role/setPolicyTrustedAccess",
          "bundle": "functions/role/setPolicyTrustedAccess/dist/index.zip",
          "memory": 1024,
          "hash": "cc4e3afcd8"
        }
      },
      "updateAssumeRolePolicy": {
        "title": "Update Trust Policy",
        "icon": "fal-edit",
        "description": "Update the AWS IAM role trusted relationship policy.",
        "parent": "#/resource/types/role",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "help": "#/help/roleDelete",
        "function": {
          "src": "functions/role/updateAssumeRolePolicy",
          "bundle": "functions/role/updateAssumeRolePolicy/dist/index.zip",
          "memory": 1024,
          "hash": "2b4cf186fa"
        }
      },
      "roleUpdateTags": {
        "title": "Update Tags",
        "icon": "fal-tags",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceTags",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Update the tags for AWS IAM role tags.",
        "function": {
          "src": "functions/role/updateTags",
          "bundle": "functions/role/updateTags/dist/index.zip",
          "memory": 1024,
          "hash": "ed9d7b255f"
        }
      },
      "rolePolicyAttachmentDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "description": "Delete the AWS IAM role policy attachment.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/other",
        "help": "#/help/rolePolicyAttachmentDelete",
        "function": {
          "src": "functions/rolePolicyAttachment/delete",
          "bundle": "functions/rolePolicyAttachment/delete/dist/index.zip",
          "memory": 1024,
          "hash": "92fe4fbedd"
        }
      },
      "rolePolicyAttachmentRouter": {
        "title": "Router",
        "description": "Router for IAM Role Policy Attachment events.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:AttachRolePolicy",
          "iam:DetachRolePolicy"
        ]
      },
      "attachUserPolicies": {
        "title": "Attach User Policies",
        "icon": "fal-trash-alt",
        "description": "Manages the IAM policies attached to AWS IAM user.",
        "parent": "#/resource/types/user",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/user/attachUserPolicies",
          "bundle": "functions/user/attachUserPolicies/dist/index.zip",
          "memory": 1024,
          "hash": "63d64968b1"
        }
      },
      "userDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "parent": "#/resource/types/user",
        "targets": [
          "#/resource/types/user"
        ],
        "category": "turbot#/control/categories/other",
        "description": "Delete the AWS IAM user from the cloud provider, as well as the CMDB.",
        "function": {
          "src": "functions/user/delete",
          "bundle": "functions/user/delete/dist/index.zip",
          "memory": 1024,
          "hash": "68e0c60df4"
        }
      },
      "userDetachPolicies": {
        "title": "Detach Policies",
        "icon": "fal-trash-alt",
        "description": "Manages the IAM policies attached to AWS IAM user.",
        "parent": "#/resource/types/user",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/user/detachUserPolicies",
          "bundle": "functions/user/detachUserPolicies/dist/index.zip",
          "memory": 1024,
          "hash": "a160311b3f"
        }
      },
      "userRouter": {
        "title": "Router",
        "icon": "fal-random",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "maintenanceRestriction": "anytime",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Process events for AWS IAM service User resources.\n\nThe router receives events from the event handler and creates, updates, or deletes User resources in the CMDB.\n",
        "events": [
          "iam:CreateUser",
          "iam:DeleteUser",
          "iam:DeleteUserPermissionsBoundary",
          "iam:PutUserPermissionsBoundary",
          "iam:TagUser",
          "iam:UntagUser",
          "iam:UpdateUser"
        ]
      },
      "setBoundaryPolicy": {
        "title": "Set Boundary Policy",
        "icon": "fal-edit",
        "description": "Set the desired Boundary Policy",
        "parent": "#/resource/types/user",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/user/setBoundaryPolicy",
          "bundle": "functions/user/setBoundaryPolicy/dist/index.zip",
          "memory": 1024,
          "hash": "7f0ef8bca4"
        }
      },
      "userUpdateTags": {
        "title": "Update Tags",
        "icon": "fal-tags",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceTags",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Update the tags for AWS IAM user tags.",
        "function": {
          "src": "functions/user/updateTags",
          "bundle": "functions/user/updateTags/dist/index.zip",
          "memory": 1024,
          "hash": "b10619d2b5"
        }
      },
      "userPolicyAttachmentRouter": {
        "title": "Router",
        "description": "Router for IAM User Policy Attachment events.",
        "parent": "#/resource/types/userPolicyAttachment",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:AttachUserPolicy",
          "iam:DetachUserPolicy"
        ]
      },
      "userInlinePolicyDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "description": "Delete the AWS IAM user inline policy.",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/other",
        "help": "#/help/userInlinePolicyDelete",
        "function": {
          "src": "functions/userInlinePolicy/delete",
          "bundle": "functions/userInlinePolicy/delete/dist/index.zip",
          "memory": 1024,
          "hash": "3c38ace739"
        }
      },
      "userInlinePolicyRouter": {
        "title": "Router",
        "description": "Router for IAM User Inline Policy events.",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:DeleteUserPolicy",
          "iam:PutUserPolicy"
        ]
      },
      "userUpdateInlinePolicyStatements": {
        "title": "Update User Inline Policy",
        "icon": "fal-edit",
        "description": "Manages the IAM user inline policies attached to AWS IAM user.",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/userInlinePolicy/userUpdateInlinePolicyStatements",
          "bundle": "functions/userInlinePolicy/userUpdateInlinePolicyStatements/dist/index.zip",
          "memory": 1024,
          "hash": "bd37d24bb0"
        }
      },
      "groupInlinePolicyDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "description": "Delete the AWS IAM inline policy.",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/other",
        "help": "#/help/groupInlinePolicyDelete",
        "function": {
          "src": "functions/groupInlinePolicy/delete",
          "bundle": "functions/groupInlinePolicy/delete/dist/index.zip",
          "memory": 1024,
          "hash": "2db9671504"
        }
      },
      "groupInlinePolicyRouter": {
        "title": "Router",
        "description": "Router for IAM Group Inline Policy events.",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:DeleteGroupPolicy",
          "iam:PutGroupPolicy"
        ]
      },
      "groupInlinePolicyUpdateStatements": {
        "title": "Update Group Inline Policy",
        "icon": "fal-edit",
        "description": "Update the AWS Group Inline Policy statements.",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/groupInlinePolicy/updateStatements",
          "bundle": "functions/groupInlinePolicy/updateStatements/dist/index.zip",
          "memory": 1024,
          "hash": "8325f9de11"
        }
      },
      "roleInlinePolicyDelete": {
        "title": "Delete",
        "icon": "fal-trash-alt",
        "description": "Delete the AWS IAM inline policy.",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/other",
        "help": "#/help/roleInlinePolicyDelete",
        "function": {
          "src": "functions/roleInlinePolicy/delete",
          "bundle": "functions/roleInlinePolicy/delete/dist/index.zip",
          "memory": 1024,
          "hash": "4509dc177d"
        }
      },
      "roleInlinePolicyRouter": {
        "title": "Router",
        "description": "Router for IAM Role Inline Policy events.",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:DeleteRolePolicy",
          "iam:PutRolePolicy"
        ]
      },
      "roleUpdateInlinePolicyStatements": {
        "title": "Update Role Inline Policy",
        "icon": "fal-edit",
        "description": "Manages the IAM role inline policies attached to AWS IAM user.",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/other",
        "function": {
          "src": "functions/roleInlinePolicy/roleUpdateInlinePolicyStatements",
          "bundle": "functions/roleInlinePolicy/roleUpdateInlinePolicyStatements/dist/index.zip",
          "memory": 1024,
          "hash": "4344ada511"
        }
      },
      "instanceProfileRouter": {
        "title": "Router",
        "description": "Router for IAM Instance Profile events.",
        "parent": "#/resource/types/instanceProfile",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "events": [
          "iam:CreateInstanceProfile",
          "iam:DeleteInstanceProfile",
          "iam:RemoveRoleFromInstanceProfile"
        ]
      }
    }
  },
  "control": {
    "types": {
      "accessKeyActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "Take an action when an AWS IAM access key is not active based on the\n`AWS > IAM > Access Key > Active > *` policies.\n\nThe Active control determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated compliance\nenvironment, it's common to end up with a wide range of alarms that are difficult\nand time consuming to clear. The Active control brings automated, well-defined\ncontrol to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Access Key > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n\nNote the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/accessKeyActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/accessKeyCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "accessKeyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "defaultInterval": {
          "hours": 4
        },
        "description": "Record and synchronize details for the AWS IAM access key into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/accessKeyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/accessKey/cmdb",
          "bundle": "functions/accessKey/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "fda0e1399b"
        }
      },
      "accessKeyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "Maintain AWS > IAM > Access Key configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "accessKeyDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/cmdbDiscovery",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Discover all AWS IAM access key resources and add them to the CMDB.\n\nThe [Discovery](https://turbot.com/v5/docs/concepts/guardrails/discovery) control is responsible for finding resources of a specific type. It periodically searches for new resources and saves them to the CMDB. Once discovered, resources are then responsible for tracking changes to themselves through the [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/accessKeyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          },
          {
            "policy": {
              "uri": "#/policy/types/accessKeyCmdb",
              "values": [
                "Enforce: Disabled"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Enforce: Disabled"
          }
        ],
        "function": {
          "src": "functions/accessKey/discovery",
          "bundle": "functions/accessKey/discovery/dist/index.zip",
          "memory": 512,
          "timeout": 300,
          "hash": "5fee9befff"
        }
      },
      "accessKeyUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "The Usage control determines whether the number of AWS IAM access key resources exceeds the configured usage limit for this user.\n\nYou can configure the behavior of this control with the  `AWS > IAM > Access Key > Usage` policy, and set the limit with the `AWS > IAM > Access Key > Usage > Limit` policy.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/accessKeyUsage",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Usage set to skip"
          }
        ]
      },
      "accountPasswordPolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM Account Password Policy into the CMDB.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/accountPasswordPolicy/cmdb",
          "bundle": "functions/accountPasswordPolicy/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "944848b19e"
        }
      },
      "accountPasswordPolicyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accountPasswordPolicy"
        ],
        "description": "Maintain AWS > IAM > Account Password Policy configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "accountPasswordPolicyDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM account password policies for record in the CMDB.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/accountPasswordPolicy/discovery",
          "bundle": "functions/accountPasswordPolicy/discovery/dist/index.zip",
          "memory": 512,
          "hash": "13059291e2"
        }
      },
      "accountPasswordPolicySettings": {
        "title": "Settings",
        "icon": "fal-key",
        "description": "Configure the account password policy with the correct settings.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "help": "#/help/accountPasswordPolicySettings"
      },
      "accountSummaryCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/accountSummary",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/accountSummary"
        ],
        "description": "Record and synchronize details for the AWS IAM account summary into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/accountSummaryCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/accountSummary/cmdb",
          "bundle": "functions/accountSummary/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "717630b2ee"
        }
      },
      "accountSummaryDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "parent": "#/resource/types/accountSummary",
        "category": "turbot#/control/categories/cmdbDiscovery",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Discover all AWS IAM account summary resources and add them to the CMDB.\n\nThe [Discovery](https://turbot.com/v5/docs/concepts/guardrails/discovery) control is responsible for finding resources of a specific type. It periodically searches for new resources and saves them to the CMDB. Once discovered, resources are then responsible for tracking changes to themselves through the [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/accountSummaryCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          },
          {
            "policy": {
              "uri": "#/policy/types/accountSummaryCmdb",
              "values": [
                "Enforce: Disabled"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Enforce: Disabled"
          }
        ],
        "function": {
          "src": "functions/accountSummary/discovery",
          "bundle": "functions/accountSummary/discovery/dist/index.zip",
          "memory": 512,
          "timeout": 300,
          "hash": "d3dab6dd11"
        }
      },
      "credentialReportCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM credential report into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nThis control will automatically re-run every 6 hours to generate a credential report.\n",
        "parent": "#/resource/types/credentialReport",
        "targets": "#/resource/types/credentialReport",
        "category": "turbot#/control/categories/cmdb",
        "defaultInterval": {
          "hours": 6
        },
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/credentialReportCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/credentialReport/cmdb",
          "bundle": "functions/credentialReport/cmdb/dist/index.zip",
          "memory": 512,
          "timeout": 120,
          "hash": "63bd95e2f8"
        }
      },
      "credentialReportDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM credential reports for record in the CMDB.",
        "parent": "#/resource/types/credentialReport",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/credentialReport/discovery",
          "bundle": "functions/credentialReport/discovery/dist/index.zip",
          "memory": 512,
          "timeout": 120,
          "hash": "ed169df869"
        }
      },
      "groupActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Take an action when an AWS IAM group is not active based on the\n`AWS > IAM > Group > Active > *` policies.\n\nThe Active control determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated compliance\nenvironment, it's common to end up with a wide range of alarms that are difficult\nand time consuming to clear. The Active control brings automated, well-defined\ncontrol to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Group > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n\nNote the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/groupCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "groupApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Take an action when an AWS IAM group is not approved based on `AWS > IAM > Group > Approved > * policies`.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nFor any enforcement actions that specify `if new`, e.g., `Enforce: Delete unapproved if new`, this control will only take the enforcement actions for resources created within the last 60 minutes.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupApproved",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Approved set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/groupCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD state"
          }
        ]
      },
      "groupPolicyAttachmentsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure AWS IAM group policies binding `Approved` checking. This policy\ndefines whether to verify the IAM group attached policies are approved\n(per `Approved > Compiled Rules`), as well as the subsequent action to\ntake on unapproved items.\nIf set to \"Enforce: Delete unapproved\", any unapproved attached policy\nwill be removed.\n",
        "parent": "#/control/types/groupPolicyAttached",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved"
      },
      "groupCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Record and synchronize details for the AWS IAM group into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/group/cmdb",
          "bundle": "functions/group/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "423f090222"
        }
      },
      "groupConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Maintain AWS > IAM > Group configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "groupDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdbDiscovery",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Discover all AWS IAM group resources and add them to the CMDB.\n\nThe [Discovery](https://turbot.com/v5/docs/concepts/guardrails/discovery) control is responsible for finding resources of a specific type. It periodically searches for new resources and saves them to the CMDB. Once discovered, resources are then responsible for tracking changes to themselves through the [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          },
          {
            "policy": {
              "uri": "#/policy/types/groupCmdb",
              "values": [
                "Enforce: Disabled"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Enforce: Disabled"
          }
        ],
        "function": {
          "src": "functions/group/discovery",
          "bundle": "functions/group/discovery/dist/index.zip",
          "memory": 512,
          "timeout": 300,
          "hash": "af18c9e9b0"
        }
      },
      "groupPolicyAttached": {
        "title": "Policy Attachments",
        "icon": "fal-clipboard-list-check",
        "parent": "#/resource/types/group",
        "targets": [],
        "category": "turbot#/control/categories/other"
      },
      "groupAttachedPoliciesRequired": {
        "title": "Required",
        "icon": "fal-check-double",
        "description": "Determines whether AWS > IAM > Group Required policies are attached to the IAM group, as well as take the subsequent action to\nadd the required policies.\nIf set to \"Enforce: Required > Items\", required policies will be added to IAM Group.\n",
        "parent": "#/control/types/groupPolicyAttached",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceRequired",
        "help": "#/help/groupPolicyRequired"
      },
      "groupUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "The Usage control determines whether the number of AWS IAM group resources exceeds the configured usage limit for this account.\n\nYou can configure the behavior of this control with the  `AWS > IAM > Group > Usage` policy, and set the limit with the `AWS > IAM > Group > Usage > Limit` policy.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupUsage",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Usage set to skip"
          }
        ]
      },
      "groupPolicyAttachmentActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Determines whether the AWS IAM Grouppolicyattachment is current active.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "help": "#/help/groupPolicyAttachmentActive",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupPolicyAttachmentActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/groupPolicyAttachmentCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "groupPolicyAttachmentCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM group policy attachment into the CMDB.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupPolicyAttachmentCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/groupPolicyAttachment/cmdb",
          "bundle": "functions/groupPolicyAttachment/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "bcff266e1b"
        }
      },
      "groupPolicyAttachmentConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/groupPolicyAttachment"
        ],
        "description": "Maintain AWS > IAM > Group Policy Attachments configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "groupPolicyAttachmentDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM group policy attachments for record in the CMDB.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupPolicyAttachmentCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/groupPolicyAttachment/discovery",
          "bundle": "functions/groupPolicyAttachment/discovery/dist/index.zip",
          "memory": 512,
          "hash": "2d7dfbab1b"
        }
      },
      "iamTurbot": {
        "title": "IAM",
        "description": "Maintain configuration of IAM resources.",
        "icon": "fal-universal-access",
        "parent": "aws#/control/types/turbot",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/configured",
        "flags": [
          "transientStorage"
        ],
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "iamStack": {
        "title": "Stack",
        "icon": "fal-layer-group",
        "parent": "#/resource/types/iam",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure a custom stack on AWS, per the custom `Stack > Source`.\n\nA Turbot `Stack` is a set of resources configured by Turbot, as specified\nvia Terraform source.  Stacks are responsible for the creation and deletion\nof multiple resources. Once created, stack resources are responsible for\nconfiguring themselves from the stack source via their `Configured` control.\n",
        "flags": [
          "transientStorage"
        ],
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "iamPolicyActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Configure the behavior of the\n[Active](https://turbot.cloud/docs/concepts/guardrails/active) control for\nthe AWS IAM policy,\nbased on the `AWS > IAM > Policy > Active > *` policies.\n\nThe [Active](https://turbot.cloud/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Policy > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active. Note the contrast with Approved, where if the\nresource appears to be Unapproved for any reason it will be considered\nUnapproved.\n",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceActive",
        "help": "#/help/iamPolicyActive"
      },
      "iamPolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Take an action when an AWS IAM policy is not approved based on AWS > IAM > Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "help": "#/help/iamPolicyApproved"
      },
      "iamPolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM aws iam policy into the CMDB.",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/iamPolicy/cmdb",
          "bundle": "functions/iamPolicy/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "111eb08eb3"
        }
      },
      "iamPolicyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/iamPolicy"
        ],
        "description": "Maintain AWS > IAM > Policy configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "iamPolicyDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM aws iam policys for record in the CMDB.",
        "parent": "#/resource/types/iamPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/iamPolicy/discovery",
          "bundle": "functions/iamPolicy/discovery/dist/index.zip",
          "memory": 512,
          "hash": "578291a8b1"
        }
      },
      "statements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/other"
      },
      "statementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "parent": "#/control/types/statements",
        "category": "turbot#/control/categories/resourceApproved",
        "description": "Configure IAM policy statements checking. This control defines whether IAM policy statements\nare approved, as well as the subsequent action to take on unapproved statements. Rules for all `Approved`\npolicies will be compiled in `Approved > Compiled Rules` and then evaluated.\n",
        "targets": "#/resource/types/iamPolicy"
      },
      "mfaVirtualActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Determines whether the AWS IAM Mfavirtual is current active.",
        "parent": "#/resource/types/mfaVirtual",
        "targets": "#/resource/types/mfaVirtual",
        "category": "turbot#/control/categories/resourceActive",
        "help": "#/help/mfaVirtualActive"
      },
      "mfaVirtualCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM mfa virtual into the CMDB.",
        "parent": "#/resource/types/mfaVirtual",
        "targets": "#/resource/types/mfaVirtual",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/mfaVirtual/cmdb",
          "bundle": "functions/mfaVirtual/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "ee43beeafc"
        }
      },
      "mfaVirtualDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM Multi Factor Authentication(MFA) Virtuals for record in the CMDB.",
        "parent": "#/resource/types/mfaVirtual",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/mfaVirtual/discovery",
          "bundle": "functions/mfaVirtual/discovery/dist/index.zip",
          "memory": 512,
          "hash": "a76312c5c3"
        }
      },
      "roleActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Take an action when an AWS IAM role is not active based on the\n`AWS > IAM > Role > Active > *` policies.\n\nThe Active control determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated compliance\nenvironment, it's common to end up with a wide range of alarms that are difficult\nand time consuming to clear. The Active control brings automated, well-defined\ncontrol to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Role > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n\nNote the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/roleCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "roleApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Take an action when an AWS IAM role is not approved based on `AWS > IAM > Role > Approved > * policies`.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nFor any enforcement actions that specify `if new`, e.g., `Enforce: Delete unapproved if new`, this control will only take the enforcement actions for resources created within the last 60 minutes.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleApproved",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Approved set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/roleCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD state"
          }
        ]
      },
      "rolePolicyAttachmentsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure AWS IAM role policies binding `Approved` checking. This policy\ndefines whether to verify the IAM role attached policies are approved\n(per `Approved > Compiled Rules`), as well as the subsequent action to\ntake on unapproved items.\nIf set to \"Enforce: Delete unapproved\", any unapproved attached policy\nwill be removed.\n",
        "parent": "#/control/types/roleAttachedPolicies",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved"
      },
      "roleBoundary": {
        "title": "Boundary",
        "icon": "fal-shield",
        "parent": "#/resource/types/role",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "description": "Configure which boundary policy to apply to the IAM role.\nThis must be the name of an existing AWS IAM Boundary policy.\n\nAWS Boundary Policies are used to enforce Turbot Guardrails for\nenabling/disabling API Services and Regions.\n\nIf set to `Check or Enforce per AWS > Turbot > Permissions` (the default),\nthe boundary will be enforced if Turbot > Permissions are enforced, checked\nif Turbot > Permissions are  checked, and skippped if Turbot Permissions\nare none or skip\n"
      },
      "roleCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Record and synchronize details for the AWS IAM role into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/role/cmdb",
          "bundle": "functions/role/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "dd842bf9ea"
        }
      },
      "roleConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Maintain AWS > IAM > Role configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "roleDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdbDiscovery",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Discover all AWS IAM role resources and add them to the CMDB.\n\nThe [Discovery](https://turbot.com/v5/docs/concepts/guardrails/discovery) control is responsible for finding resources of a specific type. It periodically searches for new resources and saves them to the CMDB. Once discovered, resources are then responsible for tracking changes to themselves through the [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          },
          {
            "policy": {
              "uri": "#/policy/types/roleCmdb",
              "values": [
                "Enforce: Disabled"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Enforce: Disabled"
          }
        ],
        "function": {
          "src": "functions/role/discovery",
          "bundle": "functions/role/discovery/dist/index.zip",
          "memory": 512,
          "timeout": 300,
          "hash": "214a7d6d3a"
        }
      },
      "roleAttachedPolicies": {
        "title": "Policy Attachments",
        "icon": "fal-clipboard-list-check",
        "parent": "#/resource/types/role",
        "targets": [],
        "category": "turbot#/control/categories/other"
      },
      "roleAttachedPoliciesRequired": {
        "title": "Required",
        "icon": "fal-check-double",
        "description": "Determines whether AWS > IAM > Role Required policies are attached to the IAM role, as well as take the subsequent action to add the required policies. If set to \"Enforce:Required > Items\", required policies will be added to IAM Role.",
        "parent": "#/control/types/roleAttachedPolicies",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceRequired",
        "help": "#/help/rolePolicyRequired"
      },
      "roleTags": {
        "title": "Tags",
        "icon": "fal-tags",
        "category": "turbot#/control/categories/resourceTags",
        "parent": "#/resource/types/role",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Take an action when an AWS IAM role tags is not updated based on the `AWS > IAM > Role > Tags > * policies`.\n\nIf the resource is not updated with the tags defined in `AWS > IAM > Role > Tags > Template`, this control raises an alarm and takes the defined enforcement action.\n\nSee [Tags](https://turbot.com/v5/docs/concepts/guardrails/tagging) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleTags",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Tags set to skip"
          }
        ]
      },
      "rolePolicy": {
        "title": "Policy",
        "icon": "fal-exchange-alt",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/securityTrustedAccess"
      },
      "rolePolicyTrustedAccess": {
        "title": "Trusted Access",
        "icon": "fal-shield-alt",
        "parent": "#/control/types/rolePolicy",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Take an action when AWS IAM role policy is not trusted based on the\n`AWS > IAM > Role > Policy > Trusted Access > *` policies.\n\nThe Trusted Access control evaluates the role policy against the list of allowed\nmembers in each of the Trusted Access sub-policies (Trusted Access > Accounts,\nTrusted Access > Services etc.), this control raises an alarm and takes the\ndefined enforcement action.\n\nThe account that owns the role will always be trusted, even if its account ID is\nnot included in the Trusted Accounts policy.\n\nIf set to `Enforce: Revoke untrusted access`, access to non-trusted\nmembers will be removed.\n"
      },
      "trustRelationshipStatements": {
        "title": "Trust Relationship Statements [Deprecated]",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/other"
      },
      "trustRelationshipStatementsApproved": {
        "title": "Approved [Deprecated]",
        "icon": "fal-shield-alt",
        "description": "Configure Role trust relationship policy statements checking. This control defines whether role trust policy statements\nare approved, as well as the subsequent action to take on unapproved statements. Rules for all `Approved`\npolicies will be compiled in `Approved > Compiled Rules` and then evaluated.\n\nIf set to `Enforce: Delete unapproved`, any unapproved principal will be\nrevoked from the role trust policy.\n\n**Note:** This control has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` control.\n",
        "parent": "#/control/types/trustRelationshipStatements",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved"
      },
      "roleUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "The Usage control determines whether the number of AWS IAM role resources exceeds the configured usage limit for this account.\n\nYou can configure the behavior of this control with the  `AWS > IAM > Role > Usage` policy, and set the limit with the `AWS > IAM > Role > Usage > Limit` policy.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleUsage",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Usage set to skip"
          }
        ]
      },
      "rolePolicyAttachmentActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Determines whether the AWS IAM Rolepolicyattachment is current active.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "help": "#/help/rolePolicyAttachmentActive",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/rolePolicyAttachmentActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/rolePolicyAttachmentCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "rolePolicyAttachmentCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM Role-policy attachment into the CMDB.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/rolePolicyAttachmentCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/rolePolicyAttachment/cmdb",
          "bundle": "functions/rolePolicyAttachment/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "b19f5c6194"
        }
      },
      "rolePolicyAttachmentConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/rolePolicyAttachment"
        ],
        "description": "Maintain AWS > IAM > Role Policy Attachments configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "rolePolicyAttachmentDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM role policy attachments for record in the CMDB.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/rolePolicyAttachmentCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/rolePolicyAttachment/discovery",
          "bundle": "functions/rolePolicyAttachment/discovery/dist/index.zip",
          "memory": 512,
          "hash": "f870c863d8"
        }
      },
      "rootCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM Root User into the CMDB.",
        "parent": "#/resource/types/root",
        "targets": "#/resource/types/root",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb"
      },
      "rootConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/root",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/root"
        ],
        "description": "Maintain AWS > IAM > Root configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "rootDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM root user for record in the CMDB.",
        "parent": "#/resource/types/root",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb"
      },
      "userActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Take an action when an AWS IAM user is not active based on the\n`AWS > IAM > User > Active > *` policies.\n\nThe Active control determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated compliance\nenvironment, it's common to end up with a wide range of alarms that are difficult\nand time consuming to clear. The Active control brings automated, well-defined\ncontrol to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > User > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n\nNote the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/userCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "userApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Take an action when an AWS IAM user is not approved based on `AWS > IAM > User > Approved > * policies`.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nFor any enforcement actions that specify `if new`, e.g., `Enforce: Delete unapproved if new`, this control will only take the enforcement actions for resources created within the last 60 minutes.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userApproved",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Approved set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/userCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD state"
          }
        ]
      },
      "userPolicyAttachmentsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure AWS IAM user policies binding `Approved` checking. This policy\ndefines whether to verify the IAM user attached policies are approved\n(per `Approved > Compiled Rules`), as well as the subsequent action to\ntake on unapproved items.\nIf set to \"Enforce: Delete unapproved\", any unapproved attached policy\nwill be removed.\n",
        "parent": "#/control/types/userAttachedPolicies",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved"
      },
      "userBoundary": {
        "title": "Boundary",
        "icon": "fal-shield",
        "parent": "#/resource/types/user",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "description": "Configure which boundary policy to apply to the IAM user.\nThis must be the name of an existing AWS IAM Boundary policy.\n\nAWS Boundary Policies are used to enforce Turbot Guardrails for\nenabling/disabling API Services and Regions.\n\nIf set to `Check or Enforce per AWS > Turbot > Permissions` (the default),\nthe boundary will be enforced if Turbot > Permissions are enforced, checked\nif Turbot > Permissions are  checked, and skippped if Turbot Permissions\nare none or skip\n"
      },
      "userCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Record and synchronize details for the AWS IAM user into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/user/cmdb",
          "bundle": "functions/user/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "2e8f709822"
        }
      },
      "userConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Maintain AWS > IAM > User configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "userDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdbDiscovery",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Discover all AWS IAM user resources and add them to the CMDB.\n\nThe [Discovery](https://turbot.com/v5/docs/concepts/guardrails/discovery) control is responsible for finding resources of a specific type. It periodically searches for new resources and saves them to the CMDB. Once discovered, resources are then responsible for tracking changes to themselves through the [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          },
          {
            "policy": {
              "uri": "#/policy/types/userCmdb",
              "values": [
                "Enforce: Disabled"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Enforce: Disabled"
          }
        ],
        "function": {
          "src": "functions/user/discovery",
          "bundle": "functions/user/discovery/dist/index.zip",
          "memory": 512,
          "timeout": 300,
          "hash": "ae8f77ecb2"
        }
      },
      "userAttachedPolicies": {
        "title": "Policy Attachments",
        "icon": "fal-clipboard-list-check",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "targets": []
      },
      "userAttachedPoliciesRequired": {
        "title": "Required",
        "icon": "fal-check-double",
        "description": "Determines whether the AWS IAM user can exist based on the settings for the AWS > IAM > Required Policies in Turbot.",
        "parent": "#/control/types/userAttachedPolicies",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceRequired",
        "help": "#/help/userPolicyRequired"
      },
      "userTags": {
        "title": "Tags",
        "icon": "fal-tags",
        "category": "turbot#/control/categories/resourceTags",
        "parent": "#/resource/types/user",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Take an action when an AWS IAM user tags is not updated based on the `AWS > IAM > User > Tags > * policies`.\n\nIf the resource is not updated with the tags defined in `AWS > IAM > User > Tags > Template`, this control raises an alarm and takes the defined enforcement action.\n\nSee [Tags](https://turbot.com/v5/docs/concepts/guardrails/tagging) for more information.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userTags",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Tags set to skip"
          }
        ]
      },
      "userUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "The Usage control determines whether the number of AWS IAM user resources exceeds the configured usage limit for this account.\n\nYou can configure the behavior of this control with the  `AWS > IAM > User > Usage` policy, and set the limit with the `AWS > IAM > User > Usage > Limit` policy.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userUsage",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Usage set to skip"
          }
        ]
      },
      "userGroupMembershipsCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM user group membership into the CMDB.",
        "parent": "#/resource/types/userGroupMemberships",
        "targets": "#/resource/types/userGroupMemberships",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/userGroupMemberships/cmdb",
          "bundle": "functions/userGroupMemberships/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "8c15bba0f0"
        }
      },
      "userGroupMembershipsConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/userGroupMemberships",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userGroupMemberships"
        ],
        "description": "Maintain AWS > IAM > Group Memberships configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "userGroupMembershipsDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM user group memberships for record in the CMDB.",
        "parent": "#/resource/types/userGroupMemberships",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/userGroupMemberships/discovery",
          "bundle": "functions/userGroupMemberships/discovery/dist/index.zip",
          "memory": 512,
          "hash": "1335e73b90"
        }
      },
      "userPolicyAttachmentActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Determines whether the AWS IAM Userpolicyattachment is current active.",
        "parent": "#/resource/types/userPolicyAttachment",
        "targets": "#/resource/types/userPolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "help": "#/help/userPolicyAttachmentActive",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userPolicyAttachmentActive",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "Active set to Skip"
          },
          {
            "control": {
              "uri": "#/control/types/userPolicyAttachmentCmdb",
              "states": [
                "tbd"
              ]
            },
            "state": "tbd",
            "reason": "CMDB control is in TBD"
          }
        ]
      },
      "userPolicyAttachmentCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM user policy attachment into the CMDB.",
        "parent": "#/resource/types/userPolicyAttachment",
        "targets": "#/resource/types/userPolicyAttachment",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userPolicyAttachmentCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/userPolicyAttachment/cmdb",
          "bundle": "functions/userPolicyAttachment/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "2b80bab2f1"
        }
      },
      "userPolicyAttachmentConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/userPolicyAttachment",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userPolicyAttachment"
        ],
        "description": "Maintain AWS > IAM > User Policy Attachments configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "userPolicyAttachmentDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM user policy attachments for record in the CMDB.",
        "parent": "#/resource/types/userPolicyAttachment",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userPolicyAttachmentCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/userPolicyAttachment/discovery",
          "bundle": "functions/userPolicyAttachment/discovery/dist/index.zip",
          "memory": 512,
          "hash": "786f2b897c"
        }
      },
      "userInlinePolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Take an action when an AWS IAM user inline policy is not approved based on AWS > IAM > User Inline Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "help": "#/help/userInlinePolicyApproved"
      },
      "userInlinePolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/userInlinePolicy"
        ],
        "description": "Record and synchronize details for the AWS IAM user inline policy into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userInlinePolicyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/userInlinePolicy/cmdb",
          "bundle": "functions/userInlinePolicy/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "990f534145"
        }
      },
      "userInlinePolicyDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM user inline policies and add them to Turbot.\n\nThe [Discovery](https://turbot.com/docs/concepts/guardrails/discovery)\ncontrol is tasked with identifying instances for a particular resource.\nThe Discovery control will periodically search for new target resources and\nsave them to the Turbot CMDB. Once discovered, resources are then\nresponsible for tracking changes to themselves through the\n[CMDB](https://turbot.com/docs/concepts/guardrails/cmdb) control.\n",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/userInlinePolicyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/userInlinePolicy/discovery",
          "bundle": "functions/userInlinePolicy/discovery/dist/index.zip",
          "memory": 512,
          "hash": "47accf028e"
        }
      },
      "userInlinePolicyStatements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/other"
      },
      "userInlinePolicyStatementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "parent": "#/control/types/userInlinePolicyStatements",
        "category": "turbot#/control/categories/resourceApproved",
        "description": "Configure IAM policy statements checking. This control defines whether IAM policy statements\nare approved, as well as the subsequent action to take on unapproved statements. Rules for all `Approved`\npolicies will be compiled in `Approved > Compiled Rules` and then evaluated.\n",
        "targets": "#/resource/types/userInlinePolicy"
      },
      "groupInlinePolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Take an action when an AWS IAM group policy is not approved based on AWS > IAM > Group Inline Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee Approved for more information.\n",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "help": "#/help/groupInlinePolicyApproved"
      },
      "groupInlinePolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/groupInlinePolicy"
        ],
        "description": "Record and synchronize details for the AWS IAM group inline policy into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupInlinePolicyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/groupInlinePolicy/cmdb",
          "bundle": "functions/groupInlinePolicy/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "7f2c99ff45"
        }
      },
      "groupInlinePolicyDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM group inline policies and add them to Turbot.\n\nThe Discovery control is tasked with identifying instances for a particular resource.\nThe Discovery control will periodically search for new target resources and save them to the Turbot CMDB. Once discovered, resources are then responsible for tracking changes to themselves through the CMDB control.\n",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/groupInlinePolicyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/groupInlinePolicy/discovery",
          "bundle": "functions/groupInlinePolicy/discovery/dist/index.zip",
          "memory": 512,
          "hash": "e1bd796c99"
        }
      },
      "groupInlinePolicyStatements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/other"
      },
      "groupInlinePolicyStatementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "parent": "#/control/types/groupInlinePolicyStatements",
        "category": "turbot#/control/categories/resourceApproved",
        "description": "Configure IAM policy statements checking. This control defines whether IAM group inline policy statements\nare approved, as well as the subsequent action to take on unapproved statements. Rules for all `Approved`\npolicies will be compiled in `Approved > Compiled Rules` and then evaluated.\n",
        "targets": "#/resource/types/groupInlinePolicy"
      },
      "roleInlinePolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Take an action when an AWS IAM inline policy is not approved based on AWS > IAM > Inline Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "help": "#/help/roleInlinePolicyApproved"
      },
      "roleInlinePolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/roleInlinePolicy"
        ],
        "description": "Record and synchronize details for the AWS IAM role inline policy into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleInlinePolicyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/roleInlinePolicy/cmdb",
          "bundle": "functions/roleInlinePolicy/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "3ae9ddcd43"
        }
      },
      "roleInlinePolicyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/roleInlinePolicy"
        ],
        "description": "Maintain AWS > IAM > Inline Policy configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "roleInlinePolicyDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM role inline policies and add them to Turbot.\n\nThe [Discovery](https://turbot.com/docs/concepts/guardrails/discovery)\ncontrol is tasked with identifying instances for a particular resource.\nThe Discovery control will periodically search for new target resources and\nsave them to the Turbot CMDB. Once discovered, resources are then\nresponsible for tracking changes to themselves through the\n[CMDB](https://turbot.com/docs/concepts/guardrails/cmdb) control.\n",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "precheck": [
          {
            "policy": {
              "uri": "#/policy/types/roleInlinePolicyCmdb",
              "values": [
                "Skip"
              ]
            },
            "state": "skipped",
            "reason": "CMDB set to Skip"
          }
        ],
        "function": {
          "src": "functions/roleInlinePolicy/discovery",
          "bundle": "functions/roleInlinePolicy/discovery/dist/index.zip",
          "memory": 512,
          "hash": "d18d4cc3d2"
        }
      },
      "roleInlinePolicyStatements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/other"
      },
      "roleInlinePolicyStatementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "parent": "#/control/types/roleInlinePolicyStatements",
        "category": "turbot#/control/categories/resourceApproved",
        "description": "Configure IAM Role inline policy statements checking. This control defines whether IAM policy statements\nare approved, as well as the subsequent action to take on unapproved statements. Rules for all `Approved`\npolicies will be compiled in `Approved > Compiled Rules` and then evaluated.\n",
        "targets": "#/resource/types/roleInlinePolicy"
      },
      "instanceProfileCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for the AWS IAM instance profile into the CMDB.\n\nThe [CMDB](https://turbot.cloud/docs/concepts/guardrails/cmdb) control is\nresponsible for populating and updating all the attributes for that\nresource type in the Turbot CMDB.\n\nNote that if CMDB is set to Skip for a resource, then it will not be added\nto the CMDB, and no controls that target it will run.\n",
        "parent": "#/resource/types/instanceProfile",
        "targets": "#/resource/types/instanceProfile",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/instanceProfile/cmdb",
          "bundle": "functions/instanceProfile/cmdb/dist/index.zip",
          "memory": 512,
          "hash": "5d48e41336"
        }
      },
      "instanceProfileConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/instanceProfile",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/instanceProfile"
        ],
        "description": "Maintain AWS > IAM > Instance Profile configuration\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "container": {
          "type": "tmod:@turbot/turbot#/container/types/factory"
        }
      },
      "instanceProfileDiscovery": {
        "title": "Discovery",
        "icon": "fab-searchengin",
        "description": "Discover AWS IAM instance profiles and add them to Turbot.\n\nThe [Discovery](https://turbot.com/docs/concepts/guardrails/discovery)\ncontrol is tasked with identifying instances for a particular resource.\nThe Discovery control will periodically search for new target resources and\nsave them to the Turbot CMDB. Once discovered, resources are then\nresponsible for tracking changes to themselves through the\n[CMDB](https://turbot.com/docs/concepts/guardrails/cmdb) control.\n",
        "parent": "#/resource/types/instanceProfile",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "help": "#/help/cmdb",
        "function": {
          "src": "functions/instanceProfile/discovery",
          "bundle": "functions/instanceProfile/discovery/dist/index.zip",
          "memory": 512,
          "hash": "95ae294481"
        }
      }
    }
  },
  "definitions": {
    "accessKey": {
      "type": "object",
      "properties": {
        "AccessKeyId": {
          "$ref": "#/definitions/userId"
        },
        "CreateDate": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "SecretAccessKey": {
          "$ref": "#/definitions/secretAccessKey"
        },
        "Status": {
          "$ref": "#/definitions/status"
        },
        "UserName": {
          "$ref": "#/definitions/userName"
        },
        "AccessKeyLastUsed": {
          "type": "object"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accessKeyAka"
              }
            },
            "title": {
              "$ref": "#/definitions/userName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                },
                "lastUsedTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "AccessKeyId": "AKIA1234567890EXAMPLE",
            "CreateDate": "2018-30-07T18:15:20.000Z",
            "SecretAccessKey": 100,
            "Status": "Active",
            "UserName": "Bob",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user/Bob/accesskey/AKIA1234567890EXAMPLE"
              ],
              "title": "Bob",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        }
      ]
    },
    "secretAccessKey": {
      "type": "string",
      "tests": [
        {
          "input": "Foo,foo+fOO-bar"
        },
        {
          "input": "00123"
        },
        {
          "input": "ab@cde.com"
        },
        {
          "input": "Test.The-Kitchen_Sink"
        },
        {
          "input": "leTjY3SkM7uPgHMj71u6zH2ucGxpd0aV3ToSar8D"
        },
        {
          "input": "gc+gNRHJ0xhA6rx5CEPa7aDPYjMV+xtkue3we0xF"
        },
        {
          "description": "invalid - array type provided",
          "input": [
            "hello"
          ],
          "expected": false
        }
      ]
    },
    "status": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ],
      "tests": [
        {
          "input": "Active"
        },
        {
          "input": "Inactive"
        },
        {
          "description": "invalid - not listed in options",
          "input": "Reactive",
          "expected": false
        },
        {
          "description": "invalid - null value",
          "input": null,
          "expected": false
        }
      ]
    },
    "accessKeyAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:user/[A-Za-z0-9_+=,.@-]{1,64}/accesskey/[A-Za-z0-9]{16,128}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:user/Bob/accesskey/AKIA1234567890EXAMPLE"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::123456789012:user/Bob/accesskeys/AKIA1234567890EXAMPLE",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam::1234567811213:user/Bob/accesskey/AKIA1234567890EXAMPLE",
          "expected": false
        }
      ]
    },
    "accountPasswordPolicy": {
      "type": "object",
      "properties": {
        "MinimumPasswordLength": {
          "type": "integer",
          "minimum": 6,
          "maximum": 128,
          "tests": [
            {
              "input": 5
            },
            {
              "input": 7
            },
            {
              "description": "minimum",
              "input": 6
            },
            {
              "description": "maximum",
              "input": 128
            },
            {
              "description": "invalid - decimal value provided",
              "input": 4.5,
              "expected": false
            },
            {
              "description": "invalid - string type provided",
              "input": "three",
              "expected": false
            },
            {
              "description": "invalid - less than minimum",
              "input": 1,
              "expected": false
            },
            {
              "description": "invalid - greater than maximum",
              "input": 129,
              "expected": false
            }
          ]
        },
        "RequireSymbols": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "RequireNumbers": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "RequireUppercaseCharacters": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "RequireLowercaseCharacters": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "AllowUsersToChangePassword": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "ExpirePasswords": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "HardExpiry": {
          "type": "boolean",
          "tests": [
            {
              "input": false
            },
            {
              "input": true
            },
            {
              "description": "invalid - array",
              "input": [],
              "expected": false
            },
            {
              "description": "invalid - string",
              "input": "",
              "expected": false
            }
          ]
        },
        "PasswordReusePrevention": {
          "type": "integer",
          "minimum": 1,
          "maximum": 24,
          "tests": [
            {
              "input": 5
            },
            {
              "input": 7
            },
            {
              "description": "minimum",
              "input": 1
            },
            {
              "description": "maximum",
              "input": 24
            },
            {
              "description": "invalid - decimal value provided",
              "input": 4.5,
              "expected": false
            },
            {
              "description": "invalid - string type provided",
              "input": "three",
              "expected": false
            },
            {
              "description": "invalid - less than minimum",
              "input": 0,
              "expected": false
            },
            {
              "description": "invalid - greater than maximum",
              "input": 129,
              "expected": false
            }
          ]
        },
        "MaxPasswordAge": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1095,
          "tests": [
            {
              "input": 50
            },
            {
              "input": 70
            },
            {
              "description": "minimum",
              "input": 1
            },
            {
              "description": "maximum",
              "input": 1095
            },
            {
              "description": "invalid - decimal value provided",
              "input": 4.5,
              "expected": false
            },
            {
              "description": "invalid - string type provided",
              "input": "three",
              "expected": false
            },
            {
              "description": "invalid - less than minimum",
              "input": 0,
              "expected": false
            },
            {
              "description": "invalid - greater than maximum",
              "input": 1290,
              "expected": false
            }
          ]
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountPasswordPolicyAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "type": "string"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "required": [
        "turbot",
        "MinimumPasswordLength",
        "RequireSymbols",
        "RequireNumbers",
        "RequireUppercaseCharacters",
        "RequireLowercaseCharacters",
        "AllowUsersToChangePassword",
        "ExpirePasswords"
      ],
      "tests": [
        {
          "description": "Valid - Base case",
          "input": {
            "MinimumPasswordLength": 14,
            "RequireSymbols": true,
            "RequireNumbers": true,
            "RequireUppercaseCharacters": true,
            "RequireLowercaseCharacters": true,
            "AllowUsersToChangePassword": false,
            "ExpirePasswords": true,
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:accountPasswordPolicy"
              ],
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "MinimumPasswordLength": 14,
            "RequireSymbols": true,
            "RequireNumbers": true,
            "RequireUppercaseCharacters": true,
            "RequireLowercaseCharacters": true,
            "AllowUsersToChangePassword": false,
            "ExpirePasswords": true
          },
          "expected": false
        }
      ]
    },
    "accountPasswordPolicyAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:accountPasswordPolicy$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:accountPasswordPolicy"
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam:123456764765789012:accountPasswordPolicy",
          "expected": false
        }
      ]
    },
    "accountSummary": {
      "type": "object",
      "properties": {
        "GroupPolicySizeQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "InstanceProfilesQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "Policies": {
          "$ref": "#/definitions/genericNumber"
        },
        "GroupsPerUserQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "InstanceProfiles": {
          "$ref": "#/definitions/genericNumber"
        },
        "AttachedPoliciesPerUserQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "Users": {
          "$ref": "#/definitions/genericNumber"
        },
        "PoliciesQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "Providers": {
          "$ref": "#/definitions/genericNumber"
        },
        "AccountMFAEnabled": {
          "$ref": "#/definitions/genericNumber"
        },
        "AccessKeysPerUserQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "AssumeRolePolicySizeQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "PolicyVersionsInUseQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "VersionsPerPolicyQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "AttachedPoliciesPerGroupQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "PolicySizeQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "Groups": {
          "$ref": "#/definitions/genericNumber"
        },
        "AccountSigningCertificatesPresent": {
          "$ref": "#/definitions/genericNumber"
        },
        "UsersQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "ServerCertificatesQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "MFADevices": {
          "$ref": "#/definitions/genericNumber"
        },
        "UserPolicySizeQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "PolicyVersionsInUse": {
          "$ref": "#/definitions/genericNumber"
        },
        "ServerCertificates": {
          "$ref": "#/definitions/genericNumber"
        },
        "Roles": {
          "$ref": "#/definitions/genericNumber"
        },
        "RolesQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "SigningCertificatesPerUserQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "MFADevicesInUse": {
          "$ref": "#/definitions/genericNumber"
        },
        "RolePolicySizeQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "AttachedPoliciesPerRoleQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "AccountAccessKeysPresent": {
          "$ref": "#/definitions/genericNumber"
        },
        "GroupsQuota": {
          "$ref": "#/definitions/genericNumber"
        },
        "GlobalEndpointTokenVersion": {
          "$ref": "#/definitions/genericNumber"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/accountSummaryAka"
              }
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "AccessKeysPerUserQuota": 2,
            "AccountAccessKeysPresent": 1,
            "AccountMFAEnabled": 0,
            "AccountSigningCertificatesPresent": 0,
            "AttachedPoliciesPerGroupQuota": 10,
            "AttachedPoliciesPerRoleQuota": 10,
            "AttachedPoliciesPerUserQuota": 10,
            "GroupPolicySizeQuota": 5120,
            "Groups": 15,
            "GroupsPerUserQuota": 10,
            "GroupsQuota": 100,
            "MFADevices": 6,
            "MFADevicesInUse": 3,
            "Policies": 8,
            "PoliciesQuota": 1000,
            "PolicySizeQuota": 5120,
            "PolicyVersionsInUse": 22,
            "PolicyVersionsInUseQuota": 10000,
            "ServerCertificates": 1,
            "ServerCertificatesQuota": 20,
            "SigningCertificatesPerUserQuota": 2,
            "UserPolicySizeQuota": 2048,
            "Users": 27,
            "UsersQuota": 5000,
            "VersionsPerPolicyQuota": 5,
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:accountSummary"
              ],
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        }
      ]
    },
    "genericNumber": {
      "type": "integer",
      "tests": [
        {
          "input": 1234
        }
      ]
    },
    "accountSummaryAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:accountSummary$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:accountSummary"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:ec2:us-east-1:123456789012:instances/i-a2345678",
          "expected": false
        },
        {
          "description": "Invalid - Malformed region name",
          "input": "arn:aws:ec2:use-east-1:123456789012:instances/i-a2345678",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:ec2:us-east-1:1234567890123:instances/i-a2345678",
          "expected": false
        }
      ]
    },
    "credentialReport": {
      "type": "object",
      "properties": {
        "credentialInfo": {
          "$ref": "#/definitions/credentialInfo"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/credentialReportAka"
              }
            },
            "title": {
              "$ref": "#/definitions/reportItemsElements"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "credentialInfo": {
              "<root_account>": {
                "user": "<root_account>",
                "arn": "arn:aws:iam::541046466378:root",
                "user_creation_time": "2018-03-15T09:57:32+00:00",
                "password_enabled": "not_supported",
                "password_last_used": "2018-03-15T10:04:09+00:00",
                "password_last_changed": "not_supported",
                "password_next_rotation": "not_supported",
                "mfa_active": "false",
                "access_key_1_active": "false",
                "access_key_1_last_rotated": "N/A",
                "access_key_1_last_used_date": "N/A",
                "access_key_1_last_used_region": "N/A",
                "access_key_1_last_used_service": "N/A",
                "access_key_2_active": "false",
                "access_key_2_last_rotated": "N/A",
                "access_key_2_last_used_date": "N/A",
                "access_key_2_last_used_region": "N/A",
                "access_key_2_last_used_service": "N/A",
                "cert_1_active": "false",
                "cert_1_last_rotated": "N/A",
                "cert_2_active": "false",
                "cert_2_last_rotated": "N/A"
              },
              "abhinash": {
                "user": "abhinash",
                "arn": "arn:aws:iam::541046466378:user/turbot/account/federated/abhinash",
                "user_creation_time": "2019-03-27T15:37:23+00:00",
                "password_enabled": "false",
                "password_last_used": "N/A",
                "password_last_changed": "N/A",
                "password_next_rotation": "N/A",
                "mfa_active": "false",
                "access_key_1_active": "false",
                "access_key_1_last_rotated": "N/A",
                "access_key_1_last_used_date": "N/A",
                "access_key_1_last_used_region": "N/A",
                "access_key_1_last_used_service": "N/A",
                "access_key_2_active": "false",
                "access_key_2_last_rotated": "N/A",
                "access_key_2_last_used_date": "N/A",
                "access_key_2_last_used_region": "N/A",
                "access_key_2_last_used_service": "N/A",
                "cert_1_active": "false",
                "cert_1_last_rotated": "N/A",
                "cert_2_active": "false",
                "cert_2_last_rotated": "N/A"
              }
            },
            "turbot": {
              "akas": [
                "arn:aws:iam::aws:123456789012:credentialReport"
              ],
              "title": "credentialReport",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        }
      ]
    },
    "credentialInfo": {
      "type": "object"
    },
    "reportItemsElements": {
      "type": "string"
    },
    "credentialReportAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::aws:[0-9]{12}:credentialReport$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::aws:492552618977:credentialReport"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::aws:00011101982:group/aa",
          "expected": false
        },
        {
          "description": "Invalid - Missing ID",
          "input": "arn:aws:iam::aws:group/test01",
          "expected": false
        }
      ]
    },
    "group": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/userArn"
        },
        "CreateDate": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "GroupId": {
          "$ref": "#/definitions/userId"
        },
        "GroupName": {
          "$ref": "#/definitions/policyName"
        },
        "Path": {
          "$ref": "#/definitions/userPath"
        },
        "Users": {
          "type": "array"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groupAka"
              }
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "Arn": "arn:aws:iam::123456789012:group/Admins",
            "title": "Admins",
            "CreateDate": "2018-30-07T18:15:20.000Z",
            "GroupName": "Admins",
            "GroupId": "AGPACKCEVSQ6C2EXAMPLE",
            "Path": "/division_abc/subdivision_xyz/",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:group/Admins"
              ],
              "title": "Admins",
              "custom": {
                "aws": {
                  "accountId": 123456789012,
                  "regionName": "us-east-1"
                }
              }
            }
          }
        }
      ]
    },
    "groupAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:group/[A-Za-z0-9_+=,.@-]+$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:group/Admins"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::123456789012:groups/Admins",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam::123456789012234:group/Admins",
          "expected": false
        }
      ]
    },
    "groupPolicyAttachment": {
      "type": "object",
      "properties": {
        "GroupName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyArn": {
          "$ref": "#/definitions/userArn"
        },
        "Id": {
          "$ref": "#/definitions/policyAttachmentId"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groupPolicyAttachmentAka"
              }
            },
            "title": {
              "$ref": "#/definitions/policyAttachmentId"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "GroupName": "test01",
            "PolicyName": "admin_1",
            "Id": "test01-admin_1",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "turbot": {
              "akas": [
                "arn:aws:iam::492552618977:group/test01/policy-attachment/AmazonEKSClusterPolicy"
              ],
              "title": "test01-admin_1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing PolicyName",
          "input": {
            "GroupName": "test01",
            "Id": "test01-admin_1",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "turbot": {
              "akas": [
                "arn:aws:iam::aws:492552618977:group/test01/policy-attachment/AmazonEKSClusterPolicy"
              ],
              "title": "Admin",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "GroupId": "AGPAJT5UGJLFBILHJUOXC",
            "Id": "test01-AmazonEKSClusterPolicy",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "UserName": "Bob"
          }
        },
        {
          "description": "Inalid - Missing Id",
          "input": {
            "GroupName": "test01",
            "PolicyName": "admin_1",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "turbot": {
              "akas": [
                "arn:aws:iam::492552618977:group/test01/policy-attachment/AmazonEKSClusterPolicy"
              ],
              "title": "Admin",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        }
      ]
    },
    "groupPolicyAttachmentAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:group/[A-Za-z0-9_+=,.@-]{1,64}/policy-attachment/[A-Za-z0-9_.-]{1,128}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::492552618977:group/test01/policy-attachment/policyname0123"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::aws:00011101982:groups/aa/policy-attachment/policyname123",
          "expected": false
        },
        {
          "description": "Invalid - Missing ID",
          "input": "arn:aws:iam::aws:group/test01/policy-attachment/policyname123",
          "expected": false
        }
      ]
    },
    "iam": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/service"
        },
        {
          "type": "object",
          "properties": {
            "name": {
              "const": "IAM"
            },
            "turbot": {
              "type": "object",
              "properties": {
                "akas": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/iamAka"
                  }
                },
                "title": {
                  "const": "IAM"
                },
                "custom": {
                  "type": "object",
                  "properties": {
                    "aws": {
                      "$ref": "aws#/definitions/awsMetadata"
                    }
                  }
                }
              }
            }
          },
          "required": [
            "name",
            "turbot"
          ],
          "additionalProperties": true,
          "tests": [
            {
              "description": "iam",
              "input": {
                "name": "IAM",
                "turbot": {
                  "akas": [
                    "arn:aws:iam::123456789012"
                  ],
                  "title": "IAM",
                  "custom": {
                    "aws": {
                      "accountId": 123456789012
                    }
                  }
                }
              }
            },
            {
              "description": "Invalid - Name does not match",
              "input": {
                "name": "IAM",
                "turbot": {
                  "akas": [
                    "arn:aws:iam::123456789012"
                  ],
                  "title": "IAM",
                  "custom": {
                    "aws": {
                      "accountId": 123456789012
                    }
                  }
                }
              },
              "expected": false
            },
            {
              "description": "Invalid - Service Name missing",
              "input": {
                "turbot": {
                  "akas": [
                    "arn:aws:iam::123456789012"
                  ],
                  "title": "IAM",
                  "custom": {
                    "aws": {
                      "accountId": 123456789012
                    }
                  }
                }
              },
              "expected": false
            }
          ]
        }
      ]
    },
    "iamAka": {
      "type": "string",
      "pattern": "arn:aws(-us-gov|-cn)?:iam::[0-9]{12}$",
      "tests": [
        {
          "description": "base",
          "input": "arn:aws:iam::123456789012"
        },
        {
          "description": "invalid service name",
          "input": "arn:aws:iamjhkjfh::123456789012",
          "expected": false
        },
        {
          "description": "invalid account id",
          "input": "arn:aws:iam::1234567890128364859934",
          "expected": false
        },
        {
          "description": "invalid provider name",
          "input": "arn:gcp:iam::1234567890128364859934",
          "expected": false
        }
      ]
    },
    "policyAttachmentId": {
      "type": "string",
      "pattern": "^[A-Za-z0-9_+=,.@-]{1,64}-[A-Za-z0-9_+=,.@-]{1,128}$",
      "tests": [
        {
          "input": "test01-admin_1"
        }
      ]
    },
    "policyName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "pattern": "^[A-Za-z0-9_+=,.@-]+$",
      "tests": [
        {
          "input": "Foo,foo+fOO-bar"
        },
        {
          "input": "00123"
        },
        {
          "input": "ab@cde.com"
        },
        {
          "input": "Test.The-Kitchen_Sink"
        },
        {
          "description": "max length",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_1234a23456789_123456789_123456789_123456789_123456789_123456789_1234"
        },
        {
          "description": "invalid - too long",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456",
          "expected": false
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        }
      ]
    },
    "userArn": {
      "type": "string",
      "minLength": 20,
      "maxLength": 2048,
      "tests": [
        {
          "description": "user arn",
          "input": "arn:aws:iam::123456789012:user/Bob"
        },
        {
          "description": "federated user",
          "input": "arn:aws:sts::123456789012:federated-user/Bob"
        },
        {
          "description": "nested path",
          "input": "arn:aws:iam::123456789012:user/division_abc/subdivision_xyz/Bob"
        },
        {
          "description": "policy arn",
          "input": "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket"
        },
        {
          "description": "role arn",
          "input": "arn:aws:iam::123456789012:role/S3Access"
        },
        {
          "description": "group arn",
          "input": "arn:aws:iam::123456789012:group/Developers"
        },
        {
          "description": "group arn with path",
          "input": "arn:aws:iam::123456789012:group/division_abc/subdivision_xyz/product_A/Developers"
        },
        {
          "description": "min length",
          "input": 12345678901234567000
        },
        {
          "description": "invalid - less than min length",
          "input": "Hello User!",
          "expected": false
        },
        {
          "description": "invalid - null value",
          "input": null,
          "expected": false
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        }
      ]
    },
    "userId": {
      "type": "string",
      "minLength": 16,
      "maxLength": 128,
      "pattern": "^[A-Za-z0-9_]+$",
      "tests": [
        {
          "input": "AIDACKCEVSQ6C2EXAMPLE"
        },
        {
          "description": "min length",
          "input": "AIDACKCEVSQ6C2EX"
        },
        {
          "description": "group id",
          "input": "AGPACKCEVSQ6C2EXAMPLE"
        },
        {
          "description": "role id",
          "input": "AROADBQP57FF2AEXAMPLE"
        },
        {
          "description": "max length",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678"
        },
        {
          "description": "invalid - too long",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456",
          "expected": false
        },
        {
          "description": "invalid - at symbol not allowed in pattern",
          "input": "user@bob",
          "expected": false
        }
      ]
    },
    "userPath": {
      "type": "string",
      "minLength": 1,
      "maxLength": 512,
      "pattern": "^(/)|(/[!-]+/)$",
      "tests": [
        {
          "input": "/division_abc/subdivision_xyz/*"
        },
        {
          "input": "//"
        },
        {
          "description": "min length",
          "input": "/"
        },
        {
          "description": "invalid - null value",
          "input": null,
          "expected": false
        }
      ]
    },
    "marker": {
      "type": "string",
      "minLength": 1,
      "maxLength": 320,
      "pattern": "^[ -ÿ]+$",
      "tests": [
        {
          "input": "Foo,foo+fOO-bar"
        },
        {
          "input": "00123"
        },
        {
          "input": "ab@cde.com"
        },
        {
          "input": "Test.The-Kitchen_Sink"
        },
        {
          "description": "min length",
          "input": "/"
        },
        {
          "description": "max length",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678_123456789_123456789_123456789_123456789_123456789_123456789_123"
        },
        {
          "description": "invalid - too long",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678_123456789_123456789_123456789_123456789_123456789_123456789_12345",
          "expected": false
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        }
      ]
    },
    "virtualMfaMaxItems": {
      "type": "integer",
      "default": 100,
      "minimum": 1,
      "maximum": 1000,
      "tests": [
        {
          "input": 123
        },
        {
          "description": "min value",
          "input": 1
        },
        {
          "description": "max value",
          "input": 1000
        },
        {
          "description": "invalid - greater than max value",
          "input": 11111111,
          "expected": false
        },
        {
          "description": "invalid - string type provided",
          "input": "three",
          "expected": false
        },
        {
          "description": "invalid - decimal value provided",
          "input": 4.5,
          "expected": false
        }
      ]
    },
    "userName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "pattern": "^[A-Za-z0-9_+=,.@-]+$",
      "tests": [
        {
          "input": "Foo,foo+fOO-bar"
        },
        {
          "input": "00123"
        },
        {
          "input": "ab@cde.com"
        },
        {
          "input": "Test.The-Kitchen_Sink"
        },
        {
          "description": "max length",
          "input": "a23456789_123456789_123456789_123456789_16789_123456789_12345678"
        },
        {
          "description": "invalid - too long",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456",
          "expected": false
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        }
      ]
    },
    "assignmentStatus": {
      "type": "string",
      "default": "Any",
      "enum": [
        "Assigned",
        "Unassigned",
        "Any"
      ],
      "tests": [
        {
          "input": "Assigned"
        },
        {
          "input": "Any"
        },
        {
          "description": "invalid - not listed in options",
          "input": "Reassigned",
          "expected": false
        },
        {
          "description": "invalid - null value",
          "input": null,
          "expected": false
        }
      ]
    },
    "serialNumber": {
      "type": "string",
      "minLength": 9,
      "maxLength": 256,
      "pattern": "^[A-Za-z0-9_+=/:,.@-]+$",
      "tests": [
        {
          "input": "Foo,foo+fOO-bar"
        },
        {
          "input": "001234567890"
        },
        {
          "input": "ab@cde.com"
        },
        {
          "input": "arn:aws:iam::123456789012:mfa/MFAdeviceName"
        },
        {
          "description": "min length",
          "input": 123456789
        },
        {
          "description": "max length",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678"
        },
        {
          "description": "invalid - too long",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789",
          "expected": false
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        }
      ]
    },
    "boundaryPermissionPolicy": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "pattern": "^[A-Za-z0-9_+=,.@-]+$",
      "tests": [
        {
          "input": "Foo,barbar"
        },
        {
          "description": "max length",
          "input": "a23456789_123456789_123456789_123456789_123456789_123456789_1234a23456789_123456789_123456789_123456789_123456789_123456789_1234"
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        }
      ]
    },
    "awsPermissionTypeReference": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/permissionTypeReference"
        },
        {
          "pattern": "^tmod:@turbot/aws"
        }
      ],
      "tests": [
        {
          "description": "valid permission type",
          "input": "tmod:@turbot/aws-s3#/permission/types/s3"
        },
        {
          "description": "invalid - aws permission type",
          "input": "tmod:@turbot/azure-storage#/permission/types/storage",
          "expected": false
        },
        {
          "description": "invalid - category",
          "input": "tmod:@turbot/aws-s3#/control/types/bucketApproved",
          "expected": false
        }
      ]
    },
    "awsPermissionLevelReference": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/permissionLevelReference"
        },
        {
          "pattern": "user|metadata|readonly|admin|owner|operator|none|whitelist"
        }
      ],
      "tests": [
        {
          "description": "valid permission type",
          "input": "tmod:@turbot/aws-s3#/permission/levels/admin"
        },
        {
          "description": "invalid - aws permission type",
          "input": "tmod:@turbot/azure-storage#/permission/types/storage",
          "expected": false
        },
        {
          "description": "invalid - category",
          "input": "tmod:@turbot/aws-s3#/control/types/bucketApproved",
          "expected": false
        }
      ]
    },
    "awsPermissionReference": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/permissionReference"
        },
        {
          "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?:(?:\\*|[A-Za-z0-9]+)$"
        }
      ],
      "tests": [
        {
          "description": "valid",
          "input": "test:me"
        },
        {
          "description": "valid",
          "input": "test:you"
        },
        {
          "description": "valid",
          "input": "test:*"
        },
        {
          "description": "valid",
          "input": "S3:Test"
        },
        {
          "description": "valid",
          "input": "cognito-sync:test"
        },
        {
          "description": "valid",
          "input": "a:test"
        },
        {
          "description": "invalid - aws permission",
          "input": "some-:t",
          "expected": false
        },
        {
          "description": "invalid - no space",
          "input": "some- :t",
          "expected": false
        },
        {
          "description": "invalid - should not start with -",
          "input": "-as:t",
          "expected": false
        },
        {
          "description": "invalid - should not end with multiple **",
          "input": "-as:t**",
          "expected": false
        }
      ]
    },
    "awsRightDefinition": {
      "description": "Internal format for Turbot Rights registrations.",
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/awsPermissionLevelReference"
        },
        "type": {
          "$ref": "#/definitions/awsPermissionTypeReference"
        },
        "permission": {
          "$ref": "#/definitions/awsPermissionReference"
        }
      },
      "required": [
        "level",
        "type",
        "permission"
      ],
      "additionalProperties": false,
      "tests": [
        {
          "description": "Valid right definition",
          "input": {
            "level": "tmod:@turbot/aws-s3#/permission/levels/admin",
            "type": "tmod:@turbot/aws-s3#/permission/types/s3",
            "permission": "s3:createBucket"
          }
        },
        {
          "description": "invalid type definition",
          "input": {
            "level": "tmod:@turbot/aws-s3#/permission/levels/admin",
            "type": "tmod:@turbot/azure-s3#/permission/types/s3",
            "permission": "s3:createBucket"
          },
          "expected": false
        },
        {
          "description": "Invalid - Levels includes a non #/permission/levels/* path",
          "expected": false,
          "input": {
            "level": "#/definitions/foo",
            "type": "#/permission/types/foo",
            "permission": "s3:createBucket"
          }
        },
        {
          "description": "Invalid - Types includes a non #/permission/types/* path",
          "expected": false,
          "input": {
            "level": "#/permission/levels/user",
            "type": "#/definitions/bar",
            "permission": "s3:createBucket"
          }
        }
      ]
    },
    "awsRightDefinitionList": {
      "description": "Internal format for Turbot Rights registrations.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/awsRightDefinition"
      }
    },
    "awsModifierLevelReference": {
      "type": "string",
      "pattern": "^user|metadata|readonly|admin|owner|operator|none|whitelist|superuser",
      "tests": [
        {
          "input": "metadata"
        },
        {
          "input": "operator"
        },
        {
          "description": "invalid - includes $",
          "input": "something",
          "expected": false
        }
      ]
    },
    "awsModifier": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?:(?:[A-Za-z0-9]+)$": {
          "$ref": "#/definitions/awsModifierLevelReference"
        }
      },
      "additionalProperties": false,
      "tests": [
        {
          "description": "valid - base case",
          "input": {
            "s3:create": "metadata"
          }
        },
        {
          "description": "invalid - level",
          "input": {
            "s3:create": "some"
          },
          "expected": false
        },
        {
          "description": "invalid - perms",
          "input": {
            "s3:": "some"
          },
          "expected": false
        }
      ]
    },
    "awsModifierList": {
      "default": [],
      "type": "array",
      "items": {
        "$ref": "#/definitions/awsModifier"
      }
    },
    "awsLevelDefinition": {
      "description": "Internal format for Turbot Levels.",
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/awsPermissionLevelReference"
        },
        "type": {
          "$ref": "#/definitions/awsPermissionTypeReference"
        }
      },
      "required": [
        "level",
        "type"
      ],
      "additionalProperties": false,
      "tests": [
        {
          "description": "Valid level definition",
          "input": {
            "level": "tmod:@turbot/aws-s3#/permission/levels/admin",
            "type": "tmod:@turbot/aws-s3#/permission/types/s3"
          }
        },
        {
          "description": "invalid type definition",
          "input": {
            "level": "tmod:@turbot/aws-s3#/permission/levels/admin",
            "type": "tmod:@turbot/azure-s3#/permission/types/s3"
          },
          "expected": false
        },
        {
          "description": "Invalid - Levels includes a non #/permission/levels/* path",
          "expected": false,
          "input": {
            "level": "#/definitions/foo",
            "type": "#/permission/types/foo"
          }
        },
        {
          "description": "Invalid - Types includes a non #/permission/types/* path",
          "expected": false,
          "input": {
            "level": "#/permission/levels/user",
            "type": "#/definitions/bar"
          }
        }
      ]
    },
    "awsLevelDefinitionList": {
      "description": "Internal format for Turbot Levels registrations.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/awsLevelDefinition"
      }
    },
    "turbotAwsLevelDefinitionList": {
      "description": "Internal format for Turbot AWS Levels registrations.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/awsLevelDefinition"
      }
    },
    "restrictedApisPermissions": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "restrictedApisBudgetState": {
      "type": "string",
      "pattern": "Unknown|Unused|Under|On target|Over|Critical|Shutdown",
      "tests": [
        {
          "description": "Valid test",
          "input": "Unknown"
        },
        {
          "description": "invalid type definition",
          "input": "unu",
          "expected": false
        }
      ]
    },
    "restrictedApisBudgetStateApis": {
      "type": "object",
      "default": {},
      "patternProperties": {
        "Unknown|Unused|Under|On target|Over|Critical|Shutdown|unknown|unused|under|on target|over|critical|shutdown|ontarget": {
          "$ref": "#/definitions/restrictedApisPermissions"
        }
      },
      "additionalProperties": false,
      "tests": [
        {
          "description": "Valid test",
          "input": {
            "Unknown": [
              "ec2:*",
              "s3:*"
            ]
          }
        },
        {
          "description": "Valid test 2",
          "input": {
            "Critical": [
              "ec2:*",
              "s3:*"
            ]
          }
        },
        {
          "description": "Valid test 2",
          "input": {
            "ontarget": [
              "ec2:*",
              "s3:*"
            ]
          }
        },
        {
          "description": "invalid type definition",
          "input": {
            "unu": "ec2*"
          },
          "expected": false
        }
      ]
    },
    "api": {
      "type": "string",
      "pattern": "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?:(?:[*])$"
    },
    "regionScope": {
      "type": "string",
      "enum": [
        "regional",
        "global"
      ]
    },
    "apiBoundary": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "regionScope": {
          "$ref": "#/definitions/regionScope"
        },
        "api": {
          "$ref": "#/definitions/api"
        }
      },
      "required": [
        "api",
        "regionScope"
      ]
    },
    "apiBoundaries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/apiBoundary"
      },
      "tests": [
        {
          "description": "Valid test",
          "input": [
            {
              "api": "ec2:*",
              "regionScope": "regional"
            }
          ]
        }
      ]
    },
    "iamPolicy": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/userArn"
        },
        "AttachmentCount": {
          "$ref": "#/definitions/attachmentCount"
        },
        "DefaultVersionId": {
          "$ref": "#/definitions/defaultVersionId"
        },
        "Description": {
          "$ref": "#/definitions/description"
        },
        "IsAttachable": {
          "type": "boolean"
        },
        "Path": {
          "$ref": "#/definitions/policyPath"
        },
        "PermissionsBoundaryUsageCount": {
          "$ref": "#/definitions/attachmentCount"
        },
        "PolicyId": {
          "$ref": "#/definitions/userId"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "UpdateDate": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "PolicyArn": {
          "$ref": "#/definitions/userArn"
        },
        "PolicyVersion": {
          "$ref": "#/definitions/policyVersion"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userArn"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/policyName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                },
                "lastUsedTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Base case",
          "input": {
            "Arn": "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket",
            "AttachmentCount": 9,
            "DefaultVersionId": "v1",
            "Path": "/",
            "PolicyId": "AGPACKCEVSQ6C2EXAMPLE",
            "PolicyName": "S3-read-only-example-bucket",
            "Description": "Allows read-only access to the example bucket",
            "UpdateDate": "2018-12-21T18:15:20.000Z",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "S3-read-only-example-bucket",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing PolicyName",
          "input": {
            "Arn": "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket",
            "AttachmentCount": 9,
            "DefaultVersionId": "v1",
            "Path": "/",
            "PolicyId": "AGPACKCEVSQ6C2EXAMPLE",
            "Description": "Allows read-only access to the example bucket",
            "UpdateDate": "2018-12-21T18:15:20.000Z",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "S3-read-only-example-bucket",
              "custom": {
                "aws": {
                  "accountId": 123456789012,
                  "createTimestamp": "2018-10-08T09:22:07.000Z"
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing Arn",
          "input": {
            "AttachmentCount": 9,
            "DefaultVersionId": "v1",
            "Path": "/",
            "PolicyName": "S3-read-only-example-bucket",
            "PolicyId": "AGPACKCEVSQ6C2EXAMPLE",
            "Description": "Allows read-only access to the example bucket",
            "UpdateDate": "2018-12-21T18:15:20.000Z",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "S3-read-only-example-bucket",
              "custom": {
                "aws": {
                  "accountId": 123456789012,
                  "createTimestamp": "2018-10-08T09:22:07.000Z"
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "Arn": "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket",
            "AttachmentCount": 9,
            "DefaultVersionId": "v1",
            "Path": "/",
            "PolicyId": "AGPACKCEVSQ6C2EXAMPLE",
            "PolicyName": "S3-read-only-example-bucket",
            "Description": "Allows read-only access to the example bucket",
            "UpdateDate": "2018-12-21T18:15:20.000Z"
          }
        }
      ]
    },
    "attachmentCount": {
      "type": "integer",
      "tests": [
        {
          "input": 123456789
        },
        {
          "input": 4
        },
        {
          "description": "invalid - string type provided",
          "input": "three",
          "expected": false
        },
        {
          "description": "invalid - decimal value provided",
          "input": 4.5,
          "expected": false
        }
      ]
    },
    "defaultVersionId": {
      "type": "string",
      "pattern": "^v[1-9][0-9]*(.[A-Za-z0-9-]*)?$",
      "tests": [
        {
          "input": "v1.5"
        },
        {
          "input": "v11.6"
        },
        {
          "input": "v99.bA"
        },
        {
          "description": "invalid - should start with letter v",
          "input": 1,
          "expected": false
        },
        {
          "descrption": "invalid - version should start with 1",
          "input": "v0.1",
          "expected": false
        }
      ]
    },
    "description": {
      "type": "string",
      "maxLength": 1000,
      "tests": [
        {
          "input": "Foo,foo+fOO"
        },
        {
          "input": "00123"
        },
        {
          "input": "ab@cde"
        },
        {
          "input": "Test.The-KitchenSink"
        },
        {
          "description": "empty string",
          "input": ""
        }
      ]
    },
    "policyPath": {
      "type": "string",
      "pattern": "^((/[A-Za-z0-9.,+@=_-]+)*)/$",
      "tests": [
        {
          "input": "/"
        },
        {
          "input": "/home/.ssh/+/"
        },
        {
          "input": "/path/to/the/desti-nati0n/"
        },
        {
          "description": "invaid - should end with /",
          "input": "/hello",
          "expected": false
        }
      ]
    },
    "policyVersion": {
      "type": "object"
    },
    "mfaVirtual": {
      "type": "object",
      "properties": {
        "AssignmentStatus": {
          "$ref": "#/definitions/assignmentStatus"
        },
        "VirtualMFADevices": {
          "$ref": "#/definitions/virtualMFADevices"
        },
        "IsTruncated": {
          "type": "boolean"
        },
        "Marker": {
          "$ref": "#/definitions/marker"
        },
        "MaxItems": {
          "$ref": "#/definitions/virtualMfaMaxItems"
        },
        "Tags": {
          "$ref": "aws#/definitions/tagList"
        },
        "EnableDate": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "SerialNumber": {
          "$ref": "#/definitions/serialNumber"
        },
        "User": {
          "$ref": "#/definitions/userName"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/mfaVirtualAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/userName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "required": [
        "SerialNumber",
        "turbot"
      ],
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "AssignmentStatus": "Any",
            "Marker": "a123",
            "MaxItems": 100,
            "SerialNumber": "arn:aws:iam::492552618977:mfa/test_user",
            "Tags": [
              {
                "Key": "Env",
                "Value": "Test"
              },
              {
                "Key": "App",
                "Value": "Facebook"
              }
            ],
            "turbot": {
              "akas": [
                "arn:aws:iam::492552618977:mfa/test_user"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "Susan",
              "custom": {
                "aws": {
                  "accountId": 492552618977
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing SerialNumber",
          "input": {
            "AssignmentStatus": "Assigned",
            "UserName": "Susan",
            "Marker": "/",
            "MaxItems": 1,
            "Tags": [
              {
                "Key": "Env",
                "Value": "Test"
              },
              {
                "Key": "App",
                "Value": "Facebook"
              }
            ],
            "turbot": {
              "akas": [
                "arn:aws:iam::492552618977:mfa/test_user"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "Susan",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "SerialNumber": "arn:aws:iam::492552618977:mfa/test_user",
            "Tags": [
              {
                "Key": "Env",
                "Value": "Test"
              },
              {
                "Key": "App",
                "Value": "Facebook"
              }
            ],
            "UserName": "Susan"
          },
          "expected": false
        }
      ]
    },
    "mfaVirtualAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:mfa/[A-Za-z0-9_-]{1,64}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::492552618977:mfa/test_user"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::492552618977:mfaa/test_user",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam::389739167:mfa/test_user",
          "expected": false
        }
      ]
    },
    "virtualMFADevices": {
      "type": "object",
      "properties": {
        "SerialNumber": {
          "$ref": "#/definitions/serialNumber"
        }
      }
    },
    "role": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/userArn"
        },
        "AssumeRolePolicyDocument": {
          "$ref": "#/definitions/assumeRolePolicyDocument"
        },
        "CreateDate": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "MaxSessionDuration": {
          "$ref": "#/definitions/maxSessionDuration"
        },
        "Path": {
          "$ref": "#/definitions/userPath"
        },
        "RoleId": {
          "$ref": "#/definitions/userId"
        },
        "RoleName": {
          "$ref": "#/definitions/userName"
        },
        "Tags": {
          "$ref": "aws#/definitions/tagList"
        },
        "Description": {
          "type": "string"
        },
        "PermissionsBoundary": {
          "type": "object"
        },
        "RoleLastUsed": {
          "type": "object"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/roleAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/userName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "All properties given",
          "input": {
            "Arn": "arn:aws:iam::048639848099:role/service-role/test-config-role",
            "CreateDate": "2018-01-21T18:15:20.000Z",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "AWS": "arn:aws:iam::560741234067:root"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "MaxSessionDuration": 3600,
            "Path": "/application_abc/component_xyz/",
            "RoleId": "AROADBQP57FF2AEXAMPLE",
            "RoleName": "AWSServiceRoleForAmazonGuardDuty",
            "Tags": [
              {
                "Key": "Name",
                "Value": "testkey0"
              },
              {
                "Key": "Name1",
                "Value": "testkey01"
              }
            ],
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:role/turbot_role_metadata"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "i-a2345678",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        }
      ]
    },
    "assumeRolePolicyDocument": {
      "type": "object"
    },
    "maxSessionDuration": {
      "type": "integer",
      "minimum": 3600,
      "maximum": 43200,
      "tests": [
        {
          "input": 12345
        },
        {
          "description": "min value",
          "input": 3600
        },
        {
          "description": "max value",
          "input": 43200
        },
        {
          "description": "invalid - greater than max value",
          "input": 11111111,
          "expected": false
        },
        {
          "description": "invalid - string type provided",
          "input": "three",
          "expected": false
        },
        {
          "description": "invalid - decimal value provided",
          "input": 4.5,
          "expected": false
        }
      ]
    },
    "roleAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:role/[A-Za-z0-9_+=,.@-]{1,64}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:role/turbot_role_metadata"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:ec2:123456789012:roles/turbot_role_metadata",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:ec2:1234567892101489:role/turbot_role_metadata",
          "expected": false
        }
      ]
    },
    "rolePolicyAttachment": {
      "type": "object",
      "properties": {
        "RoleName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyArn": {
          "$ref": "#/definitions/userArn"
        },
        "Id": {
          "$ref": "#/definitions/policyAttachmentId"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/rolePolicyAttachmentAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/policyAttachmentId"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "RoleName": "test01",
            "PolicyName": "admin_1",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "Id": "test01-admin_1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:role/test01/policy-attachment/AmazonEKSClusterPolicy"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "test01-admin_1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing role name",
          "input": {
            "PolicyName": "admin_1",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "Id": "test01-admin_1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:role/test01/policy-attachment/AmazonEKSClusterPolicy"
              ],
              "tags": {
                "Env": "Test",
                "App": "Facebook"
              },
              "title": "test",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "RoleName": "test01",
            "PolicyName": "admin_1",
            "PolicyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "Id": "test01-admin_1"
          }
        }
      ]
    },
    "rolePolicyAttachmentAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:role/[A-Za-z0-9_+=,.@-]{1,64}/policy-attachment/[A-Za-z0-9_.-]{1,128}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:role/test01/policy-attachment/hf"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam:us-east-1:123456789012:roles/i-a2345678",
          "expected": false
        },
        {
          "description": "Invalid - Malformed region name",
          "input": "arn:aws:iam:use-east-1:123456789012:role/test01",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam:us-east-1:1234567890123:role/test01",
          "expected": false
        }
      ]
    },
    "root": {
      "type": "object",
      "properties": {
        "arn": {
          "$ref": "#/definitions/rootUserArn"
        },
        "user": {
          "$ref": "#/definitions/User"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/rootUserArn"
              }
            },
            "title": {
              "$ref": "#/definitions/User"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "required": [
        "arn",
        "turbot"
      ],
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "user": "root_account",
            "arn": "arn:aws:iam::123456789012:root",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:root"
              ],
              "title": "root_account",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                },
                "createTimestamp": "2018-12-21T18:15:20.000Z"
              }
            }
          }
        },
        {
          "description": "Invalid - Missing arn",
          "input": {
            "user": "AIDACKCEVSQ6C2EXAMPLE",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user"
              ],
              "title": "AIDACKCEVSQ6C2EXAMPLE",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                },
                "createTimestamp": "2018-12-21T18:15:20.000Z"
              }
            }
          },
          "expected": false
        }
      ]
    },
    "rootUserArn": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:root$",
      "tests": [
        {
          "description": "Valid - Base Case",
          "input": "arn:aws:iam::123456789012:root"
        },
        {
          "description": "Invalid",
          "input": "arn:aws:iam::123456789012:user",
          "expected": false
        }
      ]
    },
    "User": {
      "type": "string"
    },
    "user": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/userArn"
        },
        "PasswordLastUsed": {
          "$ref": "#/definitions/passwordLastUsed"
        },
        "Path": {
          "$ref": "#/definitions/userPath"
        },
        "UserId": {
          "$ref": "#/definitions/userId"
        },
        "UserName": {
          "$ref": "#/definitions/userName"
        },
        "Tags": {
          "$ref": "aws#/definitions/tagList"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/userName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "UserName": "foo",
            "Arn": "arn:aws:iam::123456789012:user/foo",
            "UserId": "AIDACKCEVSQ6C2EXAMPLE",
            "CreateDate": "2018-12-21T18:15:20.000Z",
            "PasswordLastUsed": "2018-12-21T18:15:20.000Z",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user/foo"
              ],
              "tags": {
                "Key": "key01",
                "Value": "value01"
              },
              "title": "foo",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                },
                "createTimestamp": "2018-12-21T18:15:20.000Z"
              }
            }
          }
        },
        {
          "description": "Invalid - Missing Username",
          "input": {
            "Arn": "arn:aws:iam::123456789012:user/foo",
            "UserId": "AIDACKCEVSQ6C2EXAMPLE",
            "CreateDate": "2018-12-21T18:15:20.000Z",
            "PasswordLastUsed": "2018-12-21T18:15:20.000Z",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user/foo"
              ],
              "tags": {
                "Key": "key01",
                "Value": "value01"
              },
              "title": "foo",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                },
                "createTimestamp": "2018-12-21T18:15:20.000Z"
              }
            }
          }
        }
      ]
    },
    "passwordLastUsed": {
      "anyOf": [
        {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        {
          "type": "null"
        }
      ],
      "tests": [
        {
          "input": null
        },
        {
          "input": "2018-12-21T18:15:20.000Z"
        },
        {
          "description": "invalid - string provided",
          "input": "hello",
          "expected": false
        }
      ]
    },
    "userAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:user/[A-Za-z0-9_+=,.@-]{1,64}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:user/bob"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:ec2:us-east-1:123456789012:instances/i-a2345678",
          "expected": false
        },
        {
          "description": "Invalid - account id not valid",
          "input": "arn:aws:iam::1234234456789012:user/bob",
          "expected": false
        },
        {
          "description": "Invalid - special character 0-9_+=,.@- are allowed",
          "input": "arn:aws:iam::123456789012:user/bob!!",
          "expected": false
        }
      ]
    },
    "userGroupMemberships": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/userGroupMembershipAka"
        },
        "Path": {
          "$ref": "#/definitions/userPath"
        },
        "GroupName": {
          "$ref": "#/definitions/userName"
        },
        "UserName": {
          "$ref": "#/definitions/userName"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userGroupMembershipAka"
              }
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "tests": [
        {
          "description": "base",
          "input": {
            "Arn": "arn:aws:iam::492552618977:userGroupMemberships/turbot/user",
            "UserName": "testUser",
            "turbot": {
              "custom": {
                "aws": {
                  "accountId": 123456789012
                },
                "createTimestamp": "2018-12-21T18:15:20.000Z"
              }
            }
          }
        },
        {
          "description": "invalid - no Username provided",
          "input": {
            "Arn": "arn:aws:iam::492552618977:userGroupMemberships/turbot/user",
            "turbot": {
              "custom": {
                "aws": {
                  "accountId": 123456789012
                },
                "createTimestamp": "2018-12-21T18:15:20.000Z"
              }
            }
          }
        }
      ]
    },
    "userGroupMembershipAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:userGroupMemberships/[A-Za-z0-9_+=,.@-]{1,64}/[A-Za-z0-9_+=,.@-]{1,64}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:userGroupMemberships/turbot/user"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:ec2:us-east-1:123456789012:instances/i-a2345678",
          "expected": false
        },
        {
          "description": "Invalid - account id not valid",
          "input": "arn:aws:iam::1234234456789012:user/bob",
          "expected": false
        }
      ]
    },
    "userPolicyAttachment": {
      "type": "object",
      "properties": {
        "UserName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyArn": {
          "$ref": "#/definitions/userArn"
        },
        "Id": {
          "$ref": "#/definitions/policyAttachmentId"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userPolicyAttachmentAka"
              }
            },
            "title": {
              "$ref": "#/definitions/policyAttachmentId"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "UserName": "venu",
            "PolicyName": "admin",
            "PolicyArn": "arn:aws:iam::492552618977:policy/turbot/admin",
            "Id": "venu-admin",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user/venu/policy-attachment/abcjkc"
              ],
              "title": "venu-admin",
              "custom": {
                "aws": {
                  "accountId": 123456789012,
                  "regionName": "us-east-1"
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing UserName",
          "input": {
            "PolicyName": "admin",
            "PolicyArn": "arn:aws:iam::492552618977:policy/turbot/admin",
            "Id": "venu-admin",
            "turbot": {
              "akas": [
                "arn:aws:iam:123456789012:venu/policy-attachment/abcjkc"
              ],
              "title": "Admin",
              "custom": {
                "aws": {
                  "accountId": 123456789012,
                  "regionName": "us-east-1"
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "UserName": "venu",
            "PolicyName": "admin",
            "PolicyArn": "arn:aws:iam::492552618977:policy/turbot/admin",
            "Id": "venu-admin"
          }
        }
      ]
    },
    "userPolicyAttachmentAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:user/[A-Za-z0-9_+=,.@-]{1,64}/policy-attachment/[A-Za-z0-9_.-]{1,128}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:user/ab@cde.com/policy-attachment/Foo"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::123456789012:user/venu/policy-attachments/Foo",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam::1234567890123:user/venu/policy-attachment/Foo",
          "expected": false
        }
      ]
    },
    "userInlinePolicy": {
      "type": "object",
      "properties": {
        "UserName": {
          "$ref": "#/definitions/userName"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/userInlinePolicyAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/policyName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "required": [
        "PolicyName",
        "turbot",
        "UserName"
      ],
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "UserName": "test01",
            "PolicyName": "admin_1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user/test01/inline-policy/admin_1"
              ],
              "title": "test01-admin_1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing user name",
          "input": {
            "PolicyName": "admin_1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:user/test01/inline-policy/admin_1"
              ],
              "title": "test01-admin_1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "UserName": "test01",
            "PolicyName": "admin_1"
          },
          "expected": false
        }
      ]
    },
    "userInlinePolicyAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:user/[A-Za-z0-9_+=,.@-]{1,64}/inline-policy/[A-Za-z0-9_+=,.@-]+$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:user/test01/inline-policy/hf"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::123456789012:users/test01/inline-policy/hf",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam::4653726:user/test01/inline-policy/hf",
          "expected": false
        }
      ]
    },
    "groupInlinePolicy": {
      "type": "object",
      "properties": {
        "GroupName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/groupInlinePolicyAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/policyName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "required": [
        "PolicyName",
        "turbot",
        "GroupName"
      ],
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "GroupName": "test01",
            "PolicyName": "admin1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:group/test01/inline-policy/admin_1"
              ],
              "title": "admin1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing group name",
          "input": {
            "PolicyName": "admin1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:goup/test01/inline-policy/admin_1"
              ],
              "title": "admin_1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "GroupName": "test01",
            "PolicyName": "admin1"
          },
          "expected": false
        }
      ]
    },
    "groupInlinePolicyAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:group/[A-Za-z0-9_+=,.@-]{1,64}/inline-policy/[A-Za-z0-9_+=,.@-]+$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:group/test01/inline-policy/hf"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam::123456789012:groups/test01/inline-policy/hf",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam::4653726:group/test01/inline-policy/hf",
          "expected": false
        }
      ]
    },
    "roleInlinePolicy": {
      "type": "object",
      "properties": {
        "RoleName": {
          "$ref": "#/definitions/policyName"
        },
        "PolicyName": {
          "$ref": "#/definitions/policyName"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/roleInlinePolicyAka"
              }
            },
            "title": {
              "$ref": "#/definitions/policyName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "Valid - All properties",
          "input": {
            "RoleName": "test01",
            "PolicyName": "admin1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:role/test01/inline-policy/AmazonEKSClusterPolicy"
              ],
              "title": "admin_1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing role name",
          "input": {
            "PolicyName": "admin1",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:role/test01/inline-policy/AmazonEKSClusterPolicy"
              ],
              "title": "admin1",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing turbot data",
          "input": {
            "RoleName": "test01",
            "PolicyName": "admin1"
          },
          "expected": false
        }
      ]
    },
    "roleInlinePolicyAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:role/[A-Za-z0-9_+=,.@-]{1,64}/inline-policy/[A-Za-z0-9_.-]{1,128}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:role/test01/inline-policy/hf"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:iam:us-east-1:123456789012:roles/i-a2345678",
          "expected": false
        },
        {
          "description": "Invalid - Malformed region name",
          "input": "arn:aws:iam:use-east-1:123456789012:role/test01",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:iam:us-east-1:1234567890123:role/test01",
          "expected": false
        }
      ]
    },
    "instanceProfile": {
      "type": "object",
      "properties": {
        "Arn": {
          "$ref": "#/definitions/instanceProfileAka"
        },
        "createTimestamp": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "InstanceProfileName": {
          "$ref": "#/definitions/instanceProfileName"
        },
        "Tags": {
          "$ref": "aws#/definitions/tagList"
        },
        "turbot": {
          "type": "object",
          "properties": {
            "akas": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/instanceProfileAka"
              }
            },
            "tags": {
              "$ref": "aws#/definitions/tagsMap"
            },
            "title": {
              "$ref": "#/definitions/instanceProfileName"
            },
            "custom": {
              "type": "object",
              "properties": {
                "aws": {
                  "$ref": "aws#/definitions/awsMetadata"
                },
                "createTimestamp": {
                  "$ref": "turbot#/definitions/isoTimestamp"
                }
              }
            }
          }
        }
      },
      "additionalProperties": true,
      "tests": [
        {
          "description": "All properties given",
          "input": {
            "Arn": "arn:aws:iam::123456789012:instance-profile/turbot_instanceProfile_metadata",
            "CreateDate": "2018-01-21T18:15:20.000Z",
            "InstanceProfileName": "testinstanceProfile",
            "turbot": {
              "akas": [
                "arn:aws:iam::123456789012:instance-profile/turbot_instanceProfile_metadata"
              ],
              "title": "i-a2345678",
              "custom": {
                "aws": {
                  "accountId": 123456789012
                }
              }
            }
          }
        },
        {
          "description": "Invalid - Missing turbot Data",
          "input": {
            "instanceProfileName": "AWSServiceinstanceProfileForAmazonGuardDuty",
            "title": "Test-instanceProfile",
            "Tags": [
              {
                "Key": "Name",
                "Value": "testkey0"
              },
              {
                "Key": "Name1",
                "Value": "testkey01"
              }
            ]
          },
          "expected": false
        }
      ]
    },
    "instanceProfileName": {
      "type": "string",
      "pattern": "^[-0-9a-zA-Z_+=,.@]{1,128}$",
      "tests": [
        {
          "description": "Base test case",
          "input": "sad"
        },
        {
          "input": "sdsadcxa123acAXSASD"
        },
        {
          "input": "00123"
        },
        {
          "description": "invalid - empty string",
          "input": "",
          "expected": false
        },
        {
          "description": "invalid - exceeding maximum limit",
          "input": "sdsadcxa123acAXSASDsdsadcxa123acAXSASDsdsadcxa123acAXSASDsdsadcxa123acAXSASDsdsadcxa123acAXSASDsdsadcxa123acAXSASDsdsadcxa123acAX",
          "expected": false
        },
        {
          "description": "invalid - invalid character ~",
          "input": "SADSA~asdsad",
          "expected": false
        }
      ]
    },
    "instanceProfileAka": {
      "type": "string",
      "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{12}:instance-profile/[A-Za-z0-9_+=,.@-]{1,64}$",
      "tests": [
        {
          "description": "Valid - Base case",
          "input": "arn:aws:iam::123456789012:instance-profile/turbot_instanceProfile_metadata"
        },
        {
          "description": "Invalid - Malformed resource collection",
          "input": "arn:aws:ec2:123456789012:instance-profiles/turbot_instanceProfile_metadata",
          "expected": false
        },
        {
          "description": "Invalid - Malformed account ID",
          "input": "arn:aws:ec2:1234567892101489:instance-profile/turbot_instanceProfile_metadata",
          "expected": false
        }
      ]
    }
  },
  "policy": {
    "types": {
      "accessKeyActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "Determine the action to take when an AWS IAM access key, based on the `AWS > IAM > Access Key > Active > *` policies.\n\nThe control determines whether the resource is in active use, and if not,\nhas the ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Access Key > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved for any reason it will be considered\nUnapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "accessKeyActiveLastModified": {
        "title": "Last Modified",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/accessKeyActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "The number of days since the AWS IAM access key\nwas last modified before it is considered inactive.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Access Key > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "accessKeyActiveAge": {
        "title": "Age",
        "icon": "fab-creative-commons-sampling",
        "category": "turbot#/control/categories/resourceActive",
        "parent": "#/policy/types/accessKeyActive",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "The age after which the AWS IAM access key\nis no longer considered active. If a create time is unavailable, the time Turbot discovered the resource is used.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Access Key > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force inactive if age > 1 day",
            "Force inactive if age > 3 days",
            "Force inactive if age > 7 days",
            "Force inactive if age > 14 days",
            "Force inactive if age > 30 days",
            "Force inactive if age > 60 days",
            "Force inactive if age > 90 days",
            "Force inactive if age > 180 days",
            "Force inactive if age > 365 days"
          ],
          "example": [
            "Force inactive if age > 90 days"
          ],
          "default": "Skip"
        }
      },
      "accessKeyActiveStatus": {
        "title": "Status",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/accessKeyActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "The policy allows you to\ncheck which status determines if the AWS IAM access key is active.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Access Key > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n\nThe policy values for AWS IAM access key are deprecated and replaced by new values.\nThe deprecated values will be removed in next major version.\n\n| Deprecated Values                   | Current Values                         |\n|-------------------------------------|----------------------------------------|\n| Active if status is active         | Active if $.Status is active        |\n| Force active if status is active   | Force active if $.Status is active  |\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if status is active",
            "Force active if status is active",
            "Active if $.Status is active",
            "Force active if $.Status is active"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "accessKeyActiveRecentlyUsed": {
        "title": "Recently Used",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/accessKeyActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "The number of days since the AWS IAM access key was last used before it is considered inactive.\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Access Key > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if recently used <= 1 day",
            "Active if recently used <= 3 days",
            "Active if recently used <= 7 days",
            "Active if recently used <= 14 days",
            "Active if recently used <= 30 days",
            "Active if recently used <= 60 days",
            "Active if recently used <= 90 days",
            "Active if recently used <= 180 days",
            "Active if recently used <= 365 days",
            "Force active if recently used <= 1 day",
            "Force active if recently used <= 3 days",
            "Force active if recently used <= 7 days",
            "Force active if recently used <= 14 days",
            "Force active if recently used <= 30 days",
            "Force active if recently used <= 60 days",
            "Force active if recently used <= 90 days",
            "Force active if recently used <= 180 days",
            "Force active if recently used <= 365 days"
          ],
          "example": [
            "Active if recently used <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "accessKeyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Configure whether to record and synchronize details for the AWS IAM access key into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\nAll policies and controls in Turbot are based around the resource, so usually the CMDB policy is set to **\"Enforce: Enabled\"**.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled",
            "Enforce: Disabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "accessKeyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "accessKeyConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/accessKeyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "accessKeyConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/accessKeyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "accessKeyUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Configure the number of AWS IAM access keys that can be used for this user and the current consumption against the limit.\n\nYou can configure the behavior of the control with this  `AWS > IAM > Access Key > Usage` policy.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Usage <= 85% of Limit",
            "Check: Usage <= 100% of Limit"
          ],
          "example": [
            "Check: Usage <= 85% of Limit"
          ],
          "default": "Skip"
        }
      },
      "accessKeyUsageLimit": {
        "title": "Limit",
        "icon": "fal-hand-holding-usd",
        "parent": "#/policy/types/accessKeyUsage",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Maximum number of items that can be created for this user.",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 2
        }
      },
      "accountPasswordPolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM account password policy(s) into the CMDB.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "accountPasswordPolicyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accountPasswordPolicy"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "accountPasswordPolicyConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/accountPasswordPolicyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accountPasswordPolicy"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "accountPasswordPolicyConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/accountPasswordPolicyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/accountPasswordPolicy"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "accountPasswordPolicySettings": {
        "title": "Settings",
        "icon": "fal-key",
        "description": "Check if the IAM account password policy is in sync with the account password settings policies.",
        "parent": "#/resource/types/accountPasswordPolicy",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Configured",
            "Enforce: Configured"
          ],
          "example": [
            "Check: Configured"
          ],
          "default": "Skip"
        }
      },
      "accountPasswordPolicySettingsAllowUsersToChange": {
        "title": "Allow Users to Change",
        "icon": "fal-key",
        "description": "You can permit all IAM users in your account to use the IAM console to change their own passwords, as described in [Permitting IAM users to change their own passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html).\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": "Enabled",
          "default": "Enabled"
        }
      },
      "accountPasswordPolicySettingsHardExpiry": {
        "title": "Hard Expiry",
        "icon": "fal-key",
        "description": "You can prevent IAM users from choosing a new password after their current password has expired. For example, a password policy can specify a password expiration period. If an IAM user fails to choose a new password before the expiration period ends, the IAM user cannot set a new password. In that case, the IAM user must request a password reset from an account administrator in order to regain access to the AWS Management Console. You can also leave this check box cleared. If an IAM user allows his or her password to expire, the user in this scenario is required to set a new password before accessing the AWS Management Console.\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": "Enabled",
          "default": "Enabled"
        }
      },
      "accountPasswordPolicySettingsMaxAge": {
        "title": "Max Age",
        "icon": "fal-key",
        "description": "You can set IAM user passwords to be valid for only the specified number of days. You specify the number of days that passwords remain valid after they are set. For example, when you enable password expiration and set the password expiration period to 90 days, an IAM user can use a password for up to 90 days. After 90 days, the password expires and the IAM user must set a new password before accessing the AWS Management Console. You can choose a password expiration period between 1 and 1095 days, inclusive.\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1095,
          "example": 90,
          "default": 90
        }
      },
      "accountPasswordPolicySettingsMinimumLength": {
        "title": "Minimum Length",
        "icon": "fal-key",
        "description": "You can specify the minimum number of characters allowed in an IAM user password. You can type any number from 6 to 128.\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "integer",
          "minimum": 6,
          "maximum": 128,
          "example": 14,
          "default": 14
        }
      },
      "accountPasswordPolicySettingsReusePrevention": {
        "title": "Reuse Prevention",
        "icon": "fal-key",
        "description": "You can prevent IAM users from reusing a specified number of previous passwords. You can set the number of previous passwords from 1 to 24, inclusive.\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 24,
          "example": 5,
          "default": 5
        }
      },
      "accountPasswordPolicySettingsRequireLowercaseCharacters": {
        "title": "Require Lowercase Characters",
        "icon": "fal-key",
        "description": "You can require that IAM user passwords contain at least one lowercase character from the ISO basic Latin alphabet (a to z).\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": "Enabled",
          "default": "Enabled"
        }
      },
      "accountPasswordPolicySettingsRequireNumbers": {
        "title": "Require Numbers",
        "icon": "fal-key",
        "description": "You can require that IAM user passwords contain at least one numeric character (0 to 9).\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": "Enabled",
          "default": "Enabled"
        }
      },
      "accountPasswordPolicySettingsRequireSymbols": {
        "title": "Require Symbols",
        "icon": "fal-key",
        "description": "You can require that IAM user passwords contain at least one of the following nonalphanumeric characters:\n`! @ # $ % ^ & * ( ) _ + - = [ ] { } | '`\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": "Enabled",
          "default": "Enabled"
        }
      },
      "accountPasswordPolicySettingsRequireUppercaseCharacters": {
        "title": "Require Uppercase Characters",
        "icon": "fal-key",
        "description": "You can require that IAM user passwords contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).\n\nRefer to [Setting an account password policy for IAM users](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html) for more information on account password policies.\n",
        "parent": "#/policy/types/accountPasswordPolicySettings",
        "targets": "#/resource/types/accountPasswordPolicy",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": "Enabled",
          "default": "Enabled"
        }
      },
      "accountSummaryCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/accountSummary",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure whether to record and synchronize details for the AWS IAM account summary into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\nAll policies and controls in Turbot are based around the resource, so usually the CMDB policy is set to **\"Enforce: Enabled\"**.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled",
            "Enforce: Disabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "credentialReportCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details of AWS IAM credential report into the CMDB.",
        "parent": "#/resource/types/credentialReport",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "groupActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Determine the action to take when an AWS IAM group, based on the `AWS > IAM > Group > Active > *` policies.\n\nThe control determines whether the resource is in active use, and if not,\nhas the ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Group > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved for any reason it will be considered\nUnapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "groupActiveLastModified": {
        "title": "Last Modified",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/groupActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "The number of days since the AWS IAM group\nwas last modified before it is considered inactive.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Group > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "groupActiveAge": {
        "title": "Age",
        "icon": "fab-creative-commons-sampling",
        "category": "turbot#/control/categories/resourceActive",
        "parent": "#/policy/types/groupActive",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "The age after which the AWS IAM group\nis no longer considered active. If a create time is unavailable, the time Turbot discovered the resource is used.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Group > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force inactive if age > 1 day",
            "Force inactive if age > 3 days",
            "Force inactive if age > 7 days",
            "Force inactive if age > 14 days",
            "Force inactive if age > 30 days",
            "Force inactive if age > 60 days",
            "Force inactive if age > 90 days",
            "Force inactive if age > 180 days",
            "Force inactive if age > 365 days"
          ],
          "example": [
            "Force inactive if age > 90 days"
          ],
          "default": "Skip"
        }
      },
      "groupActiveBudget": {
        "title": "Budget",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/groupActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "The impact of the budget state on the active control. This policy allows you to force\ngroups to inactive based on the current budget state, as reflected in\n`AWS > Account > Budget > State`\n\nThe Active control determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated compliance\nenvironment, it's common to end up with a wide range of alarms that are difficult\nand time consuming to clear. The Active control brings automated, well-defined\ncontrol to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Group > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force inactive if Budget > State is Over or higher",
            "Force inactive if Budget > State is Critical or higher",
            "Force inactive if Budget > State is Shutdown"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "groupApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Determine the action to take when an AWS IAM group is not approved based on `AWS > IAM > Group > Approved > *` policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nFor any enforcement actions that specify `if new`, e.g., `Enforce: Delete unapproved if new`, this control will only take the enforcement actions for resources created within the last 60 minutes.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "groupApprovedTurbot": {
        "title": "Turbot",
        "icon": "fal-check-double",
        "description": "Determine whether IAM Policies that are defined and configured by Turbot (for example, from the Permissions stack or the Service Roles stack) will always be approved.\n",
        "parent": "#/policy/types/groupApproved",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force Approved for Turbot Group"
          ],
          "default": "Force Approved for Turbot Group"
        }
      },
      "groupApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "parent": "#/policy/types/groupApproved",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Determine whether the AWS IAM group is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM group is not approved, it will be subject to the action specified in the `AWS > IAM > Group > Approved` policy.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "groupApprovedBudget": {
        "title": "Budget",
        "icon": "fal-check-double",
        "parent": "#/policy/types/groupApproved",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "The policy allows you to set groups to unapproved based on the current budget state, as reflected in `AWS > Account > Budget > State`\n\nThis policy will be evaluated by the Approved control. If an AWS IAM group is not matched by the approved list, it will be subject to the action specified in the `AWS > IAM > Group > Approved` policy.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Unapproved if Budget > State is Over or higher",
            "Unapproved if Budget > State is Critical or higher",
            "Unapproved if Budget > State is Shutdown"
          ],
          "example": [
            "Unapproved if Budget > State is Shutdown"
          ],
          "default": "Skip"
        }
      },
      "groupPolicyAttachmentsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure AWS IAM group policy attachments `Approved` checking. This policy\ndefines whether to verify the IAM group attached policies are approved\n(per `Approved > Compiled Rules`), as well as the subsequent action to\ntake on unapproved items.\nIf set to \"Enforce: Delete unapproved\", any unapproved attached policy\nwill be removed.\n",
        "parent": "#/policy/types/groupPolicyAttached",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "groupPolicyAttachmentsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An [Object Control List (OCL)](https://turbot.com/v5/docs/reference/ocl) with a list of filter rules\nto approve or reject policies.\nNote that the Approved control does not operate directly from this policy,\nbut from the `Approved > Compiled Rules`.  The rules are processed in order,\nand any built-in Turbot rules will appear first in the list of compiled rules.\n",
        "parent": "#/policy/types/groupPolicyAttachmentsApproved",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve rules\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "groupPolicyAttachmentsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "icon": "fal-clipboard-list-check",
        "description": "A read-only [Object Control List (OCL)](https://turbot.com/v5/docs/reference/ocl) to add or\nremove IAM Policy from a IAM group.\nThis policy is generated by Turbot.\n",
        "parent": "#/policy/types/groupPolicyAttachmentsApproved",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceApproved",
        "readOnly": true,
        "schema": {
          "type": "string"
        }
      },
      "groupCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure whether to record and synchronize details for the AWS IAM group into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\nAll policies and controls in Turbot are based around the resource, so usually the CMDB policy is set to **\"Enforce: Enabled\"**.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled",
            "Enforce: Disabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "groupConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "groupConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/groupConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "groupConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/groupConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/group"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "groupPolicyAttached": {
        "title": "Policy Attachments",
        "icon": "fal-check-double",
        "parent": "#/resource/types/group",
        "targets": [],
        "category": "turbot#/control/categories/resourceRequired"
      },
      "groupPolicyRequired": {
        "title": "Required",
        "icon": "fal-check-double",
        "description": "Configure whether required policies should be attached to a group.\nIf set to Enforce,  policies in Required > Items will be attached to the group.\n",
        "parent": "#/policy/types/groupPolicyAttached",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Required > Items",
            "Enforce: Required > Items"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "groupPolicyRequiredItems": {
        "title": "Items",
        "icon": "fal-list-ul",
        "description": "A list of IAM policies that must be attached to a group.",
        "parent": "#/policy/types/groupPolicyRequired",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[A-Za-z0-9_+=,.@-]+$"
          },
          "default": []
        }
      },
      "groupPolicyRequiredCompiledItems": {
        "title": "Compiled Items",
        "icon": "fal-clipboard-list-check",
        "description": "A list of IAM policies that must be attached to a group.\n\nThis is a read-only policy that is generated by Turbot\n",
        "parent": "#/policy/types/groupPolicyRequired",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceRequired",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "groupUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/group",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure the number of AWS IAM groups that can be used for this account and the current consumption against the limit.\n\nYou can configure the behavior of the control with this  `AWS > IAM > Group > Usage` policy.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Usage <= 85% of Limit",
            "Check: Usage <= 100% of Limit"
          ],
          "example": [
            "Check: Usage <= 85% of Limit"
          ],
          "default": "Skip"
        }
      },
      "groupUsageLimit": {
        "title": "Limit",
        "icon": "fal-hand-holding-usd",
        "parent": "#/policy/types/groupUsage",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Maximum number of items that can be created for this account.",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 300
        }
      },
      "groupPolicyAttachmentActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Check if the AWS IAM Grouppolicyattachment is active based on AWS > IAM > Grouppolicyattachment > Active > * policies.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "groupPolicyAttachmentActiveLastModified": {
        "title": "Last Modified",
        "description": "Check if AWS groupPolicyAttachment is active based on when it was last modified.",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/groupPolicyAttachmentActive",
        "targets": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "groupPolicyAttachmentCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM Group policy(s) into the CMDB.",
        "parent": "#/resource/types/groupPolicyAttachment",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "groupPolicyAttachmentConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/groupPolicyAttachment",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/groupPolicyAttachment"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "groupPolicyAttachmentConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/groupPolicyAttachmentConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/groupPolicyAttachment"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "groupPolicyAttachmentConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/groupPolicyAttachmentConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/groupPolicyAttachment"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "loginUserNames": {
        "title": "Login User Names",
        "icon": "fal-users",
        "description": "AWS IAM user login names",
        "parent": "#/resource/types/iam",
        "targets": "turbot-iam#/resource/types/profile",
        "category": "turbot#/control/categories/other",
        "help": "#/help/loginNames",
        "uniqueness": {
          "scope": "global",
          "mode": "flatten"
        },
        "schema": {
          "type": "array"
        },
        "defaultTemplate": "{% if $.profile.profileId %}- '{{ $.profile.profileId }}'{% else %} [] {% endif %}",
        "defaultTemplateInput": "{\n  profile{\n    profileId\n  }\n}\n"
      },
      "iamCustomEventPatterns": {
        "title": "@turbot/aws-iam",
        "icon": "fal-file-invoice",
        "parent": "aws#/policy/types/eventHandlersEventsRulesCustomEventPatterns",
        "targets": [
          "aws#/resource/types/region"
        ],
        "description": "The CloudWatch Events event pattern used by the AWS IAM module to specify\nwhich events to forward to the Turbot Event Handlers.\n",
        "category": "turbot#/control/categories/configured",
        "schema": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      },
      "permissions": {
        "title": "Permissions",
        "icon": "fal-traffic-light-go",
        "description": "This policy determines the permission mode used by Turbot. There are 3 possible configurations:\n\nNone: Turbot will not manage any AWS IAM permissions. This setting is for organizations that want to maintain complete control over AWS IAM.\n\nPolicy-Only Mode: Turbot policies are created in AWS IAM, but no management of roles or users will occur. This option helps automate policy creation across a wide number of accounts while keeping control in the hands of the organization.\n\nRole Mode: Turbot will create policies and roles within the AWS account. This allows administrators to assign AWS permissions in Turbot. Users federate into AWS and will assume the role that is assigned to their profile in Turbot.\n\n**Note**: Support for policy values Enforce: User Mode and Check: User Mode has been temporarily withdrawn from AWS > Turbot > Permissions policy. Please note that the changes are backward compatible and will not affect any previous policy settings.\n",
        "parent": "aws#/policy/types/turbot",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: None",
            "Check: Policy-Only Mode",
            "Check: Role Mode",
            "Enforce: None",
            "Enforce: Policy-Only Mode",
            "Enforce: Role Mode"
          ],
          "example": [
            "Enforce: None"
          ],
          "default": "Skip"
        }
      },
      "permissionsSuperuserBoundary": {
        "title": "Superuser Boundary",
        "icon": "fal-traffic-light-go",
        "description": "Configure whether Turbot should apply the Boundary\nPolicy to AWS/Superuser.\n\nBy default, the boundary is applied to all users,\nhowever you can disable the boundary for superusers\nby setting this policy to `No Boundary`\n",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "No Boundary",
            "Turbot Boundary"
          ],
          "default": "Turbot Boundary"
        }
      },
      "permissionsCustomLevelsAccount": {
        "title": "Custom Levels [Account]",
        "icon": "fal-users-cog",
        "description": "An ordered list of custom levels used to customize Turbot's permissions. Levels  in this policy will appear in the Turbot console as grantable to Turbot users as AWS/Role/{role name}.  When granted access, Turbot will allow the user to assume the associated IAM role. Note that the IAM roles must already exist in the AWS Account, and turbot must have the ability to assume the roles.",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "array",
          "default": [],
          "example": [
            [
              "my_custom_backup_role",
              "my_custom_infosec_role"
            ]
          ]
        }
      },
      "permissionsLevelsDefault": {
        "title": "Levels [Default]",
        "icon": "fal-layer-group",
        "description": "Define the permissions levels that can be used to grant access to an AWS account. Permissions levels defined will appear in the UI to assign access to Turbot users. This policy provides a default for Permissions > Levels in each service, however you can explicitly override the setting for each service if desired",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "parent": "#/policy/types/permissions",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Metadata",
              "ReadOnly",
              "Operator",
              "Admin",
              "Owner"
            ]
          },
          "default": []
        }
      },
      "permissionsLevels": {
        "title": "Levels",
        "icon": "fal-layer-group",
        "description": "Define the permissions levels that can be used to grant access to an AWS account.  Permissions levels defined will appear in the UI to assign access to Turbot users.",
        "targets": "aws#/resource/types/account",
        "parent": "#/policy/types/permissions",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS/User",
              "AWS/Metadata",
              "AWS/ReadOnly",
              "AWS/Operator",
              "AWS/Admin",
              "AWS/Owner",
              "AWS/SuperUser"
            ]
          },
          "default": [
            "AWS/User",
            "AWS/Metadata",
            "AWS/ReadOnly",
            "AWS/Operator",
            "AWS/Admin",
            "AWS/Owner",
            "AWS/SuperUser"
          ]
        }
      },
      "permissionsLevelsModifiers": {
        "title": "Modifiers",
        "icon": "fal-user-edit",
        "description": "A map of AWS API to Turbot Permission Level used to customize Turbot's standard permissions. You can add, remove or redefine the mapping of AWS API operations to Turbot permissions levels here. Note: Modifiers are cumulative - if you add a permission to the Metadata level, it is also added to ReadOnly, Operator and Admin. Modifier policies set here apply ONLY to the AWS level",
        "targets": "aws#/resource/types/account",
        "parent": "#/policy/types/permissionsLevels",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "array",
          "default": [],
          "example": [
            [
              {
                "datasync:ListLocations": "Metadata"
              },
              {
                "datasync:CreateLocationEfs": "Admin"
              }
            ]
          ]
        }
      },
      "permissionsLockdown": {
        "title": "Lockdown",
        "icon": "fal-lock-alt",
        "parent": "#/policy/types/permissions",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "permissionsLockdownApiBoundary": {
        "title": "API Boundary",
        "icon": "fal-lock-alt",
        "parent": "#/policy/types/permissionsLockdown",
        "category": "turbot#/control/categories/iamPermissions",
        "targets": "aws#/resource/types/account",
        "description": "A list of APIs that should be allowed in the Turbot\nboundary policy.\n\nThis is represented as a list of apis and their\nscope (regional or global).\n\nFor example:\n\n  ```\n  - api: 's3:*'\n    regionScope: regional\n  - api: 'iam:*'\n    regionScope: global\n  ```\n\n**Note**: That APIs can be enabled or disabled via the\nrelevant `AWS > {Service} > API Enabled` policies.\nAn API will be allowed in the boundary if it is\nEITHER enabled via `AWS > {Service} > API Enabled`\nOR added to the `AWS > Turbot > Permissions >\nLockdown > API Boundary` policy.\n",
        "schema": {
          "$ref": "aws-iam#/definitions/apiBoundaries",
          "default": []
        }
      },
      "permissionsLockdownRegionBoundary": {
        "title": "Region Boundary",
        "icon": "fal-lock-alt",
        "description": "Define a list of regions to which API calls can be made. Any API to any region that does not appear in this list will be explicitly denied. The '*' wildcard may be used in these values.\n\nNote that this policy disables the region for ALL users and roles,\nand Turbot will have no access to any regions that do not appear in\nthe list.\n\nGlobal services (such as IAM) are not subject to the Region Boundary\n",
        "parent": "#/policy/types/permissionsLockdown",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[-a-z0-9?*]+$"
          },
          "default": [
            "*"
          ]
        }
      },
      "permissionsLockdownRegions": {
        "title": "Regions",
        "icon": "fal-lock-alt",
        "description": "Define a list of regions to which API calls can be made. Any API to any region that does not appear in this list will be explicitly denied. The '*' wildcard may be used in these values.",
        "parent": "#/policy/types/permissionsLockdown",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "aws#/definitions/regionNameMatcherList"
        },
        "defaultTemplate": "{% if $.regions.value | length == 0 %} [] {% endif %}{% for item in $.regions.value %}- '{{ item }}'{{ '\n' }}{% endfor %}",
        "defaultTemplateInput": "{\n  regions: policyValue(uri:\"tmod:@turbot/aws#/policy/types/approvedRegionsDefault\") {\n    value\n  }\n}\n"
      },
      "iamTurbot": {
        "title": "Turbot",
        "icon": "fal-traffic-light-go",
        "description": "Configures Turbot IAM Users, Groups, Roles, and Policies, per AWS > Permissions.",
        "parent": "#/resource/types/iam",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Per AWS > Permissions"
          ],
          "default": "Per AWS > Permissions"
        }
      },
      "turbotNamePrefixDefault": {
        "title": "Name Prefix [Default]",
        "icon": "fal-edit",
        "description": "Provides a default prefix to be used in resource names for standard Turbot IAM objects.  This policy can be referenced other policies (User > Name Prefix, Role > Name Prefix, Group > Name Prefix, Policy > Name Prefix) to set a single, consistent default",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "default": "",
          "example": "turbot-"
        }
      },
      "turbotTagsDefault": {
        "title": "Tags Default",
        "icon": "fal-edit",
        "description": "Provides a default prefix to be used in resource names for standard Turbot IAM objects.  This policy can be referenced other policies (User > Name Prefix, Role > Name Prefix, Group > Name Prefix, Policy > Name Prefix) to set a single, consistent default",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "aws#/definitions/tagsTemplateTagList",
          "defaultTemplate": [],
          "example": [
            {
              "foo": "bar"
            },
            {
              "myAccount": "abc"
            }
          ]
        }
      },
      "turbotNamePathDefault": {
        "title": "Name Path [Default]",
        "icon": "fal-edit",
        "description": "Provides a default value to be used in resource path names for standard Turbot IAM objects.  The path should start and end with a slash (/) This policy can be referenced other policies (User > Name Path, Role > Name Path, Groups > Name Path, Policy > Name Path) to set a single, consistent default",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "default": "/turbot/",
          "example": "/turbot/"
        }
      },
      "turbotUser": {
        "title": "User",
        "icon": "fal-traffic-light-go",
        "description": "Configures Turbot IAM Users, depending on AWS > Permissions.",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Skip"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "turbotUserNamePrefix": {
        "title": "Name Prefix",
        "icon": "fal-edit",
        "description": "A prefix to be used in resource names for standard Turbot IAM Users.",
        "parent": "#/policy/types/turbotUser",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixName }}'",
        "defaultTemplateInput": "{\n  prefixName: policy(uri: \"#/policy/types/turbotNamePrefixDefault\")\n}\n"
      },
      "turbotUserNamePath": {
        "title": "Name Path",
        "icon": "fal-edit",
        "description": "The value to be used in resource path names for standard Turbot IAM Users. The path should start and end with a slash (/).",
        "parent": "#/policy/types/turbotUser",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixPath }}'",
        "defaultTemplateInput": "{\n  prefixPath: policy(uri: \"#/policy/types/turbotNamePathDefault\")\n}\n"
      },
      "turbotUserTags": {
        "title": "Tags",
        "icon": "fal-tags",
        "description": "Ensure AWS IAM Role tags for Turbot role include tags defined in User Tags.",
        "parent": "#/policy/types/turbotUser",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "aws#/definitions/tagsTemplateTagList",
          "example": [
            {
              "foo": "bar"
            },
            {
              "myAccount": "abc"
            }
          ]
        },
        "defaultTemplate": "[]"
      },
      "turbotGroup": {
        "title": "Group",
        "icon": "fal-edit",
        "description": "Configures Turbot IAM Groups, depending on AWS > Permissions.",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Skip"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "turbotGroupNamePrefix": {
        "title": "Name Prefix",
        "icon": "fal-edit",
        "description": "A prefix to be used in resource names for standard Turbot IAM Groups.",
        "parent": "#/policy/types/turbotGroup",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixName }}'",
        "defaultTemplateInput": "{\n  prefixName: policy(uri: \"#/policy/types/turbotNamePrefixDefault\")\n}\n"
      },
      "turbotGroupNamePath": {
        "title": "Name Path",
        "icon": "fal-edit",
        "description": "The value to be used in resource path names for standard Turbot IAM Groups. The path should start and end with a slash (/).",
        "parent": "#/policy/types/turbotGroup",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixPath }}'",
        "defaultTemplateInput": "{\n  prefixPath: policy(uri: \"#/policy/types/turbotNamePathDefault\")\n}\n"
      },
      "turbotRole": {
        "title": "Role",
        "icon": "fal-edit",
        "description": "Configures Turbot IAM Roles, depending on AWS > Permissions.",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Skip"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "turbotRoleNamePrefix": {
        "title": "Name Prefix",
        "icon": "fal-edit",
        "description": "A prefix to be used in resource names for standard Turbot IAM Roles.",
        "parent": "#/policy/types/turbotRole",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixName }}'",
        "defaultTemplateInput": "{\n  prefixName: policy(uri: \"#/policy/types/turbotNamePrefixDefault\")\n}\n"
      },
      "turbotRoleNamePath": {
        "title": "Name Path",
        "icon": "fal-edit",
        "description": "The value to be used in resource path names for standard Turbot IAM Roles. The path should start and end with a slash (/).",
        "parent": "#/policy/types/turbotRole",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixPath }}'",
        "defaultTemplateInput": "{\n  prefixPath: policy(uri: \"#/policy/types/turbotNamePathDefault\")\n}\n"
      },
      "turbotRoleTags": {
        "title": "Tags",
        "icon": "fal-tags",
        "description": "Ensure AWS IAM Role tags for Turbot role include tags defined in Role Tags.",
        "parent": "#/policy/types/turbotRole",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "aws#/definitions/tagsTemplateTagList",
          "example": [
            {
              "foo": "bar"
            },
            {
              "myAccount": "abc"
            }
          ]
        },
        "defaultTemplate": "[]"
      },
      "turbotPolicy": {
        "title": "Policy",
        "icon": "fal-edit",
        "description": "Configures Turbot IAM Policies, depending on AWS > Permissions.",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Skip"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "turbotPolicyNamePrefix": {
        "title": "Name Prefix",
        "icon": "fal-edit",
        "description": "A prefix to be used in resource names for standard Turbot IAM Policies.",
        "parent": "#/policy/types/turbotPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixName }}'",
        "defaultTemplateInput": "{\n  prefixName: policy(uri: \"#/policy/types/turbotNamePrefixDefault\")\n}\n"
      },
      "turbotPolicyNamePath": {
        "title": "Name Path",
        "icon": "fal-edit",
        "description": "The value to be used in resource path names for standard Turbot IAM Policies. The path should start and end with a slash (/).",
        "parent": "#/policy/types/turbotPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "'{{ $.prefixPath }}'",
        "defaultTemplateInput": "{\n  prefixPath: policy(uri: \"#/policy/types/turbotNamePathDefault\")\n}\n"
      },
      "iamPermissionsCompiled": {
        "title": "Compiled",
        "icon": "fal-calculator",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "iamPermissionsCompiledServicePermissions": {
        "title": "Service Permissions",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a single list of ALL permissions for all services that is used as input to the control that manages the IAM stack.",
        "parent": "#/policy/types/iamPermissionsCompiled",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "iamPermissionsCompiledAccountPermissions": {
        "title": "Account Permissions",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a single list of ALL permissions for all provider level permissions (AWS/Admin, AWS/Operator, etc) that is used as input to the control that manages the IAM stack",
        "parent": "#/policy/types/iamPermissionsCompiled",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "$ref": "#/definitions/awsRightDefinitionList"
        },
        "function": {
          "src": "functions/iam/compiledAccountPermission",
          "bundle": "functions/iam/compiledAccountPermission/dist/index.zip",
          "memory": 1024,
          "timeout": 120,
          "hash": "fc42eba189"
        }
      },
      "turbotPermissionsCompiledLevels": {
        "title": "AWS [Turbot]",
        "icon": "fal-calculator",
        "description": "A list of AWS permissions that Turbot may use to grant permissions on folders that have aws accounts as children.\n",
        "parent": "turbot-iam#/policy/types/permissionsCompiledLevels",
        "targets": [
          "turbot#/resource/types/folder",
          "turbot#/resource/types/turbot"
        ],
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "#/definitions/turbotAwsLevelDefinitionList",
          "example": [
            [
              {
                "type": "tmod:@turbot/aws-s3#/permission/types/s3",
                "level": "tmod:@turbot/turbot-iam#/permission/levels/admin"
              },
              {
                "type": "tmod:@turbot/aws-ec2#/permission/types/ec2",
                "level": "tmod:@turbot/turbot-iam#/permission/levels/admin"
              }
            ]
          ]
        }
      },
      "turbotPermissionsCompiledLevelsAws": {
        "title": "AWS",
        "icon": "fal-calculator",
        "description": "A list of AWS permissions that Turbot may use to grant permissions on an account.\n",
        "parent": "turbot-iam#/policy/types/permissionsCompiledLevels",
        "targets": [
          "aws#/resource/types/account"
        ],
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "iamPermissionsCompiledLevels": {
        "title": "Levels",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a single list of ALL permissions levels for all services that is used as input to the stack that manages the Turbot IAM permissions objects.",
        "parent": "#/policy/types/iamPermissionsCompiled",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "$ref": "#/definitions/awsLevelDefinitionList"
        }
      },
      "iamPermissionsCompiledLevelsApiBoundary": {
        "title": "API Boundary",
        "icon": "fal-calculator",
        "parent": "#/policy/types/iamPermissionsCompiled",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "iamPermissionsCompiledLockdownStatements": {
        "title": "Lockdown Statements",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a single list of ALL lockdown policy statements for all services that is used as input to the stack that manages the Turbot IAM permissions objects.",
        "parent": "#/policy/types/iamPermissionsCompiled",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "iamPermissionsCompiledAllowStatements": {
        "title": "Allow Statements",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a compiled list of ALL custom \"Allow\" policy statements for AWS API Gateway that is used as input to the stack that manages the Turbot IAM permissions objects.",
        "parent": "#/policy/types/iamPermissionsCompiled",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "iamTurbotSource": {
        "title": "Source",
        "icon": "fal-calculator",
        "description": "A HCL format configuration template to create Turbot permissions policies.",
        "parent": "#/policy/types/permissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        },
        "function": {
          "src": "functions/iam/iamTurbotSource",
          "bundle": "functions/iam/iamTurbotSource/dist/index.zip",
          "memory": 1024,
          "timeout": 120,
          "hash": "141620d28b"
        }
      },
      "accountPermissions": {
        "title": "Permissions",
        "icon": "fal-lock-alt",
        "parent": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "accountPermissionsLockdown": {
        "title": "Lockdown",
        "icon": "fal-lock-alt",
        "parent": "#/policy/types/accountPermissions",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "accountPermissionsLockdownBudget": {
        "title": "Budget",
        "icon": "fal-lock-alt",
        "description": "Configure lockdown policies to restrict APIs based on the\nbudget state (when the current spend exceeds a defined threshold).\n",
        "parent": "#/policy/types/accountPermissionsLockdown",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Restrict APIs per `Lockdown > Budget > Restricted APIs`"
          ],
          "default": "Skip"
        }
      },
      "accountPermissionsLockdownBudgetRestrictedApis": {
        "title": "Restricted APIs",
        "icon": "fal-lock-alt",
        "description": "A yaml object that contains a list of APIs that should\nbe restricted when the budget reaches a specific state.\n\nFor example, to restrict users from running and starting\nnew ec2 instances, starting RDS databases, or creating\nRedshift clusters when the budget state is Critical or\nhigher, enter:\n\n```\nCritical:\n    - ec2:RunInstance\n    - ec2:StartInstance\n    - rds:StartDB*\n    - redshift:createcluster\n```\n",
        "parent": "#/policy/types/accountPermissionsLockdownBudget",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "#/definitions/restrictedApisBudgetStateApis"
        }
      },
      "iamEnabled": {
        "title": "Enabled",
        "icon": "fal-traffic-light-go",
        "description": "Enabled IAM.",
        "parent": "#/resource/types/iam",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Enabled: Metadata Only",
            "Disabled"
          ],
          "example": [
            "Enabled"
          ],
          "default": "Disabled"
        }
      },
      "iamApiEnabled": {
        "title": "API Enabled",
        "icon": "fal-lock-alt",
        "description": "Configure whether the AWS S3 API is enabled.\n\n**Note:** Disabling the service disables the API for ALL users\nand roles, and Turbot will have no access to the API.\n",
        "parent": "#/resource/types/iam",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "Enabled if AWS > IAM > Enabled"
          ],
          "default": "Enabled"
        }
      },
      "iamPermissions": {
        "title": "Permissions",
        "icon": "fal-traffic-light-go",
        "description": "Configure whether permissions policies are in effect for AWS IAM. This setting does\nnot affect account level permissions (AWS/Admin, AWS/Owner, etc).\n\n**Note:** The behavior of this policy depends on the value of `AWS > Permissions`.\n",
        "parent": "#/resource/types/iam",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "Enabled if AWS > IAM > Enabled & AWS > IAM > API Enabled"
          ],
          "example": [
            "Enabled"
          ],
          "default": "Enabled if AWS > IAM > Enabled & AWS > IAM > API Enabled"
        }
      },
      "iamPermissionsLockdown": {
        "title": "Lockdown",
        "icon": "fal-lock-alt",
        "parent": "#/policy/types/iamPermissions",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "iamPermissionsLockdownApiBoundary": {
        "title": "API Boundary",
        "description": "Configure whether the AWS IAM API is enabled for all\nusers and roles in turbot-managed boundary policies.\n\n**Note:** Disabling the service disables the API for ALL users\nand roles, and Turbot will have no access to the API.\n",
        "icon": "fal-tachometer-alt-average",
        "parent": "#/policy/types/iamPermissionsLockdown",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled if AWS > IAM > API Enabled"
          ],
          "example": [
            "Enabled if AWS > IAM > API Enabled"
          ],
          "default": "Enabled if AWS > IAM > API Enabled"
        }
      },
      "iamPermissionsLevels": {
        "title": "Levels",
        "icon": "fal-layer-group",
        "description": "Define the permissions levels that can be used to grant access to an AWS account.\nPermissions levels defined will appear in the UI to assign access to Turbot users.\nThis policy provides a default for `Permissions > Levels` in each service,\nhowever you can explicitly override the setting for each service if desired\n",
        "parent": "#/policy/types/iamPermissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "Metadata",
              "ReadOnly",
              "Operator",
              "Admin",
              "Owner"
            ]
          }
        },
        "defaultTemplate": "{% if $.availableLevels.items[0].value | length == 0 %} [] {% endif %}{% for item in $.availableLevels.items[0].value %}- {{ item }}\n{% endfor %}",
        "defaultTemplateInput": [
          "{\n  item: account {\n    turbot {\n      id\n    }\n  }\n}\n",
          "{\n  availableLevels: policyValues(filter:\"policyTypeLevel:self resourceId:{{ $.item.turbot.id }} policyTypeId:'tmod:@turbot/aws-iam#/policy/types/permissionsLevelsDefault'\") {\n    items {\n      value\n    }\n  }\n}\n"
        ]
      },
      "iamPermissionsLevelsModifiers": {
        "title": "Modifiers",
        "icon": "fal-user-edit",
        "description": "A map of AWS API to Turbot Permission Level used to customize Turbot's standard permissions.\nYou can add, remove or redefine the mapping of AWS API operations to Turbot permissions levels here.\n\n**Note:** Modifiers are cumulative - if you add a permission to the Metadata level, it is also\nadded to ReadOnly, Operator and Admin. Modifier policies set here apply ONLY to the AWS level\"\n\n```\nexample:\n  - \"glacier:createvault\": admin\n  - \"glacier:ListVaults\": metadata\n  - \"s3:DeleteBucket\": none\n```\n",
        "parent": "#/policy/types/iamPermissionsLevels",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "aws-iam#/definitions/awsModifierList"
        }
      },
      "iamPermissionsLevelsServiceUserAdministration": {
        "title": "Service User Administration",
        "icon": "fal-user-shield",
        "description": "Determines which Turbot permissions level can manage Service User Administration.",
        "parent": "#/policy/types/iamPermissionsLevels",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "None",
            "Owner"
          ],
          "example": [
            "None"
          ],
          "default": "None"
        }
      },
      "iamPermissionsLevelsServiceUserAccessKeyAdministration": {
        "title": "Service User Access Key Administration",
        "icon": "fal-user-shield",
        "description": "Determines which Turbot permissions level can manage Service User Access Key Administration.",
        "parent": "#/policy/types/iamPermissionsLevels",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "None",
            "Owner"
          ],
          "example": [
            "None"
          ],
          "default": "None"
        }
      },
      "iamPermissionsLevelsServiceUserPasswordAdministration": {
        "title": "Service User Password Administration",
        "icon": "fal-user-shield",
        "description": "Determines which Turbot permissions level can manage Service User Password Administration.",
        "parent": "#/policy/types/iamPermissionsLevels",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "type": "string",
          "enum": [
            "None",
            "Owner"
          ],
          "example": [
            "None"
          ],
          "default": "None"
        }
      },
      "awsCompiledServicePermissions": {
        "title": "@turbot/aws-iam",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a compiled list of ALL permissions\nfor AWS IAM that is used as input to the control that manages the IAM stack.\n",
        "parent": "aws-iam#/policy/types/iamPermissionsCompiledServicePermissions",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "$ref": "aws-iam#/definitions/awsRightDefinitionList"
        }
      },
      "awsCompiledLockdownStatements": {
        "title": "@turbot/aws-iam",
        "icon": "fal-traffic-light-go",
        "description": "A calculated policy that Turbot uses to create a compiled list of ALL\nlockdown policy statements for AWS IAM that is used as input to the stack\nthat manages the Turbot IAM permissions objects.\n",
        "parent": "aws-iam#/policy/types/iamPermissionsCompiledLockdownStatements",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "awsLevelsCompiled": {
        "title": "@turbot/aws-iam",
        "description": "A calculated policy that Turbot uses to create a compiled list of\nALL permissions for AWS IAM that is used as input to the stack that\nmanages the Turbot IAM permissions objects.\n",
        "icon": "fal-calculator",
        "parent": "aws-iam#/policy/types/iamPermissionsCompiledLevels",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "$ref": "aws-iam#/definitions/awsLevelDefinitionList"
        }
      },
      "awsCompiledApiBoundary": {
        "title": "@turbot/aws-iam",
        "description": "A read-only policy generated by Turbot that lists the APIs that\nshould be added to the turbot-managed (hard) boundary policy,\nthereby enabling them to be assigned to users and roles.\n\nThis value will change depending on the value of the value of the\n`AWS > IAM > Permissions > Lockdown > API Boundary` policy\n",
        "icon": "fal-border-outer",
        "parent": "#/policy/types/iamPermissionsCompiledLevelsApiBoundary",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "iamStack": {
        "title": "Stack",
        "icon": "fal-layer-group",
        "parent": "#/resource/types/iam",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure a custom stack on AWS, per the custom `Stack > Source`.\n\nA Turbot `Stack` is a set of resources configured by Turbot, as specified\nvia Terraform source.  Stacks are responsible for the creation and deletion\nof multiple resources. Once created, stack resources are responsible for\nconfiguring themselves from the stack source via their `Configured` control.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Configured",
            "Enforce: Configured"
          ],
          "default": "Skip"
        }
      },
      "iamStackSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/iamStack",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "The Terraform HCL source used to configure this stack.\n\nA Turbot `Stack` is a set of resources configured by Turbot, as specified\nvia Terraform source.  Stacks are responsible for the creation and deletion\nof multiple resources. Once created, stack resources are responsible for\nconfiguring themselves from the stack source via their `Configured` control.\n",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "iamStackVariables": {
        "title": "Variables",
        "icon": "fal-pen",
        "parent": "#/policy/types/iamStack",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Terraform variables in Terraform HCL that will be used as\ninputs to the stack as a [.tfvars file](https://www.terraform.io/docs/configuration/variables.html#variable-definitions-tfvars-files).\n\nA Turbot `Stack` is a set of resources configured by Turbot,\nas specified  via Terraform source.  Stacks are responsible\nfor the creation and deletion of multiple resources. Once created,\nstack resources are responsible for configuring themselves from\nthe stack source via their `Configured` control.\n",
        "schema": {
          "type": "string",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "iamStackSecretVariables": {
        "title": "Secret Variables",
        "icon": "fal-pen",
        "parent": "#/policy/types/iamStack",
        "category": "turbot#/control/categories/configured",
        "secret": true,
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Terraform secret variables in Terraform HCL that will be used as\ninputs to the stack as a [.tfvars file](https://www.terraform.io/docs/configuration/variables.html#variable-definitions-tfvars-files).\n\nA Turbot `Stack` is a set of resources configured by Turbot,\nas specified  via Terraform source.  Stacks are responsible\nfor the creation and deletion of multiple resources. Once created,\nstack resources are responsible for configuring themselves from\nthe stack source via their `Configured` control.\n",
        "schema": {
          "type": "string",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "iamStackTerraformVersion": {
        "title": "Terraform Version",
        "icon": "fal-bring-forward",
        "parent": "#/policy/types/iamStack",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "The Version of Terraform to use for this stack.\nSpecify an [npm-style semver](https://docs.npmjs.com/misc/semver) string to\ndetermine which version of the Terraform container\nTurbot will use to run this stack.\n\nA Turbot `Stack` is a set of resources configured by Turbot,\nas specified  via Terraform source.  Stacks are responsible\nfor the creation and deletion of multiple resources. Once created,\nstack resources are responsible for configuring themselves from\nthe stack source via their `Configured` control.\n",
        "schema": {
          "type": "string"
        },
        "defaultTemplate": "{% if $.terraformVersion %}\"{{$.terraformVersion}}\"{% else %}\"\"{% endif %}",
        "defaultTemplateInput": "{\n  terraformVersion: policy(uri:\"tmod:@turbot/turbot#/policy/types/stackTerraformVersion\")\n}\n"
      },
      "iamTagsTemplate": {
        "title": "Tags Template [Default]",
        "icon": "fal-tags",
        "description": "A template used to generate the keys and values for AWS IAM resources.\n\nBy default, all IAM resource Tags > Template policies will use this value.\n",
        "parent": "#/resource/types/iam",
        "targets": [
          "aws#/resource/types/account"
        ],
        "category": "turbot#/control/categories/resourceTags",
        "schema": {
          "$ref": "aws#/definitions/tagsTemplateInput",
          "example": [
            {
              "foo": "bar",
              "environment": "prod"
            },
            [
              {
                "foo123": "bar"
              },
              {
                "environment": "dev"
              }
            ],
            [
              {
                "cost-center": "zz123"
              },
              {
                "delete-me": "undefined"
              }
            ]
          ]
        },
        "defaultTemplate": "{%- if $.defaultTags.value | length == 0 %} [] {%- elif $.defaultTags.value != undefined %}{{ $.defaultTags.value | dump | safe }}{%- else %}{% for item in $.defaultTags.value %}- {{ item }}{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultTags: policyValue(uri:\"tmod:@turbot/aws#/policy/types/defaultTagsTemplate\") {\n    value\n  }\n}\n"
      },
      "iamPolicyTrustedAccounts": {
        "title": "Trusted Accounts [Default]",
        "icon": "fal-handshake",
        "parent": "#/resource/types/iam",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "List of AWS Accounts that are trusted for access in the AWS IAM policy.\n\nThis policy is used by the Trusted Access\ncontrol to determine which members of type \"account\" are allowed\nto be granted access. You may use the '*' and '?' wildcard characters.\n\n```\nexample:\n  - \"013122550996\"\n  - \"560741234067\"\n```\n\n**Note**: Setting the policy to `Empty` array will remove all accounts.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[0-9]{12}|^\\*$"
          }
        },
        "defaultTemplate": "{% if $.trustedAccounts.value | length == 0 %}[]{% else %}{% for item in $.trustedAccounts.value %}- '{{ item }}'\n{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  trustedAccounts: policyValue(uri:\"tmod:@turbot/aws#/policy/types/trustedAccounts\") {\n    value\n  }\n}\n"
      },
      "iamPolicyTrustedServices": {
        "title": "Trusted Services [Default]",
        "icon": "fal-user-cog",
        "parent": "#/resource/types/iam",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "List of AWS Services that are trusted for access in the AWS IAM policy.\n\nThis policy is used by the Trusted Access\ncontrol to determine which members of type \"service\" are allowed\nto be granted access. You may use the '*' and '?' wildcard characters.\n\n```\nexample:\n  - \"sns.amazonaws.com\"\n  - \"ec2.amazonaws.com\"\n```\n\n**Note**: Setting the policy to `Empty` array will remove all services.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(?:^\\S*\\.amazonaws\\.com$|^\\*$)"
          }
        },
        "defaultTemplate": "{% if $.trustedServices.value | length == 0 %}[]{% else %}{% for item in $.trustedServices.value %}- '{{ item }}'\n{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  trustedServices: policyValue(uri:\"tmod:@turbot/aws#/policy/types/trustedServices\") {\n    value\n  }\n}\n"
      },
      "iamPolicyTrustedIdentityProviders": {
        "title": "Trusted Identity Providers [Default]",
        "icon": "fal-hands-helping",
        "parent": "#/resource/types/iam",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "List of AWS Identity Providers that are trusted for access in the AWS IAM policy.\n\nThis policy is used by the Trusted Access\ncontrol to determine which members of type \"identity provider\" are allowed\nto be granted access. You may use the '*' and '?' wildcard characters.\n\n```\nexample:\n  - \"www.amazon.com\"\n  - \"graph.facebook.com\"\n```\n\n**Note**: Setting the policy to `Empty` array will remove all identity providers.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{% if $.trustedIdentityProviders.value | length == 0 %}[]{% else %}{% for item in $.trustedIdentityProviders.value %}- '{{ item }}'\n{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  trustedIdentityProviders: policyValue(uri:\"tmod:@turbot/aws#/policy/types/trustedIdentityProviders\") {\n    value\n  }\n}\n"
      },
      "iamPolicyTrustedOrganizations": {
        "title": "Trusted Organizations [Default]",
        "icon": "fal-hands-helping",
        "parent": "#/resource/types/iam",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "List of AWS Organizations that are trusted for access in the AWS IAM policy.\n\nThis policy is used by the Trusted Access\ncontrol to determine which members of type \"organization\" are allowed\nto be granted access. You may use the '*' and '?' wildcard characters.\n\n```\nexample:\n  - \"o-333333333\"\n  - \"o-c3a5y4wd52\"\n```\n\n**Note**: `Trusted Access > Organization Restrictions` are ONLY\napplied to AWS principals.  Services and Federated principals do\nNOT contain the `aws:PrincipalOrgId` condition key, and thus\ncannot be validated against the Organization.\n\nSetting the policy to `Empty` array will remove all organizations.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(?:^o-[a-z0-9]{10,32}$|^\\*$)"
          }
        },
        "defaultTemplate": "{% if $.trustedOrganizations.value | length == 0 %}[]{% else %}{% for item in $.trustedOrganizations.value %}- '{{ item }}'\n{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  trustedOrganizations: policyValue(uri:\"tmod:@turbot/aws#/policy/types/trustedOrganizations\") {\n    value\n  }\n}\n"
      },
      "iamPolicyActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Configure the behavior of the\n[Active](https://turbot.cloud/docs/concepts/guardrails/active) control\nfor the AWS IAM policy, based on the `AWS > IAM > Policy > Active > *` policies.\n\nThe [Active](https://turbot.cloud/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Policy > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active. Note the contrast with Approved, where if the\nresource appears to be Unapproved for any reason it will be considered\nUnapproved.\n",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "iamPolicyActiveAge": {
        "title": "Age",
        "icon": "fab-creative-commons-sampling",
        "description": "The age after which the AWS IAM policy is no longer considered active. If a create time\nis unavailable, the time Turbot discovered the resource is used.\n\nThe [Active](https://turbot.cloud/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Policy > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active. Note the contrast with Approved, where if the\nresource appears to be Unapproved for any reason it will be considered\nUnapproved.\n",
        "parent": "#/policy/types/iamPolicyActive",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force inactive if age > 1 day",
            "Force inactive if age > 3 days",
            "Force inactive if age > 7 days",
            "Force inactive if age > 14 days",
            "Force inactive if age > 30 days",
            "Force inactive if age > 60 days",
            "Force inactive if age > 90 days",
            "Force inactive if age > 180 days",
            "Force inactive if age > 365 days"
          ],
          "example": [
            "Force inactive if age > 90 days"
          ],
          "default": "Skip"
        }
      },
      "iamPolicyActiveLastModified": {
        "title": "Last Modified",
        "icon": "fab-creative-commons-sampling",
        "description": "The number of days since the AWS IAM policy was last modified before it is considered\ninactive.\n\nThe [Active](https://turbot.cloud/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Policy > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active. Note the contrast with Approved, where if the\nresource appears to be Unapproved for any reason it will be considered\nUnapproved.\n",
        "parent": "#/policy/types/iamPolicyActive",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "iamPolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Determine the action to take when an AWS IAM policy is not approved based on AWS > IAM > Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/resource/types/iamPolicy",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "iamPolicyApprovedTurbot": {
        "title": "Turbot",
        "icon": "fal-check-double",
        "description": "Determine whether IAM Policies that are defined and configured by Turbot (for example, from the Permissions stack or the Service Roles stack) will always be approved.\n",
        "parent": "#/policy/types/iamPolicyApproved",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force Approved for Turbot Policies"
          ],
          "default": "Force Approved for Turbot Policies"
        }
      },
      "iamPolicyApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "description": "Determine whether the AWS IAM policy is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM policy is not approved, it will be subject to the action specified in the AWS > IAM > Policy > Approved policy.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/policy/types/iamPolicyApproved",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "iamPolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM policy(s) into the CMDB.",
        "parent": "#/resource/types/iamPolicy",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "iamPolicyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/iamPolicy"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "iamPolicyConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/iamPolicyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/iamPolicy"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "iamPolicyConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/iamPolicyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/iamPolicy"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "statements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/other"
      },
      "statementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure IAM Policy Statements checking. This policy defines whether to verify the\npolicy statements are approved, as well as the subsequent action to take on unapproved\nstatements.\n\nRules for all Approved policies will be compiled in Approved > Compiled Rules\nand then evaluated. If set to \"Enforce: Delete unapproved\", any unapproved statements\nwill be removed from the policy.\n",
        "parent": "#/policy/types/statements",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete Unapproved"
          ],
          "default": "Skip"
        }
      },
      "statementsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An Object Control List (OCL) with a list of filter rules to approve or reject IAM policy statements. Note that the Approved control does not operate directly from this policy, but from the Approved > Compiled Rules. The rules are processed in order, and any built-in Turbot rules will appear first in the list of compiled rules.\nThis is the last statement, so all unmatched items will be (approved/rejected) by this statement.\n\n_Note_: Removing APPROVE * will reject all the unmatched rules.\n",
        "parent": "#/policy/types/statementsApproved",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve unmatched rules\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "statementsApprovedTurbot": {
        "title": "Turbot",
        "icon": "fal-clipboard-list-check",
        "description": "If Enabled, All IAM Policy statements for policies that are defined and configured by Turbot (for example, from the permissions stack of the Service Roles stack) will be approved.\n",
        "parent": "#/policy/types/statementsApproved",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force Approved for Turbot Policies"
          ],
          "default": "Force Approved for Turbot Policies"
        }
      },
      "statementsApprovedAdminAccess": {
        "title": "Administrator Access",
        "icon": "fal-user-lock",
        "description": "If set to \"Disabled\", IAM Policy statements that allow any action ('*') on any resource ('*') will be unapproved.\n",
        "parent": "#/policy/types/statementsApproved",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled: Allow Administrator Access ('*:*') policies",
            "Disabled: Disallow Administrator Access ('*:*') policies"
          ],
          "default": "Enabled: Allow Administrator Access ('*:*') policies"
        }
      },
      "statementsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "readOnly": true,
        "icon": "fal-clipboard-list-check",
        "description": "A read-only Object Control List (OCL) to approved or reject policy statements for an IAM policy.  This policy is generated by Turbot based on the \"Approved > *\" policies.\n",
        "parent": "#/policy/types/statementsApproved",
        "targets": "#/resource/types/iamPolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string"
        }
      },
      "mfaVirtualActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Check if the AWS IAM Mfavirtual is active based on AWS > IAM > Mfavirtual > Active > * policies.",
        "parent": "#/resource/types/mfaVirtual",
        "targets": "#/resource/types/mfaVirtual",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "mfaVirtualActiveLastModified": {
        "title": "Last Modified",
        "description": "Check if AWS mfaVirtual is active based on when it was last modified.",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/mfaVirtualActive",
        "targets": "#/resource/types/mfaVirtual",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "mfaVirtualCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM Multi Factor Authentication(MFA) Virtual(s) into the CMDB.",
        "parent": "#/resource/types/mfaVirtual",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "roleActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Determine the action to take when an AWS IAM role, based on the `AWS > IAM > Role > Active > *` policies.\n\nThe control determines whether the resource is in active use, and if not,\nhas the ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Role > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved for any reason it will be considered\nUnapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "roleActiveLastModified": {
        "title": "Last Modified",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/roleActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "The number of days since the AWS IAM role\nwas last modified before it is considered inactive.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Role > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "roleActiveAge": {
        "title": "Age",
        "icon": "fab-creative-commons-sampling",
        "category": "turbot#/control/categories/resourceActive",
        "parent": "#/policy/types/roleActive",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "The age after which the AWS IAM role\nis no longer considered active. If a create time is unavailable, the time Turbot discovered the resource is used.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > Role > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force inactive if age > 1 day",
            "Force inactive if age > 3 days",
            "Force inactive if age > 7 days",
            "Force inactive if age > 14 days",
            "Force inactive if age > 30 days",
            "Force inactive if age > 60 days",
            "Force inactive if age > 90 days",
            "Force inactive if age > 180 days",
            "Force inactive if age > 365 days"
          ],
          "example": [
            "Force inactive if age > 90 days"
          ],
          "default": "Skip"
        }
      },
      "roleApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Determine the action to take when an AWS IAM role is not approved based on `AWS > IAM > Role > Approved > *` policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nFor any enforcement actions that specify `if new`, e.g., `Enforce: Delete unapproved if new`, this control will only take the enforcement actions for resources created within the last 60 minutes.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "roleApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "parent": "#/policy/types/roleApproved",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Determine whether the AWS IAM role is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM role is not approved, it will be subject to the action specified in the `AWS > IAM > Role > Approved` policy.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "roleApprovedTurbot": {
        "title": "Turbot",
        "icon": "fal-check-double",
        "description": "Determine whether IAM Policies that are defined and configured by Turbot (for example, from the Permissions stack or the Service Roles stack) will always be approved.\n",
        "parent": "#/policy/types/roleApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force Approved for Turbot Role"
          ],
          "default": "Force Approved for Turbot Role"
        }
      },
      "rolePolicyAttachmentsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure AWS IAM role policy attachments `Approved` checking. This policy\ndefines whether to verify the IAM role attached policies are approved\n(per `Approved > Compiled Rules`), as well as the subsequent action to\ntake on unapproved items.\nIf set to \"Enforce: Delete unapproved\", any unapproved attached policy\nwill be removed.\n",
        "parent": "#/policy/types/rolePolicyAttached",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "rolePolicyAttachmentsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An Object Control List (OCL) with a list of filter rules\nto approve or reject policies.\nNote that the Approved control does not operate directly from this policy,\nbut from the `Approved > Compiled Rules`.  The rules are processed in order,\nand any built-in Turbot rules will appear first in the list of compiled rules.\n",
        "parent": "#/policy/types/rolePolicyAttachmentsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve rules\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "rolePolicyAttachmentsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "icon": "fal-clipboard-list-check",
        "description": "A read-only Object Control List (OCL) to add or\nremove IAM Policy from a IAM role.\nThis policy is generated by Turbot.\n",
        "parent": "#/policy/types/rolePolicyAttachmentsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "readOnly": true,
        "schema": {
          "type": "string"
        }
      },
      "roleBoundary": {
        "title": "Boundary",
        "icon": "fal-shield",
        "description": "Configure which boundary policy to apply to the IAM role .\nThis must be the name of an existing AWS IAM Boundary policy.\nAWS Boundary Policies are used to enforce Turbot Guardrails for\nenabling/disabling API Services and Regions.\n\nIf set to `Check or Enforce per AWS > Turbot > Permissions`,\nthe boundary will be enforced if Turbot > Permissions are enforced, checked\nif Turbot > Permissions are  checked, and skipped if Turbot Permissions\nare none or skip\n",
        "parent": "#/resource/types/role",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: No Boundary",
            "Check: Boundary > Policy",
            "Enforce: No Boundary",
            "Enforce: Boundary > Policy",
            "Check or Enforce per `AWS > Turbot > Permissions`"
          ],
          "default": "Skip"
        }
      },
      "roleBoundaryPolicy": {
        "title": "Policy",
        "icon": "fal-pen",
        "description": "Configure which boundary policy to apply to the IAM role.\nThis must be the name of an existing AWS IAM Boundary policy.\nAWS Boundary Policies are used to enforce Turbot Guardrails for\nenabling/disabling API Services and Regions.\n",
        "parent": "#/policy/types/roleBoundary",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/other",
        "schema": {
          "$ref": "#/definitions/boundaryPermissionPolicy"
        },
        "defaultTemplate": "{{$.prefix}}boundary",
        "defaultTemplateInput": "{\n  prefix: policy(uri:\"#/policy/types/turbotUserNamePrefix\")\n}\n"
      },
      "roleCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure whether to record and synchronize details for the AWS IAM role into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\nAll policies and controls in Turbot are based around the resource, so usually the CMDB policy is set to **\"Enforce: Enabled\"**.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled",
            "Enforce: Disabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "roleConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "roleConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/roleConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "roleConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/roleConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "rolePolicyAttached": {
        "title": "Policy Attachments",
        "icon": "fal-check-double",
        "parent": "#/resource/types/role",
        "targets": [],
        "category": "turbot#/control/categories/resourceRequired"
      },
      "rolePolicyRequired": {
        "title": "Required",
        "icon": "fal-check-double",
        "description": "Configure whether required policies should be attached to a role.\nIf set to Enforce,  policies in Required > Items will be attached to the role.\n",
        "parent": "#/policy/types/rolePolicyAttached",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Required > Items",
            "Enforce: Required > Items"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "rolePolicyRequiredLockdown": {
        "title": "Turbot Lockdown",
        "icon": "fal-lock",
        "description": "Configure whether Role has Turbot Lockdown Policies attached.\n",
        "parent": "#/policy/types/rolePolicyRequired",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": [
            "Enabled"
          ]
        }
      },
      "rolePolicyRequiredItems": {
        "title": "Items",
        "icon": "fal-list-ul",
        "description": "A list of IAM policies that must be attached to a role.",
        "parent": "#/policy/types/rolePolicyRequired",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[A-Za-z0-9_+=,.@-]+$"
          },
          "default": []
        }
      },
      "rolePolicyRequiredCompiledItems": {
        "title": "Compiled Items",
        "icon": "fal-clipboard-list-check",
        "description": "A list of IAM policies that must be attached to a role.\nThis is a read-only policy that is generated by Turbot\n",
        "parent": "#/policy/types/rolePolicyRequired",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceRequired",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "roleTags": {
        "title": "Tags",
        "icon": "fal-tags",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceTags",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "Determine the action to take when an AWS IAM role tags are not updated based on the `AWS > IAM > Role > Tags > *` policies.\n\nThe control ensure AWS IAM role tags include tags defined in `AWS > IAM > Role > Tags > Template`.\n\nTags not defined in Role Tags Template will not be modified or deleted. Setting a tag value to `undefined` will result in the tag being deleted.\n\nSee [Tags](https://turbot.com/v5/docs/concepts/guardrails/tagging) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Tags are correct",
            "Enforce: Set tags"
          ],
          "example": [
            "Check: Tags are correct"
          ],
          "default": "Skip"
        }
      },
      "roleTagsTemplate": {
        "title": "Template",
        "icon": "fal-tags",
        "parent": "#/policy/types/roleTags",
        "category": "turbot#/control/categories/resourceTags",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "The template is used to generate the keys and values for AWS IAM role.\n\nTags not defined in Role Tags Template will not be modified or deleted. Setting a tag value to `undefined` will result in the tag being deleted.\n\nSee [Tags](https://turbot.com/v5/docs/concepts/guardrails/tagging) for more information.\n",
        "schema": {
          "$ref": "aws#/definitions/tagsTemplateInput",
          "example": [
            {
              "foo": "bar",
              "environment": "prod"
            },
            [
              {
                "foo123": "bar"
              },
              {
                "environment": "dev"
              }
            ],
            [
              {
                "cost-center": "zz123"
              },
              {
                "delete-me": "undefined"
              }
            ]
          ]
        },
        "defaultTemplate": "{%- if $.defaultTags.value | length == 0 %} [] {%- elif $.defaultTags.value != undefined %}{{ $.defaultTags.value | dump | safe }}{%- else %}{% for item in $.defaultTags.value %}- {{ item }}{% endfor %}{% endif %}",
        "defaultTemplateInput": [
          "{\n  account {\n    turbot {\n      id\n    }\n  }\n}\n",
          "{\n  defaultTags: policyValue(uri:\"tmod:@turbot/aws-iam#/policy/types/iamTagsTemplate\" resourceId: \"{{ $.account.turbot.id }}\") {\n    value\n  }\n}\n"
        ]
      },
      "rolePolicy": {
        "title": "Policy",
        "icon": "fal-exchange-alt",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/securityTrustedAccess"
      },
      "rolePolicyTrustedAccess": {
        "title": "Trusted Access",
        "icon": "fal-shield-alt",
        "parent": "#/policy/types/rolePolicy",
        "targets": [
          "#/resource/types/role"
        ],
        "category": "turbot#/control/categories/securityTrustedAccess",
        "description": "Take an action when AWS IAM role policy is not trusted based on the\n`AWS > IAM > Role > Policy > Trusted Access > *` policies.\n\nThe Trusted Access control evaluates the role policy against the list of allowed\nmembers in each of the Trusted Access sub-policies (Trusted Access > Accounts,\nTrusted Access > Services etc.), this control raises an alarm and takes the\ndefined enforcement action.\n\nThe account that owns the role will always be trusted, even if its account ID is\nnot included in the Trusted Accounts policy.\n\nIf set to `Enforce: Revoke untrusted access`, access to non-trusted\nmembers will be removed.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Trusted Access",
            "Enforce: Revoke untrusted access"
          ],
          "default": "Skip"
        }
      },
      "rolePolicyTrustedAccounts": {
        "title": "Accounts",
        "icon": "fab-aws",
        "parent": "#/policy/types/rolePolicyTrustedAccess",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "List of AWS Account IDs that are trusted for cross-account access in the\nAWS IAM role policy.\n\nNote that `Trusted Access > Accounts` and `Trusted Access >\nOrganizations` are evaluated independently. To have access, an AWS\nprincipal must be allowed in `Trusted Access > Accounts` AND be a\nmember of an Organization that is allowed in `Trusted Access >\nOrganizations`.\n\n```\nexample:\n  - \"123456789012\"\n```\n**Note**: Setting the policy to an `Empty` array will remove all accounts.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(?:^\\d{12}$|^\\*$)"
          }
        },
        "defaultTemplate": "{% if $.accounts | length == 0 %}[]{% endif %}{% for item in $.accounts %}- '{{ item }}'\n{% endfor %}",
        "defaultTemplateInput": "{\n  accounts: policy(uri: \"tmod:@turbot/aws-iam#/policy/types/iamPolicyTrustedAccounts\")\n}\n"
      },
      "rolePolicyTrustedServices": {
        "title": "Services",
        "icon": "fal-user-cog",
        "parent": "#/policy/types/rolePolicyTrustedAccess",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "List of AWS Services that are trusted for access in the AWS IAM role policy.\n\n```\nexample:\n  - sns.amazonaws.com\n  - ec2.amazonaws.com\n```\n\n**Note**: Setting the policy to an `Empty` array will remove all services.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(?:^\\S*\\.amazonaws\\.com$|^\\*$)"
          }
        },
        "defaultTemplate": "{% if $.services | length == 0 %}[]{% endif %}{% for item in $.services %}- '{{ item }}'\n{% endfor %}",
        "defaultTemplateInput": "{\n  services: policy(uri: \"tmod:@turbot/aws-iam#/policy/types/iamPolicyTrustedServices\")\n}\n"
      },
      "rolePolicyTrustedIdentityProviders": {
        "title": "Identity Providers",
        "icon": "fal-id-card-alt",
        "parent": "#/policy/types/rolePolicyTrustedAccess",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "List of Identity Providers that are trusted for cross-account access in the\nAWS IAM role policy.\n\n```\nexample:\n  - www.google.com\n  - www.facebook.com\n```\n**Note**: Setting the policy to an `Empty` array will remove all identity providers.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{% if $.identityProviders | length == 0 %}[]{% endif %}{% for item in $.identityProviders %}- '{{ item }}'\n{% endfor %}",
        "defaultTemplateInput": "{\n  identityProviders: policy(uri: \"tmod:@turbot/aws-iam#/policy/types/iamPolicyTrustedIdentityProviders\")\n}\n"
      },
      "rolePolicyTrustedOrganizations": {
        "title": "Organization Restrictions",
        "icon": "fal-sitemap",
        "parent": "#/policy/types/rolePolicyTrustedAccess",
        "category": "turbot#/control/categories/securityTrustedAccess",
        "targets": [
          "#/resource/types/role"
        ],
        "description": "List of AWS Organization IDs that are trusted for cross-account access in\nthe AWS IAM role policy, or '*' to skip the Organization Restriction.\n\nNote that `Trusted Access > Accounts` and `Trusted Access >\nOrganizations` are evaluated independently. To have access, an AWS\nprincipal must be allowed in `Trusted Access > Accounts` AND be a\nmember of an Organization that is allowed in `Trusted Access >\nOrganizations`.\n\n**Note**: `Trusted Access > Organization Restrictions` are ONLY\napplied to AWS principals.  Services and Federated principals do\nNOT contain the `aws:PrincipalOrgId` condition key, and thus\ncannot be validated against the Organization.\n\n```\nexample:\n  - \"o-333333333\"\n  - \"o-c3a5y4wd52\"\n```\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(?:^o-[a-z0-9]{10,32}$|^\\*$)"
          }
        },
        "defaultTemplate": "{% if $.organizations | length == 0 %}[]{% endif %}{% for item in $.organizations %}- '{{ item }}'\n{% endfor %}",
        "defaultTemplateInput": "{\n  organizations: policy(uri: \"tmod:@turbot/aws-iam#/policy/types/iamPolicyTrustedOrganizations\")\n}\n"
      },
      "trustRelationshipStatements": {
        "title": "Trust Relationship Statements [Deprecated]",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved"
      },
      "trustRelationshipStatementsApproved": {
        "title": "Approved [Deprecated]",
        "icon": "fal-shield-alt",
        "description": "Configure IAM Role trust relationship policy statements checking. This policy defines whether\nto verify the role trust relationship policy statements are approved, as well as the\nsubsequent action to take on unapproved statements. Rules for all `Approved`\npolicies will be compiled in `Approved > Compiled Rules` and then\nevaluated.\nIf set to `Enforce: Delete unapproved`, any unapproved rules will be\nrevoked from the security group.\n\n**Note:** This policy has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` policy.\n",
        "parent": "#/policy/types/trustRelationshipStatements",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "trustRelationshipStatementsApprovedRules": {
        "title": "Rules [Deprecated]",
        "icon": "fal-clipboard-list-check",
        "description": "An Object Control List (OCL) with a list of filter rules\nto approve or reject role trust policy statements.\nNote that the Approved control does not operate directly from this policy,\nbut from the `Approved > Compiled Rules`. The rules are processed in order,\nand any built-in Turbot rules will appear first in the list of compiled\nrules.\n\n**Note:** This policy has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` policy.\n",
        "parent": "#/policy/types/trustRelationshipStatementsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve unmatched rules\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "trustRelationshipStatementsApprovedTrustedAwsAccounts": {
        "title": "Trusted Accounts [Deprecated]",
        "icon": "fal-shield-alt",
        "description": "Defines the AWS Accounts that can be allowed to assume the role.\nExamples:\n  - \"arn:aws:iam::560741234067:root\"\n  - 492552618977\n  - 123456789012\n\n**Note:** This policy has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` policy.\n",
        "parent": "#/policy/types/trustRelationshipStatementsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^arn:aws(-us-gov|-cn)?:iam::[0-9]{1,12}:[A-Za-z0-9_+=,.@-]{1,64}$"
              },
              {
                "type": "string",
                "pattern": "^cloudfront$"
              },
              {
                "type": "integer"
              },
              {
                "$ref": "aws#/definitions/accountId"
              }
            ]
          }
        },
        "defaultTemplate": "- {{ $.account.Id }}",
        "defaultTemplateInput": "{\n  account {\n    Id\n  }\n}\n"
      },
      "trustRelationshipStatementsApprovedTrustedAwsServices": {
        "title": "Trusted Services [Deprecated]",
        "icon": "fal-list",
        "description": "Defines the AWS Services that can be allowed to assume the role.\nExamples:\n  - cloudtrail.amazonaws.com\n  - cloudwatch.amazonaws.com\n\n**Note:** This policy has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` policy.\n",
        "parent": "#/policy/types/trustRelationshipStatementsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "(^\\S+\\.amazonaws\\.com$)"
          },
          "default": []
        }
      },
      "trustRelationshipStatementsApprovedTrustedIdentityProvider": {
        "title": "Trusted Identity Providers [Deprecated]",
        "icon": "fal-list",
        "description": "Defines the Identity Providers that can be allowed to assume the role.\nExamples:\n  - www.amazon.com\n  - arn:aws:iam::013122550996:saml-provider/idp1\n\n**Note:** This policy has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` policy.\n",
        "parent": "#/policy/types/trustRelationshipStatementsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      },
      "trustRelationshipStatementsApprovedCompiledRules": {
        "title": "Compiled Rules [Deprecated]",
        "icon": "fal-clipboard-list-check",
        "readOnly": true,
        "description": "A read-only Object Control List (OCL) to approved or reject role trust policy statements.\nThis policy is generated by Turbot.\n\n**Note:** This policy has been deprecated in v5.8.0 and will be removed in v6.0.0. It has been replaced by the `AWS > IAM > Role > Policy > Trusted Access` policy.\n",
        "parent": "#/policy/types/trustRelationshipStatementsApproved",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string"
        }
      },
      "roleUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/role",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure the number of AWS IAM roles that can be used for this account and the current consumption against the limit.\n\nYou can configure the behavior of the control with this  `AWS > IAM > Role > Usage` policy.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Usage <= 85% of Limit",
            "Check: Usage <= 100% of Limit"
          ],
          "example": [
            "Check: Usage <= 85% of Limit"
          ],
          "default": "Skip"
        }
      },
      "roleUsageLimit": {
        "title": "Limit",
        "icon": "fal-hand-holding-usd",
        "parent": "#/policy/types/roleUsage",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Maximum number of items that can be created for this account.",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 1000
        }
      },
      "rolePolicyAttachmentActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Check if the AWS IAM Rolepolicyattachment is active based on AWS > IAM > Rolepolicyattachment > Active > * policies.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "rolePolicyAttachmentActiveLastModified": {
        "title": "Last Modified",
        "description": "Check if AWS rolePolicyAttachment is active based on when it was last modified.",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/rolePolicyAttachmentActive",
        "targets": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "rolePolicyAttachmentCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM role policy attachment(s) into the CMDB.",
        "parent": "#/resource/types/rolePolicyAttachment",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "rolePolicyAttachmentConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/rolePolicyAttachment",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/rolePolicyAttachment"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "rolePolicyAttachmentConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/rolePolicyAttachmentConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/rolePolicyAttachment"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "rolePolicyAttachmentConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/rolePolicyAttachmentConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/rolePolicyAttachment"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "rootCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM rootUser(s) into the CMDB.",
        "parent": "#/resource/types/root",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "rootConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/root",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/root"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "rootConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/rootConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/root"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "rootConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/rootConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/root"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "userActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Determine the action to take when an AWS IAM user, based on the `AWS > IAM > User > Active > *` policies.\n\nThe control determines whether the resource is in active use, and if not,\nhas the ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > User > Active > *`), raises an alarm, and takes the defined enforcement\naction. Each Active sub-policy can calculate a status of active, inactive\nor skipped. Generally, if the resource appears to be Active for any reason\nit will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved for any reason it will be considered\nUnapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "userActiveLastModified": {
        "title": "Last Modified",
        "icon": "fab-creative-commons-sampling",
        "parent": "#/policy/types/userActive",
        "category": "turbot#/control/categories/resourceActive",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "The number of days since the AWS IAM user\nwas last modified before it is considered inactive.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > User > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "userActiveAge": {
        "title": "Age",
        "icon": "fab-creative-commons-sampling",
        "category": "turbot#/control/categories/resourceActive",
        "parent": "#/policy/types/userActive",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "The age after which the AWS IAM user\nis no longer considered active. If a create time is unavailable, the time Turbot discovered the resource is used.\n\nThe [Active](https://turbot.com/v5/docs/concepts/guardrails/active)\ncontrol determines whether the resource is in active use, and if not, has\nthe ability to delete / cleanup the resource. When running an automated\ncompliance environment, it's common to end up with a wide range of alarms\nthat are difficult and time consuming to clear. The Active control brings\nautomated, well-defined control to this process.\n\nThe Active control checks the status of all defined Active policies for the\nresource (`AWS > IAM > User > Active > *`),\nraises an alarm, and takes the defined enforcement action. Each Active\nsub-policy can calculate a status of active, inactive or skipped. Generally,\nif the resource appears to be Active for any reason it will be considered Active.\n**Note** the contrast with Approved, where if the resource appears to be Unapproved\nfor any reason it will be considered Unapproved.\n\nSee [Active](https://turbot.com/v5/docs/concepts/guardrails/active) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force inactive if age > 1 day",
            "Force inactive if age > 3 days",
            "Force inactive if age > 7 days",
            "Force inactive if age > 14 days",
            "Force inactive if age > 30 days",
            "Force inactive if age > 60 days",
            "Force inactive if age > 90 days",
            "Force inactive if age > 180 days",
            "Force inactive if age > 365 days"
          ],
          "example": [
            "Force inactive if age > 90 days"
          ],
          "default": "Skip"
        }
      },
      "userApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Determine the action to take when an AWS IAM user is not approved based on `AWS > IAM > User > Approved > *` policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nFor any enforcement actions that specify `if new`, e.g., `Enforce: Delete unapproved if new`, this control will only take the enforcement actions for resources created within the last 60 minutes.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "userApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "parent": "#/policy/types/userApproved",
        "category": "turbot#/control/categories/resourceApproved",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Determine whether the AWS IAM user is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM user is not approved, it will be subject to the action specified in the `AWS > IAM > User > Approved` policy.\n\nSee [Approved](https://turbot.com/v5/docs/concepts/guardrails/approved) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "userApprovedTurbot": {
        "title": "Turbot",
        "icon": "fal-check-double",
        "description": "Determine whether IAM Policies that are defined and configured by Turbot (for example, from the Permissions stack or the Service Roles stack) will always be approved.\n",
        "parent": "#/policy/types/userApproved",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Force Approved for Turbot User"
          ],
          "default": "Force Approved for Turbot User"
        }
      },
      "userPolicyAttachmentsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure AWS IAM user policy attachments `Approved` checking. This policy\ndefines whether to verify the IAM user attached policies are approved\n(per `Approved > Compiled Rules`), as well as the subsequent action to\ntake on unapproved items.\nIf set to \"Enforce: Delete unapproved\", any unapproved attached policy\nwill be removed.\n",
        "parent": "#/policy/types/userPolicyAttached",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "userPolicyAttachmentsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An [Object Control List (OCL)](https://turbot.com/v5/docs/reference/ocl) with a list of filter rules\nto approve or reject policies.\nNote that the Approved control does not operate directly from this policy,\nbut from the `Approved > Compiled Rules`.  The rules are processed in order,\nand any built-in Turbot rules will appear first in the list of compiled rules.\n",
        "parent": "#/policy/types/userPolicyAttachmentsApproved",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve rules\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "userPolicyAttachmentsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "icon": "fal-clipboard-list-check",
        "description": "A read-only [Object Control List (OCL)](https://turbot.com/v5/docs/reference/ocl) to add or\nremove IAM Policy from a IAM user.\nThis policy is generated by Turbot.\n",
        "parent": "#/policy/types/userPolicyAttachmentsApproved",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceApproved",
        "readOnly": true,
        "schema": {
          "type": "string"
        }
      },
      "userBoundary": {
        "title": "Boundary",
        "icon": "fal-shield",
        "parent": "#/resource/types/user",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "description": "Configure which boundary policy to apply to the IAM user .\nThis must be the name of an existing AWS IAM Boundary policy.\nAWS Boundary Policies are used to enforce Turbot Guardrails for\nenabling/disabling API Services and Regions.\n\nIf set to `Check or Enforce per AWS > Turbot > Permissions`,\nthe boundary will be enforced if Turbot > Permissions are enforced, checked\nif Turbot > Permissions are  checked, and skipped if Turbot Permissions\nare none or skip\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: No Boundary",
            "Check: Boundary > Policy",
            "Enforce: No Boundary",
            "Enforce: Boundary > Policy",
            "Check or Enforce per `AWS > Turbot > Permissions`"
          ],
          "default": "Skip"
        }
      },
      "userBoundaryPolicy": {
        "title": "Policy",
        "icon": "fal-shield",
        "parent": "#/policy/types/userBoundary",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/other",
        "description": "Configure which boundary policy to apply to the IAM user.\nThis must be the name of an existing AWS IAM Boundary policy.\n\nAWS Boundary Policies are used to enforce Turbot Guardrails for\nenabling/disabling API Services and Regions.\n",
        "schema": {
          "$ref": "#/definitions/boundaryPermissionPolicy"
        },
        "defaultTemplate": "{{$.prefix}}boundary",
        "defaultTemplateInput": "{\n  prefix: policy(uri:\"#/policy/types/turbotUserNamePrefix\")\n}\n"
      },
      "userCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure whether to record and synchronize details for the AWS IAM user into the CMDB.\n\nThe [CMDB](https://turbot.com/v5/docs/concepts/guardrails/cmdb) control is responsible for populating and updating all the attributes for that resource type in the Turbot CMDB.\nAll policies and controls in Turbot are based around the resource, so usually the CMDB policy is set to **\"Enforce: Enabled\"**.\n\nIf set to Skip then all changes to the CMDB are paused - no new resources will be discovered, no updates will be made and deleted resources will not be removed.\n\nTo cleanup resources and stop tracking changes, set this policy to **\"Enforce: Disabled\"**.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled",
            "Enforce: Disabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "userConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "userConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/userConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "userConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/userConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "userPolicyAttached": {
        "title": "Policy Attachments",
        "icon": "fal-check-double",
        "parent": "#/resource/types/user",
        "targets": [],
        "category": "turbot#/control/categories/resourceRequired"
      },
      "userPolicyRequired": {
        "title": "Required",
        "icon": "fal-check-double",
        "description": "Configure whether required policies should be attached to a user.\nIf set to Enforce,  policies in Required > Items will be attached to the user.\n",
        "parent": "#/policy/types/userPolicyAttached",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Required > Items",
            "Enforce: Required > Items"
          ],
          "example": [
            "Skip"
          ],
          "default": "Skip"
        }
      },
      "userPolicyRequiredLockdown": {
        "title": "Turbot Lockdown",
        "icon": "fal-lock",
        "description": "Configure whether User has Turbot Lockdown Policies attached.\n",
        "parent": "#/policy/types/userPolicyRequired",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "example": [
            "Enabled"
          ]
        }
      },
      "userPolicyRequiredItems": {
        "title": "Items",
        "icon": "fal-list-ul",
        "description": "A list of IAM policies that must be attached to a user.",
        "parent": "#/policy/types/userPolicyRequired",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceRequired",
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "pattern": "^[A-Za-z0-9_+=,.@-]+$"
          },
          "default": []
        }
      },
      "userPolicyRequiredCompiledItems": {
        "title": "Compiled Items",
        "icon": "fal-clipboard-list-check",
        "description": "A list of IAM policies that must be attached to a user.\n\nThis is a read-only policy that is generated by Turbot\n",
        "parent": "#/policy/types/userPolicyRequired",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceRequired",
        "readOnly": true,
        "schema": {
          "type": "array"
        }
      },
      "userTags": {
        "title": "Tags",
        "icon": "fal-tags",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceTags",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "Determine the action to take when an AWS IAM user tags are not updated based on the `AWS > IAM > User > Tags > *` policies.\n\nThe control ensure AWS IAM user tags include tags defined in `AWS > IAM > User > Tags > Template`.\n\nTags not defined in User Tags Template will not be modified or deleted. Setting a tag value to `undefined` will result in the tag being deleted.\n\nSee [Tags](https://turbot.com/v5/docs/concepts/guardrails/tagging) for more information.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Tags are correct",
            "Enforce: Set tags"
          ],
          "example": [
            "Check: Tags are correct"
          ],
          "default": "Skip"
        }
      },
      "userTagsTemplate": {
        "title": "Template",
        "icon": "fal-tags",
        "parent": "#/policy/types/userTags",
        "category": "turbot#/control/categories/resourceTags",
        "targets": [
          "#/resource/types/user"
        ],
        "description": "The template is used to generate the keys and values for AWS IAM user.\n\nTags not defined in User Tags Template will not be modified or deleted. Setting a tag value to `undefined` will result in the tag being deleted.\n\nSee [Tags](https://turbot.com/v5/docs/concepts/guardrails/tagging) for more information.\n",
        "schema": {
          "$ref": "aws#/definitions/tagsTemplateInput",
          "example": [
            {
              "foo": "bar",
              "environment": "prod"
            },
            [
              {
                "foo123": "bar"
              },
              {
                "environment": "dev"
              }
            ],
            [
              {
                "cost-center": "zz123"
              },
              {
                "delete-me": "undefined"
              }
            ]
          ]
        },
        "defaultTemplate": "{%- if $.defaultTags.value | length == 0 %} [] {%- elif $.defaultTags.value != undefined %}{{ $.defaultTags.value | dump | safe }}{%- else %}{% for item in $.defaultTags.value %}- {{ item }}{% endfor %}{% endif %}",
        "defaultTemplateInput": [
          "{\n  account {\n    turbot {\n      id\n    }\n  }\n}\n",
          "{\n  defaultTags: policyValue(uri:\"tmod:@turbot/aws-iam#/policy/types/iamTagsTemplate\" resourceId: \"{{ $.account.turbot.id }}\") {\n    value\n  }\n}\n"
        ]
      },
      "userUsage": {
        "title": "Usage",
        "icon": "fal-hand-holding-usd",
        "parent": "#/resource/types/user",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Configure the number of AWS IAM users that can be used for this account and the current consumption against the limit.\n\nYou can configure the behavior of the control with this  `AWS > IAM > User > Usage` policy.\n",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Usage <= 85% of Limit",
            "Check: Usage <= 100% of Limit"
          ],
          "example": [
            "Check: Usage <= 85% of Limit"
          ],
          "default": "Skip"
        }
      },
      "userUsageLimit": {
        "title": "Limit",
        "icon": "fal-hand-holding-usd",
        "parent": "#/policy/types/userUsage",
        "category": "turbot#/control/categories/resourceUsage",
        "targets": [
          "aws#/resource/types/account"
        ],
        "description": "Maximum number of items that can be created for this account.",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 5000
        }
      },
      "userGroupMembershipsCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM user group membership(s) into the CMDB.",
        "parent": "#/resource/types/userGroupMemberships",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "userGroupMembershipsConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/userGroupMemberships",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userGroupMemberships"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "userGroupMembershipsConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/userGroupMembershipsConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userGroupMemberships"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "userGroupMembershipsConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/userGroupMembershipsConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userGroupMemberships"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "userPolicyAttachmentActive": {
        "title": "Active",
        "icon": "fab-creative-commons-sampling",
        "description": "Check if the AWS IAM Userpolicyattachment is active based on AWS > IAM > Userpolicyattachment > Active > * policies.",
        "parent": "#/resource/types/userPolicyAttachment",
        "targets": "#/resource/types/userPolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "userPolicyAttachmentActiveLastModified": {
        "title": "Last Modified",
        "icon": "fab-creative-commons-sampling",
        "description": "Check if AWS userPolicyAttachment is active based on when it was last modified.",
        "parent": "#/policy/types/userPolicyAttachmentActive",
        "targets": "#/resource/types/userPolicyAttachment",
        "category": "turbot#/control/categories/resourceActive",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Active if last modified <= 1 day",
            "Active if last modified <= 3 days",
            "Active if last modified <= 7 days",
            "Active if last modified <= 14 days",
            "Active if last modified <= 30 days",
            "Active if last modified <= 60 days",
            "Active if last modified <= 90 days",
            "Active if last modified <= 180 days",
            "Active if last modified <= 365 days",
            "Force active if last modified <= 1 day",
            "Force active if last modified <= 3 days",
            "Force active if last modified <= 7 days",
            "Force active if last modified <= 14 days",
            "Force active if last modified <= 30 days",
            "Force active if last modified <= 60 days",
            "Force active if last modified <= 90 days",
            "Force active if last modified <= 180 days",
            "Force active if last modified <= 365 days"
          ],
          "example": [
            "Active if last modified <= 90 days"
          ],
          "default": "Skip"
        }
      },
      "userPolicyAttachmentCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Record and synchronize details for AWS IAM user policy attachment(s) into the CMDB.",
        "parent": "#/resource/types/userPolicyAttachment",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "userPolicyAttachmentConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/userPolicyAttachment",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userPolicyAttachment"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "userPolicyAttachmentConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/userPolicyAttachmentConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userPolicyAttachment"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "userPolicyAttachmentConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/userPolicyAttachmentConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/userPolicyAttachment"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "userInlinePolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Determine the action to take when an AWS IAM user inline policy is not approved based on AWS > IAM > User Inline Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "userInlinePolicyApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "description": "Determine whether the AWS IAM user inline policy is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM user inline policy is not approved, it will be subject to the action specified in the AWS > IAM > User Inline Policy > Approved policy.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/policy/types/userInlinePolicyApproved",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "userInlinePolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Configure whether to record and synchronize details for AWS IAM user inline policy(s) into the CMDB.\n\nThe [CMDB](https://turbot.cloud/docs/concepts/guardrails/cmdb) control is\nresponsible for populating and updating all the attributes for that\nresource type in the Turbot CMDB.\n\nNote that if CMDB is set to Skip for a resource, then it will not be added\nto the CMDB, and no controls that target it will run.\n",
        "parent": "#/resource/types/userInlinePolicy",
        "targets": "#/resource/types/user",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "userInlinePolicyStatements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/other"
      },
      "userInlinePolicyStatementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure IAM Policy Statements checking. This policy defines whether to verify the\npolicy statements are approved, as well as the subsequent action to take on unapproved\nstatements.\n\nRules for all Approved policies will be compiled in Approved > Compiled Rules\nand then evaluated. If set to \"Enforce: Delete unapproved\", any unapproved statements\nwill be removed from the policy.\n",
        "parent": "#/policy/types/userInlinePolicyStatements",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete Unapproved"
          ],
          "default": "Skip"
        }
      },
      "userInlinePolicyStatementsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An Object Control List (OCL) with a list of filter rules to approve or reject IAM policy statements. Note that the Approved control does not operate directly from this policy, but from the Approved > Compiled Rules. The rules are processed in order, and any built-in Turbot rules will appear first in the list of compiled rules.\nThis is the last statement, so all unmatched items will be (approved/rejected) by this statement.\n\n_Note_: Removing APPROVE * will reject all the unmatched rules.\n",
        "parent": "#/policy/types/userInlinePolicyStatementsApproved",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve(APPROVE *) / Reject(REJECT *) unmatched rules\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "userInlinePolicyStatementsApprovedAdminAccess": {
        "title": "Administrator Access",
        "icon": "fal-user-lock",
        "description": "If set to \"Disabled\", IAM User Inline Policy statements that allow any action ('*') on any resource ('*') will be unapproved.\n",
        "parent": "#/policy/types/userInlinePolicyStatementsApproved",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled: Allow Administrator Access ('*:*') policies",
            "Disabled: Disallow Administrator Access ('*:*') policies"
          ],
          "default": "Enabled: Allow Administrator Access ('*:*') policies"
        }
      },
      "userInlinePolicyStatementsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "icon": "fal-clipboard-list-check",
        "readOnly": true,
        "description": "A read-only Object Control List (OCL) to approved or reject inline policy statements for an IAM User.  This policy is generated by Turbot based on the \"Approved > *\" policies.\n",
        "parent": "#/policy/types/userInlinePolicyStatementsApproved",
        "targets": "#/resource/types/userInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string"
        }
      },
      "groupInlinePolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Determine the action to take when an AWS IAM inline policy is not approved based on AWS > IAM > Inline Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee Approved for more information.\n",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "groupInlinePolicyApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "description": "Determine whether the AWS IAM inline policy is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM inline policy is not approved, it will be subject to the action specified in the AWS > IAM > Inline Policy > Approved policy.\n\nSee Approved for more information.\n",
        "parent": "#/policy/types/groupInlinePolicyApproved",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "groupInlinePolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Configure whether to record and synchronize details for AWS IAM group inline policy(s) into the CMDB.\n\nThe [CMDB](https://turbot.cloud/docs/concepts/guardrails/cmdb) control is\nresponsible for populating and updating all the attributes for that\nresource type in the Turbot CMDB.\n\nNote that if CMDB is set to Skip for a resource, then it will not be added\nto the CMDB, and no controls that target it will run.\n",
        "parent": "#/resource/types/groupInlinePolicy",
        "targets": "#/resource/types/group",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "groupInlinePolicyStatements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/other"
      },
      "groupInlinePolicyStatementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure IAM Policy Statements checking. This policy defines whether to verify the\npolicy statements are approved, as well as the subsequent action to take on unapproved\nstatements.\n\nRules for all Approved policies will be compiled in Approved > Compiled Rules\nand then evaluated. If set to \"Enforce: Delete unapproved\", any unapproved statements\nwill be removed from the policy.\n",
        "parent": "#/policy/types/groupInlinePolicyStatements",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete Unapproved"
          ],
          "default": "Skip"
        }
      },
      "groupInlinePolicyStatementsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An Object Control List (OCL) with a list of filter rules to approve or reject IAM policy statements. Note that the Approved control does not operate directly from this policy, but from the Approved > Compiled Rules. The rules are processed in order, and any built-in Turbot rules will appear first in the list of compiled rules.\nThis is the last statement, so all unmatched items will be (approved/rejected) by this statement.\n\n_Note_: Removing APPROVE * will reject all the unmatched rules.\n",
        "parent": "#/policy/types/groupInlinePolicyStatementsApproved",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve(APPROVE *) / Reject(REJECT *) unmatched rules.\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "groupInlinePolicyStatementsApprovedAdminAccess": {
        "title": "Administrator Access",
        "icon": "fal-user-lock",
        "description": "If set to \"Disabled\", IAM Policy statements that allow any action ('*') on any resource ('*') will be unapproved.\n",
        "parent": "#/policy/types/groupInlinePolicyStatementsApproved",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled: Allow Administrator Access ('*:*') policies",
            "Disabled: Disallow Administrator Access ('*:*') policies"
          ],
          "default": "Enabled: Allow Administrator Access ('*:*') policies"
        }
      },
      "groupInlinePolicyStatementsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "readOnly": true,
        "icon": "fal-clipboard-list-check",
        "description": "A read-only Object Control List (OCL) to approved or reject policy statements for an IAM policy.  This policy is generated by Turbot based on the \"Approved > *\" policies.\n",
        "parent": "#/policy/types/groupInlinePolicyStatementsApproved",
        "targets": "#/resource/types/groupInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string"
        }
      },
      "roleInlinePolicyApproved": {
        "title": "Approved",
        "icon": "fal-check-double",
        "description": "Determine the action to take when an AWS IAM inline policy is not approved based on AWS > IAM > Inline Policy > Approved > * policies.\n\nThe Approved control checks the status of the defined Approved sub-policies for the resource. If the resource is not approved according to any of these policies, this control raises an alarm and takes the defined enforcement action.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete unapproved",
            "Enforce: Delete unapproved if new"
          ],
          "example": [
            "Check: Approved"
          ],
          "default": "Skip"
        }
      },
      "roleInlinePolicyApprovedUsage": {
        "title": "Usage",
        "icon": "fal-check-double",
        "description": "Determine whether the AWS IAM inline policy is allowed to exist.\n\nThis policy will be evaluated by the Approved control. If an AWS IAM inline policy is not approved, it will be subject to the action specified in the AWS > IAM > Inline Policy > Approved policy.\n\nSee [Approved](https://turbot.com/docs/concepts/guardrails/approved) for more information.\n",
        "parent": "#/policy/types/roleInlinePolicyApproved",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Not approved",
            "Approved",
            "Approved if AWS > IAM > Enabled"
          ],
          "example": [
            "Not approved"
          ],
          "default": "Approved if AWS > IAM > Enabled"
        }
      },
      "roleInlinePolicyCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Configure whether to record and synchronize details for AWS IAM role inline policy(s) into the CMDB.\n\nThe [CMDB](https://turbot.cloud/docs/concepts/guardrails/cmdb) control is\nresponsible for populating and updating all the attributes for that\nresource type in the Turbot CMDB.\n\nNote that if CMDB is set to Skip for a resource, then it will not be added\nto the CMDB, and no controls that target it will run.\n",
        "parent": "#/resource/types/roleInlinePolicy",
        "targets": "#/resource/types/role",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "roleInlinePolicyConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/roleInlinePolicy"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "roleInlinePolicyConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/roleInlinePolicyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/roleInlinePolicy"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "roleInlinePolicyConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/roleInlinePolicyConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/roleInlinePolicy"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      },
      "inlinePolicyStatements": {
        "title": "Statements",
        "icon": "fal-shield-alt",
        "parent": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/other"
      },
      "roleInlinePolicyStatementsApproved": {
        "title": "Approved",
        "icon": "fal-shield-alt",
        "description": "Configure IAM Policy Statements checking. This policy defines whether to verify the\npolicy statements are approved, as well as the subsequent action to take on unapproved\nstatements.\nRules for all Approved policies will be compiled in Approved > Compiled Rules\nand then evaluated. If set to \"Enforce: Delete unapproved\", any unapproved statements\nwill be removed from the policy.\n",
        "parent": "#/policy/types/inlinePolicyStatements",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Approved",
            "Enforce: Delete Unapproved"
          ],
          "default": "Skip"
        }
      },
      "roleInlinePolicyStatementsApprovedRules": {
        "title": "Rules",
        "icon": "fal-clipboard-list-check",
        "description": "An Object Control List (OCL) with a list of filter rules to approve or reject IAM role inline policy statements. Note that the Approved control does not operate directly from this policy, but from the Approved > Compiled Rules. The rules are processed in order, and any built-in Turbot rules will appear first in the list of compiled rules.\nThis is the last statement, so all unmatched items will be (approved/rejected) by this statement.\n\n_Note_: Removing APPROVE * will reject all the unmatched rules.\n",
        "parent": "#/policy/types/roleInlinePolicyStatementsApproved",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "default": "# Approve(APPROVE *) / Reject(REJECT *) unmatched rules.\nAPPROVE *",
          "x-schema-form": {
            "type": "textarea"
          }
        }
      },
      "roleInlinePolicyStatementsApprovedAdminAccess": {
        "title": "Administrator Access",
        "icon": "fal-user-lock",
        "description": "If set to \"Disabled\", IAM Role Inline Policy statements that allow any action ('*') on any resource ('*') will be unapproved.\n",
        "parent": "#/policy/types/roleInlinePolicyStatementsApproved",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "schema": {
          "type": "string",
          "enum": [
            "Enabled: Allow Administrator Access ('*:*') policies",
            "Disabled: Disallow Administrator Access ('*:*') policies"
          ],
          "default": "Enabled: Allow Administrator Access ('*:*') policies"
        }
      },
      "roleInlinePolicyStatementsApprovedCompiledRules": {
        "title": "Compiled Rules",
        "icon": "fal-clipboard-list-check",
        "description": "A read-only Object Control List (OCL) to approved or reject inline policy statements for an IAM Role.  This policy is generated by Turbot based on the \"Approved > *\" policies.\n",
        "parent": "#/policy/types/roleInlinePolicyStatementsApproved",
        "targets": "#/resource/types/roleInlinePolicy",
        "category": "turbot#/control/categories/resourceApproved",
        "readOnly": true,
        "schema": {
          "type": "string"
        }
      },
      "instanceProfileCmdb": {
        "title": "CMDB",
        "icon": "fal-coins",
        "description": "Configure whether to record and synchronize details for AWS IAM instance profile(s) into the CMDB.\n\nThe [CMDB](https://turbot.cloud/docs/concepts/guardrails/cmdb) control is\nresponsible for populating and updating all the attributes for that\nresource type in the Turbot CMDB.\n\nNote that if CMDB is set to Skip for a resource, then it will not be added\nto the CMDB, and no controls that target it will run.\n",
        "parent": "#/resource/types/instanceProfile",
        "targets": "aws#/resource/types/account",
        "category": "turbot#/control/categories/cmdb",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Skip"
          ],
          "default": "Enforce: Enabled"
        }
      },
      "instanceProfileConfigured": {
        "title": "Configured",
        "icon": "fal-cogs",
        "parent": "#/resource/types/instanceProfile",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/instanceProfile"
        ],
        "description": "Determine how to configure this resource.\n\n**Note**: If the resource is managed by another stack, then the Skip/Check/Enforce values here are ignored\nand inherit from the stack that owns it\n",
        "schema": {
          "enum": [
            "Skip (unless claimed by a stack)",
            "Check: Per Configured > Source (unless claimed by a stack)",
            "Enforce: Per Configured > Source (unless claimed by a stack)"
          ],
          "default": "Skip (unless claimed by a stack)"
        }
      },
      "instanceProfileConfiguredSource": {
        "title": "Source",
        "icon": "fal-file-alt",
        "parent": "#/policy/types/instanceProfileConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/instanceProfile"
        ],
        "description": "A HCL or JSON format Terraform configuration source used to configure this resource",
        "schema": {
          "type": "string",
          "default": "",
          "x-schema-form": {
            "type": "code",
            "language": "hcl"
          }
        }
      },
      "instanceProfileConfiguredPrecedence": {
        "title": "Claim Precedence",
        "icon": "fal-sort-amount-down",
        "parent": "#/policy/types/instanceProfileConfigured",
        "category": "turbot#/control/categories/configured",
        "targets": [
          "#/resource/types/instanceProfile"
        ],
        "description": "An ordered list of who is allowed to claim a resource.\nA stack cannot claim a resource if it is already claimed by another\nstack at a higher level of precedence.\n",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultTemplate": "{%- if $.defaultPrecedence | length == 0 %}[]{%- else %}{% for item in $.defaultPrecedence %}- '{{ item }}'{% endfor %}{% endif %}",
        "defaultTemplateInput": "{\n  defaultPrecedence: policy(uri:\"tmod:@turbot/turbot#/policy/types/claimPrecedenceDefault\")\n}\n"
      }
    }
  },
  "resource": {
    "types": {
      "accessKey": {
        "title": "Access Key",
        "icon": "fal-key",
        "description": "Contains information about an AWS IAM access key.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/user",
        "metadataTemplates": {
          "title": "{{ $.AccessKeyId }}",
          "akas": "- \"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}/accesskey/{{ $.AccessKeyId }}\"\n",
          "resourceParentAka": "\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "UserName": "Bob",
              "AccessKeyId": "AKIA1234567890EXAMPLE",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "AKIA1234567890EXAMPLE",
              "akas": [
                "arn:aws:iam::123456789012:user/Bob/accesskey/AKIA1234567890EXAMPLE"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:user/Bob"
            }
          }
        ],
        "terraform": {
          "type": "aws_iam_access_key",
          "calculatedAka": true,
          "stateIdTemplate": "{{ $.AccessKeyId }}",
          "propertyMap": {
            "id": "AccessKeyId",
            "user": "UserName"
          }
        },
        "schema": {
          "$ref": "#/definitions/accessKey"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/accessKey"
            },
            {
              "type": "object",
              "required": [
                "UserName",
                "AccessKeyId"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/accessKey"
            },
            {
              "type": "object",
              "properties": {
                "AccessKeyId": {
                  "type": "null"
                },
                "UserName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "accountPasswordPolicy": {
        "title": "Account Password Policy",
        "icon": "fal-file-code",
        "description": "Password Policy for the AWS Account",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "Account Password Policy",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:accountPasswordPolicy\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:accountPasswordPolicy\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"{% else %}\"arn:aws:::{{ $.turbot.custom.aws.accountId }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "Account Password Policy",
              "akas": [
                "arn:aws:iam::123456789012:accountPasswordPolicy"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "terraform": {
          "type": "aws_iam_account_password_policy",
          "stateIdTemplate": "iam-account-password-policy",
          "propertyMap": {
            "allow_users_to_change_password": "AllowUsersToChangePassword",
            "expire_passwords": "ExpirePasswords",
            "minimum_password_length": "MinimumPasswordLength",
            "require_lowercase_characters": "RequireLowercaseCharacters",
            "require_numbers": "RequireNumbers",
            "require_symbols": "RequireSymbols",
            "require_uppercase_characters": "RequireUppercaseCharacters"
          },
          "stateDefaults": {
            "expire_passwords": false
          }
        },
        "schema": {
          "$ref": "#/definitions/accountPasswordPolicy"
        }
      },
      "accountSummary": {
        "title": "Account Summary",
        "icon": "fal-server",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "Account Summary",
          "akas": "- \"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:accountSummary\"\n",
          "resourceParentAka": "\"arn:{{ $.turbot.custom.aws.partition }}::{{ $.turbot.custom.aws.accountId }}\"\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "Account Summary",
              "akas": [
                "arn:aws:iam::123456789012:accountSummary"
              ],
              "resourceParentAka": "arn:aws::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/accountSummary"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/accountSummary"
            }
          ]
        }
      },
      "credentialReport": {
        "title": "Credential Report",
        "icon": "fal-key",
        "description": "Contains information about an AWS IAM access key.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "Credential Report",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:credentialReport\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:credentialReport\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"{% else %}\"arn:aws:::{{ $.turbot.custom.aws.accountId }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "Credential Report",
              "akas": [
                "arn:aws:iam::123456789012:credentialReport"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/credentialReport"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/credentialReport"
            },
            {
              "type": "object",
              "required": [
                "credentialInfo"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/credentialReport"
            },
            {
              "type": "object",
              "properties": {
                "credentialInfo": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "group": {
        "title": "Group",
        "icon": "fal-users",
        "description": "IAM Groups in AWS IAM Service",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "{{ $.GroupName | json }}",
          "akas": "- \"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}\"\n",
          "resourceParentAka": "\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"\n"
        },
        "terraform": {
          "type": "aws_iam_group",
          "stateIdTemplate": "{{$.GroupName}}",
          "propertyMap": {
            "name": "GroupName"
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "GroupName": "foo",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "regionName": "us-east-1",
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "foo",
              "akas": [
                "arn:aws:iam::123456789012:group/foo"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/group"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/group"
            },
            {
              "type": "object",
              "required": [
                "GroupName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/group"
            },
            {
              "type": "object",
              "properties": {
                "GroupId": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "groupPolicyAttachment": {
        "title": "Group Policy Attachments",
        "icon": "fal-users-medical",
        "description": "AWS Group Policy Attachment in AWS IAM Service",
        "parent": "#/resource/types/group",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/group",
        "metadataTemplates": {
          "title": "{{ $.Id | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}/policy-attachment/{{ $.PolicyArn.split('/').pop() }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}/policy-attachment/{{ $.PolicyArn.split('/').pop() }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}\"{% endif %}\n"
        },
        "schema": {
          "$ref": "#/definitions/groupPolicyAttachment"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/groupPolicyAttachment"
            },
            {
              "type": "object",
              "required": [
                "Id",
                "GroupName",
                "PolicyArn"
              ]
            }
          ]
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "GroupName": "test01",
              "PolicyArn": "arn:aws:iam::policy/AmazonEKSClusterPolicy",
              "Id": "test01-AmazonEKSClusterPolicy",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "test01-AmazonEKSClusterPolicy",
              "akas": [
                "arn:aws:iam::123456789012:group/test01/policy-attachment/AmazonEKSClusterPolicy"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:group/test01"
            }
          }
        ],
        "terraform": {
          "type": "aws_iam_group_policy_attachment",
          "stateIdTemplate": "{{ $.Id }}",
          "propertyMap": {
            "id": "Id",
            "policy_arn": "PolicyArn",
            "group": "GroupName"
          }
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/groupPolicyAttachment"
            },
            {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "null"
                },
                "GroupName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "iam": {
        "title": "IAM",
        "icon": "fal-file-user",
        "description": "AWS IAM Service.",
        "parent": "aws#/resource/types/aws",
        "category": "turbot#/resource/categories/cloudService",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{$.turbot.custom.aws.accountId}}\"{% else %}\"arn:aws:iam::{{$.turbot.custom.aws.accountId}}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{$.turbot.custom.aws.accountId}}\"{% else %}\"arn:aws:::{{$.turbot.custom.aws.accountId}}\"{% endif %}\n",
          "title": "IAM"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "name": "IAM",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "akas": [
                "arn:aws:iam::123456789012"
              ],
              "resourceParentAka": "arn:aws:::123456789012",
              "title": "IAM"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/iam"
        }
      },
      "iamPolicy": {
        "title": "Policy",
        "icon": "fal-file-code",
        "description": "IAM Policies in AWS IAM Service",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "{{ $.PolicyName | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:policy/{{ $.PolicyName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:policy/{{ $.PolicyName }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"{% else %}\"arn:aws:::{{ $.turbot.custom.aws.accountId }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "PolicyName": "S3-read-only-example-bucket",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "S3-read-only-example-bucket",
              "akas": [
                "arn:aws:iam::123456789012:policy/S3-read-only-example-bucket"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/iamPolicy"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/iamPolicy"
            },
            {
              "type": "object",
              "required": [
                "PolicyName",
                "Arn"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/iamPolicy"
            },
            {
              "type": "object",
              "properties": {
                "PolicyId": {
                  "type": "null"
                }
              }
            }
          ]
        },
        "terraform": {
          "type": "aws_iam_policy",
          "stateIdTemplate": "{{ $.Arn }}",
          "propertyMap": {
            "arn": "Arn",
            "name": "PolicyName"
          }
        }
      },
      "mfaVirtual": {
        "title": "MFA Virtual",
        "icon": "fal-key",
        "description": "AWS Virtual MFA Device.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "{{ $.SerialNumber.split(':').pop() }}",
          "akas": "- \"{{ $.SerialNumber }}\"\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"{% else %}\"arn:aws:::{{ $.turbot.custom.aws.accountId }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "base",
            "input": {
              "SerialNumber": "arn:aws:iam::123456789012:mfa/test01",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "mfa/test01",
              "akas": [
                "arn:aws:iam::123456789012:mfa/test01"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/mfaVirtual"
        }
      },
      "role": {
        "title": "Role",
        "icon": "fal-user-cog",
        "description": "IAM Role in AWS IAM service.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/other",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "{{ $.RoleName | json }}",
          "akas": "- \"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}\"\n",
          "resourceParentAka": "\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"\n"
        },
        "terraform": {
          "type": "aws_iam_role",
          "stateIdTemplate": "{{$.RoleName}}",
          "propertyMap": {
            "name": "RoleName"
          },
          "metadataMap": {
            "force_detach_policies": "terraform.forceDetachPolicies"
          },
          "stateDefaults": {
            "force_detach_policies": true
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "RoleName": "turbot_role_metadata",
              "RoleId": "AROAXFLTMQPQVSGTWPJK5",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "turbot_role_metadata",
              "akas": [
                "arn:aws:iam::123456789012:role/turbot_role_metadata"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/role"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/role"
            },
            {
              "type": "object",
              "required": [
                "RoleName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/role"
            },
            {
              "type": "object",
              "required": [
                "RoleId"
              ]
            }
          ]
        }
      },
      "rolePolicyAttachment": {
        "title": "Role Policy Attachments",
        "icon": "fal-users-medical",
        "description": "AWS Role Policy Attachment in AWS IAM Service",
        "parent": "#/resource/types/role",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/role",
        "metadataTemplates": {
          "title": "{{ $.Id | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}/policy-attachment/{{ $.PolicyArn.split('/').slice(-1)[0] }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}/policy-attachment/{{ $.PolicyArn.split('/').pop() }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}\"{% endif %}\n"
        },
        "terraform": {
          "type": "aws_iam_role_policy_attachment",
          "stateIdTemplate": "{{ $.Id }}",
          "propertyMap": {
            "id": "Id",
            "policy_arn": "PolicyArn",
            "role": "RoleName"
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "RoleName": "foo",
              "PolicyArn": "arn:aws:iam::123456789012:policy/turbot/turbot_lockdown",
              "Id": "foo-turbot-lockdown",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "foo-turbot-lockdown",
              "akas": [
                "arn:aws:iam::123456789012:role/foo/policy-attachment/turbot_lockdown"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:role/foo"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/rolePolicyAttachment"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/rolePolicyAttachment"
            },
            {
              "type": "object",
              "required": [
                "Id",
                "RoleName",
                "PolicyArn"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/rolePolicyAttachment"
            },
            {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "null"
                },
                "RoleName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "root": {
        "title": "Root",
        "icon": "fal-user",
        "description": "Root Account in AWS IAM service.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "Root Account",
          "akas": "- \"{{ $.arn }}\"\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"{% else %}\"arn:aws:::{{ $.turbot.custom.aws.accountId }}\"{% endif %}\n"
        },
        "terraform": {
          "type": "aws_iam_root",
          "stateIdTemplate": "{{ $.arn }}",
          "propertyMap": {
            "arn": "arn"
          },
          "metadataMap": {
            "force_destroy": "terraform.forceDestroy"
          },
          "stateDefaults": {
            "force_destroy": false
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "arn": "arn:aws:iam::123456789012:root",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "Root Account",
              "akas": [
                "arn:aws:iam::123456789012:root"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/root"
        }
      },
      "user": {
        "title": "User",
        "icon": "fal-user",
        "description": "User in AWS IAM service.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "{{ $.UserName | json }}",
          "akas": "- \"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"\n",
          "resourceParentAka": "\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"\n"
        },
        "terraform": {
          "type": "aws_iam_user",
          "stateIdTemplate": "{{ $.UserName }}",
          "propertyMap": {
            "name": "UserName"
          },
          "metadataMap": {
            "force_destroy": "terraform.forceDestroy"
          },
          "stateDefaults": {
            "force_destroy": false
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "UserName": "foo",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "regionName": "us-east-1",
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "foo",
              "akas": [
                "arn:aws:iam::123456789012:user/foo"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/user"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "object",
              "required": [
                "UserName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/user"
            },
            {
              "type": "object",
              "properties": {
                "UserId": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "userGroupMemberships": {
        "title": "Group Memberships",
        "icon": "fal-users",
        "description": "User Group Memberships in AWS IAM service.",
        "parent": "#/resource/types/user",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/user",
        "metadataTemplates": {
          "title": "{{ $.UserName }} Group Memberships",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:userGroupMemberships/{{ $.UserName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:userGroupMemberships/{{ $.UserName }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"{% endif %}\n"
        },
        "terraform": {
          "type": "aws_iam_user_group_membership",
          "stateIdTemplate": "{{ $.turbot.terraform.id }}",
          "propertyMap": {
            "user": "UserName"
          },
          "metadataMap": {
            "id": "terraform.id"
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "Arn": "arn:aws:iam::492552618977:user/testUser",
              "UserName": "testUser",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 492552618977
                  }
                }
              },
              "Path": "turbot",
              "GroupName": "user"
            },
            "expect": {
              "title": "testUser Group Memberships",
              "akas": [
                "arn:aws:iam::492552618977:userGroupMemberships/testUser"
              ],
              "resourceParentAka": "arn:aws:iam::492552618977:user/testUser"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/userGroupMemberships"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/userGroupMemberships"
            },
            {
              "type": "object",
              "required": [
                "UserName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/userGroupMemberships"
            },
            {
              "type": "object",
              "properties": {
                "UserName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "userPolicyAttachment": {
        "title": "User Policy Attachments",
        "icon": "fal-users-medical",
        "description": "AWS User Policy Attachment in AWS IAM Service",
        "parent": "#/resource/types/user",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/user",
        "metadataTemplates": {
          "title": "{{ $.Id | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}/policy-attachment/{{ $.PolicyArn.split('/').pop() }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}/policy-attachment/{{ $.PolicyArn.split('/').pop() }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"{% endif %}\n"
        },
        "terraform": {
          "type": "aws_iam_user_policy_attachment",
          "stateIdTemplate": "{{ $.Id }}",
          "propertyMap": {
            "id": "Id",
            "policy_arn": "PolicyArn",
            "user": "UserName"
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "PolicyArn": "arn:aws:iam::123456789012:policy/turbot/turbot_lockdown",
              "UserName": "venu",
              "Id": "venu-turbot_lockdown",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "venu-turbot_lockdown",
              "akas": [
                "arn:aws:iam::123456789012:user/venu/policy-attachment/turbot_lockdown"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:user/venu"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/userPolicyAttachment"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/userPolicyAttachment"
            },
            {
              "type": "object",
              "required": [
                "Id",
                "UserName",
                "PolicyArn"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/userPolicyAttachment"
            },
            {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "null"
                },
                "UserName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "userInlinePolicy": {
        "title": "Inline Policy",
        "icon": "fal-poll-people",
        "description": "AWS User Inline Policy in AWS IAM Service",
        "parent": "#/resource/types/user",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/user",
        "metadataTemplates": {
          "title": "{{ $.PolicyName | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}/inline-policy/{{ $.PolicyName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}/inline-policy/{{ $.PolicyName }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:user/{{ $.UserName }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "PolicyName": "turbot_lockdown",
              "UserName": "venu",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "turbot_lockdown",
              "akas": [
                "arn:aws:iam::123456789012:user/venu/inline-policy/turbot_lockdown"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:user/venu"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/userInlinePolicy"
        }
      },
      "groupInlinePolicy": {
        "title": "Inline Policy",
        "icon": "fal-poll-people",
        "description": "AWS Group Inline Policy in AWS IAM Service",
        "parent": "#/resource/types/group",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/group",
        "metadataTemplates": {
          "title": "{{ $.PolicyName | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}/inline-policy/{{ $.PolicyName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}/inline-policy/{{ $.PolicyName }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:group/{{ $.GroupName }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "PolicyName": "turbot_lockdown",
              "GroupName": "venu",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "turbot_lockdown",
              "akas": [
                "arn:aws:iam::123456789012:group/venu/inline-policy/turbot_lockdown"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:group/venu"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/groupInlinePolicy"
        }
      },
      "roleInlinePolicy": {
        "title": "Inline Policy",
        "icon": "fal-poll-people",
        "description": "AWS Role Inline Policy in AWS IAM Service",
        "parent": "#/resource/types/role",
        "category": "turbot#/resource/categories/iam",
        "resourceParents": "#/resource/types/role",
        "terraform": {
          "type": "aws_iam_role_policy",
          "stateIdTemplate": "{{ $.RoleName }}:{{ $.PolicyName }}",
          "propertyMap": {
            "role": "RoleName",
            "name": "PolicyName"
          }
        },
        "metadataTemplates": {
          "title": "{{ $.PolicyName | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}/inline-policy/{{ $.PolicyName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}/inline-policy/{{ $.PolicyName }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:role/{{ $.RoleName }}\"{% endif %}\n"
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "RoleName": "foo",
              "PolicyName": "turbot_lockdown",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "turbot_lockdown",
              "akas": [
                "arn:aws:iam::123456789012:role/foo/inline-policy/turbot_lockdown"
              ],
              "resourceParentAka": "arn:aws:iam::123456789012:role/foo"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/roleInlinePolicy"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/roleInlinePolicy"
            },
            {
              "type": "object",
              "required": [
                "PolicyName",
                "RoleName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/roleInlinePolicy"
            },
            {
              "type": "object",
              "properties": {
                "PolicyName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "instanceProfile": {
        "title": "Instance Profile",
        "icon": "fal-user-md",
        "description": "IAM Instance profile in AWS IAM service.",
        "parent": "#/resource/types/iam",
        "category": "turbot#/resource/categories/other",
        "resourceParents": "aws#/resource/types/account",
        "metadataTemplates": {
          "title": "{{ $.InstanceProfileName | json }}",
          "akas": "- {% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:iam::{{ $.turbot.custom.aws.accountId }}:instance-profile/{{ $.InstanceProfileName }}\"{% else %}\"arn:aws:iam::{{ $.turbot.custom.aws.accountId }}:instance-profile/{{ $.InstanceProfileName }}\"{% endif %}\n",
          "resourceParentAka": "{% if $.turbot.custom.aws.partition %}\"arn:{{ $.turbot.custom.aws.partition }}:::{{ $.turbot.custom.aws.accountId }}\"{% else %}\"arn:aws:::{{ $.turbot.custom.aws.accountId }}\"{% endif %}\n"
        },
        "terraform": {
          "type": "aws_iam_instance_profile",
          "stateIdTemplate": "{{ $.InstanceProfileName }}",
          "propertyMap": {
            "name": "InstanceProfileName"
          }
        },
        "metadataTemplateTests": [
          {
            "description": "Valid - Base test",
            "input": {
              "InstanceProfileName": "turbot_instanceProfile_metadata",
              "turbot": {
                "custom": {
                  "aws": {
                    "accountId": 123456789012,
                    "partition": "aws"
                  }
                }
              }
            },
            "expect": {
              "title": "turbot_instanceProfile_metadata",
              "akas": [
                "arn:aws:iam::123456789012:instance-profile/turbot_instanceProfile_metadata"
              ],
              "resourceParentAka": "arn:aws:::123456789012"
            }
          }
        ],
        "schema": {
          "$ref": "#/definitions/instanceProfile"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/instanceProfile"
            },
            {
              "type": "object",
              "required": [
                "InstanceProfileName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/instanceProfile"
            },
            {
              "type": "object",
              "properties": {
                "InstanceProfileName": {
                  "type": "null"
                }
              }
            }
          ]
        }
      }
    }
  },
  "permission": {
    "types": {
      "iam": {
        "title": "IAM",
        "parent": "aws#/permission/types/aws",
        "category": "turbot#/control/categories/iam",
        "targets": "aws#/resource/types/account"
      }
    }
  },
  "build": "20210517181553654"
}