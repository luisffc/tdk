{
  "$id": "tmod:@turbot/turbot-iam",
  "author": "Turbot HQ Inc",
  "title": "@turbot/turbot-iam",
  "version": "5.9.4",
  "license": "For LICENSE see https://turbot.com/license",
  "peerDependencies": {
    "@turbot/turbot": "^5.22.0"
  },
  "definitions": {
    "iam": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/service"
        },
        {
          "type": "object",
          "properties": {
            "title": {
              "const": "IAM"
            }
          }
        }
      ],
      "tests": [
        {
          "description": "IAM",
          "input": {
            "title": "IAM"
          }
        },
        {
          "description": "invalid - service provider name prefixed",
          "input": {
            "title": "Turbot IAM"
          },
          "expected": false
        }
      ]
    },
    "identity": {
      "description": "Identity",
      "type": "object",
      "required": [
        "turbot"
      ],
      "properties": {
        "turbot": {
          "$ref": "#/definitions/identityMetadata"
        }
      },
      "tests": [
        {
          "description": "Valid identity",
          "input": {
            "turbot": {
              "title": "Turbot",
              "picture": "http://url.to/turbot.png"
            }
          }
        },
        {
          "description": "Invalid identity (missing turbot)",
          "input": {
            "foo": "bar"
          },
          "expected": false
        }
      ]
    },
    "identityMetadata": {
      "description": "Identity metadata.",
      "type": "object",
      "required": [
        "title",
        "picture"
      ],
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "picture": {
          "$ref": "#/definitions/picture"
        }
      },
      "tests": [
        {
          "description": "Valid identity metadata",
          "input": {
            "title": "Turbot",
            "picture": "http://url.to/turbot.png"
          }
        },
        {
          "description": "Invalid identity metadata (missing title)",
          "input": {
            "picture": "http://url.to/turbot.png"
          },
          "expected": false
        },
        {
          "description": "Invalid identity metadata (missing picture)",
          "input": {
            "title": "Turbot"
          },
          "expected": false
        }
      ]
    },
    "picture": {
      "type": "string",
      "format": "uri"
    },
    "hostname": {
      "description": "A <a href=\"https://en.wikipedia.org/wiki/Hostname\">DNS hostname</a>.",
      "example": "turbot.acme.com",
      "type": "string",
      "format": "hostname"
    },
    "oAuthClientSecret": {
      "description": "Client Secret setting for an OAuth provider.",
      "example": "fb-tbevaACsBKQHthzba-PH9",
      "type": "string",
      "pattern": "^[-_a-zA-Z0-9]+$",
      "minLength": 1,
      "maxLength": 64,
      "x-turbot": {
        "secret": true
      }
    },
    "oAuthClientID": {
      "description": "Client ID setting for an OAuth provider.",
      "example": "125358849129-njb0arc67o2t3o604ouikdvsgssnu3rf.apps.googleusercontent.com",
      "$ref": "#/definitions/hostname"
    },
    "rightDefinitionList": {
      "description": "Internal format for Turbot Rights registrations.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/rightDefinition"
      }
    },
    "rightDefinition": {
      "description": "Internal format for Turbot Rights registrations.",
      "type": "object",
      "properties": {
        "level": {
          "$ref": "turbot#/definitions/permissionLevelReference"
        },
        "type": {
          "$ref": "turbot#/definitions/permissionTypeReference"
        },
        "metadata": {
          "type": "object",
          "properties": {
            "roleName": {
              "type": "string"
            }
          }
        }
      },
      "required": [
        "level",
        "type"
      ],
      "additionalProperties": false,
      "tests": [
        {
          "description": "Valid right definition",
          "input": {
            "level": "@turbot/turbot-iam#/permission/levels/admin",
            "type": "#/permission/types/bar"
          }
        },
        {
          "description": "Invalid - Levels includes a non #/permission/levels/* path",
          "expected": false,
          "input": {
            "level": "#/definitions/foo",
            "type": "#/permission/types/foo"
          }
        },
        {
          "description": "Invalid - Types includes a non #/permission/types/* path",
          "expected": false,
          "input": {
            "level": "#/permission/levels/user",
            "type": "#/definitions/bar"
          }
        }
      ]
    },
    "turbotPermissionLevelReference": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/permissionLevelReference"
        },
        {
          "pattern": "user|metadata|readonly|admin|owner|operator"
        }
      ],
      "tests": [
        {
          "description": "valid permission type",
          "input": "tmod:@turbot/turbot#/permission/levels/admin"
        },
        {
          "description": "invalid - turbot permission type",
          "input": "tmod:@turbot/azure-storage#/permission/types/storage",
          "expected": false
        },
        {
          "description": "invalid - category",
          "input": "tmod:@turbot/aws-s3#/control/types/bucketApproved",
          "expected": false
        }
      ]
    },
    "turbotPermissionTypeReference": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/permissionTypeReference"
        },
        {
          "pattern": "^tmod:@turbot/turbot"
        }
      ],
      "tests": [
        {
          "description": "valid permission type",
          "input": "tmod:@turbot/turbot#/permission/types/s3"
        },
        {
          "description": "invalid - turbot permission type",
          "input": "tmod:@turbot/azure-storage#/permission/types/storage",
          "expected": false
        },
        {
          "description": "invalid - category",
          "input": "tmod:@turbot/aws-s3#/control/types/bucketApproved",
          "expected": false
        }
      ]
    },
    "turbotLevelDefinition": {
      "description": "Internal format for Turbot Levels.",
      "type": "object",
      "properties": {
        "level": {
          "$ref": "#/definitions/turbotPermissionLevelReference"
        },
        "type": {
          "$ref": "#/definitions/turbotPermissionTypeReference"
        }
      },
      "required": [
        "level",
        "type"
      ],
      "additionalProperties": false,
      "tests": [
        {
          "description": "Valid level definition",
          "input": {
            "level": "tmod:@turbot/turbot-iam#/permission/levels/admin",
            "type": "tmod:@turbot/turbot-iam#/permission/types/turbot"
          }
        },
        {
          "description": "invalid type definition",
          "input": {
            "level": "tmod:@turbot/turbot-iam#/permission/levels/admin",
            "type": "tmod:@turbot/azure-s3#/permission/types/s3"
          },
          "expected": false
        },
        {
          "description": "Invalid - Levels includes a non #/permission/levels/* path",
          "expected": false,
          "input": {
            "level": "#/definitions/foo",
            "type": "#/permission/types/foo"
          }
        },
        {
          "description": "Invalid - Types includes a non #/permission/types/* path",
          "expected": false,
          "input": {
            "level": "#/permission/levels/user",
            "type": "#/definitions/bar"
          }
        }
      ]
    },
    "turbotLevelDefinitionList": {
      "description": "Internal format for Turbot Levels registrations.",
      "type": "array",
      "default": [
        {
          "type": "tmod:@turbot/turbot-iam#/permission/types/turbot",
          "level": "tmod:@turbot/turbot-iam#/permission/levels/user"
        },
        {
          "type": "tmod:@turbot/turbot-iam#/permission/types/turbot",
          "level": "tmod:@turbot/turbot-iam#/permission/levels/metadata"
        },
        {
          "type": "tmod:@turbot/turbot-iam#/permission/types/turbot",
          "level": "tmod:@turbot/turbot-iam#/permission/levels/readonly"
        },
        {
          "type": "tmod:@turbot/turbot-iam#/permission/types/turbot",
          "level": "tmod:@turbot/turbot-iam#/permission/levels/operator"
        },
        {
          "type": "tmod:@turbot/turbot-iam#/permission/types/turbot",
          "level": "tmod:@turbot/turbot-iam#/permission/levels/admin"
        },
        {
          "type": "tmod:@turbot/turbot-iam#/permission/types/turbot",
          "level": "tmod:@turbot/turbot-iam#/permission/levels/owner"
        }
      ],
      "items": {
        "$ref": "#/definitions/turbotLevelDefinition"
      }
    },
    "certificate": {
      "type": "string",
      "maxLength": 2097152,
      "minLength": 1,
      "pattern": "(-{5}BEGIN CERTIFICATE-{5})?([A-Za-z0-9/\n/+=/]*)(-{5}END CERTIFICATE-{5})?",
      "tests": [
        {
          "description": "base case with begin/end and line breaks",
          "input": "-----BEGIN CERTIFICATE-----\nMIIDoDCCAoigAwIBAgIGAV2Tqqa1MA0GCSqGSIb3DQEBCwUAMIGQMQswCQYDVQQGEwJVUzETMBEG\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\nMBIGA1UECwwLU1NPUHJvdmlkZXIxETAPBgNVBAMMCHR1cmJvdGhxMRwwGgYJKoZIhvcNAQkBFg1p\nbmZvQG9rdGEuY29tMB4XDTE3MDczMDEzMjI0MFoXDTI3MDczMDEzMjM0MFowgZAxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQK\nDARPa3RhMRQwEgYDVQQLDAtTU09Qcm92aWRlcjERMA8GA1UEAwwIdHVyYm90aHExHDAaBgkqhkiG\n9w0BCQEWDWluZm9Ab2t0YS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYHhIn\nVUFP4NRWlqwplgSo7esXlXKiedkTf8+N6AXBah1xIiMubCRXBuDgtjz1ZwDpGa/XY8YtKZGABY+S\nP772WXNMaYc2RNdxSbz54W4TFx/we5LiGPCGmMKtSZHFBBGwGHvSul/NWEJ1TU8nJ1hdh2UBgjf2\nPm6XZAayTkCx15CL/+NfLSgNnHQlcNL+z7xVK2kyqFV1tOmy846A2NtqlluXkrJp0scHC5ryq/cR\n16KnbnOE9tq/I2Z30cHsqqC0kKHfJTBdbOhJcXH1oKObUOcKc1tFhLjUC4J/grZ8e2MVKljtug2j\nSnLlbTbrdG+pPqdCFNkSdfBaQWpZnp1jAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIUJBfEt/Job\nKQljFqegHcJK1MWR0UbdTfVC4jDjX5yItG2igmwIvq0DaHWahrTPwdP3u2yDMyBZTfwwqzgHMg1s\n/OPCOddw+8m0E7n8p37PHtrzS7qlXHjJTC+Ihg/6QOhhHKmXnUN3ic2L4RdaCuIOBHS0qo8H3Mhj\nnSqAXYKBajn2MDQYOTZMPTc4PqQNtL6cCa4RNUk3G+chlhiCzQ/Nb6hKCCHEuhCoIc6htnIcoWmj\n7WWR2Piy5GKSibZ4GQgcLgdu7jTrkbYr56DPzDUEEWa3jCcl/xqyAjWdsX9NCBf4o3nSIdwCAMJZ\nSMbqN5lCzivATVQPxuAPS9fHbSI=\n-----END CERTIFICATE-----"
        },
        {
          "description": "base case with no begin/end and no line breaks",
          "input": "MIIDoDCCAoigAwIBAgIGAV2Tqqa1MA0GCSqGSIb3DQEBCwUAMIGQMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEUMBIGA1UECwwLU1NPUHJvdmlkZXIxETAPBgNVBAMMCHR1cmJvdGhxMRwwGgYJKoZIhvcNAQkBFg1pbmZvQG9rdGEuY29tMB4XDTE3MDczMDEzMjI0MFoXDTI3MDczMDEzMjM0MFowgZAxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQKDARPa3RhMRQwEgYDVQQLDAtTU09Qcm92aWRlcjERMA8GA1UEAwwIdHVyYm90aHExHDAaBgkqhkiG9w0BCQEWDWluZm9Ab2t0YS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYHhInVUFP4NRWlqwplgSo7esXlXKiedkTf8+N6AXBah1xIiMubCRXBuDgtjz1ZwDpGa/XY8YtKZGABY+SP772WXNMaYc2RNdxSbz54W4TFx/we5LiGPCGmMKtSZHFBBGwGHvSul/NWEJ1TU8nJ1hdh2UBgjf2Pm6XZAayTkCx15CL/+NfLSgNnHQlcNL+z7xVK2kyqFV1tOmy846A2NtqlluXkrJp0scHC5ryq/cR16KnbnOE9tq/I2Z30cHsqqC0kKHfJTBdbOhJcXH1oKObUOcKc1tFhLjUC4J/grZ8e2MVKljtug2jSnLlbTbrdG+pPqdCFNkSdfBaQWpZnp1jAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIUJBfEt/JobKQljFqegHcJK1MWR0UbdTfVC4jDjX5yItG2igmwIvq0DaHWahrTPwdP3u2yDMyBZTfwwqzgHMg1s/OPCOddw+8m0E7n8p37PHtrzS7qlXHjJTC+Ihg/6QOhhHKmXnUN3ic2L4RdaCuIOBHS0qo8H3MhjnSqAXYKBajn2MDQYOTZMPTc4PqQNtL6cCa4RNUk3G+chlhiCzQ/Nb6hKCCHEuhCoIc6htnIcoWmj7WWR2Piy5GKSibZ4GQgcLgdu7jTrkbYr56DPzDUEEWa3jCcl/xqyAjWdsX9NCBf4o3nSIdwCAMJZSMbqN5lCzivATVQPxuAPS9fHbSI="
        },
        {
          "description": "invalid - incorrect data type inserted",
          "input": [
            1234567890
          ],
          "expected": false
        },
        {
          "description": "invalid - empty string provided",
          "input": "",
          "expected": false
        }
      ]
    },
    "directoryStatus": {
      "description": "Defines the different statuses for a Directory that can be used with Turbot.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "new",
            "inactive",
            "active",
            "New",
            "Inactive",
            "Active"
          ],
          "tests": [
            {
              "description": "Valid directory status (new)",
              "input": "new"
            },
            {
              "description": "Valid directory status (inactive)",
              "input": "inactive"
            },
            {
              "description": "Valid directory status (active)",
              "input": "active"
            },
            {
              "description": "Valid directory status (New)",
              "input": "New"
            },
            {
              "description": "Valid directory status (Inactive)",
              "input": "Inactive"
            },
            {
              "description": "Valid directory status (Active)",
              "input": "Active"
            },
            {
              "description": "Invalid directory status (Unknown)",
              "input": "Unknown",
              "expected": false
            }
          ]
        }
      ]
    },
    "alphanumericId": {
      "type": "string",
      "pattern": "^(?:[a-z][a-z0-9]?|[a-z][a-z0-9-_.]{0,62}[a-z0-9])$",
      "minLength": 1,
      "maxLength": 64,
      "tests": [
        {
          "description": "Valid string",
          "input": "an-id"
        },
        {
          "description": "Invalid string with special character",
          "input": "not-v@lid",
          "expected": false
        },
        {
          "description": "Invalid string with space inside",
          "input": "not valid",
          "expected": false
        }
      ]
    },
    "profileIdTemplate": {
      "description": "Template to calculate the ID for a profile based on a directory user.",
      "$ref": "turbot#/definitions/trimmedString"
    },
    "groupProfileIdTemplate": {
      "description": "Template to calculate the ID for a group profile based on a directory group.",
      "$ref": "turbot#/definitions/trimmedString"
    },
    "accessKey": {
      "description": "An Access Key including the secret access key.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "accessKey": {
          "$ref": "#/definitions/accessKeyId"
        },
        "secretKey": {
          "$ref": "#/definitions/secretKey"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "turbot": {
          "$ref": "turbot#/definitions/resourceMetadata"
        }
      },
      "additionalProperties": false,
      "required": [
        "title",
        "accessKey",
        "secretKey",
        "status"
      ],
      "tests": [
        {
          "description": "Valid",
          "input": {
            "accessKey": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "title": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "secretKey": "f3b01a61-2030-483e-9f71-0084feb15b3e",
            "status": "Active"
          }
        },
        {
          "description": "Invalid - missing accessKey",
          "input": {
            "title": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "secretKey": "f3b01a61-2030-483e-9f71-0084feb15b3e",
            "status": "Active"
          },
          "expected": false
        },
        {
          "description": "Invalid - missing secretKey",
          "input": {
            "title": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "accessKey": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "status": "Active"
          },
          "expected": false
        },
        {
          "description": "Invalid - missing status",
          "input": {
            "title": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "accessKey": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "secretKey": "f3b01a61-2030-483e-9f71-0084feb15b3e"
          },
          "expected": false
        },
        {
          "description": "Invalid - missing title",
          "input": {
            "accessKey": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "secretKey": "f3b01a61-2030-483e-9f71-0084feb15b3e",
            "status": "Active"
          },
          "expected": false
        },
        {
          "description": "Invalid - unknown property",
          "input": {
            "accessKey": "397eea31-598a-45a4-9f95-3b8a02bde026",
            "secretKey": "f3b01a61-2030-483e-9f71-0084feb15b3e",
            "status": "Active",
            "random": "value"
          },
          "expected": false
        }
      ]
    },
    "accessKeyId": {
      "description": "Access key for a Turbot access key pair.",
      "$ref": "#/definitions/uuidv4"
    },
    "secretKey": {
      "allOf": [
        {
          "$ref": "#/definitions/uuidv4"
        },
        {
          "description": "Secret key for a Turbot access key pair.",
          "x-turbot": {
            "secret": true
          }
        }
      ]
    },
    "uuidv4": {
      "description": "Unique identifier in <a href=\"https://www.uuidgenerator.net/version4\">UUID Version 4</a> format.",
      "example": "c97093ae-f387-4dfc-bb47-bba172b6cb41",
      "type": "string",
      "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
      "tests": [
        {
          "description": "Valid",
          "input": "c97093ae-f387-4dfc-bb47-bba172b6cb41"
        },
        {
          "description": "Invalid - too short",
          "input": "c97093ae-f387-4dfc-bb47-bba172b6cb4",
          "expected": false
        },
        {
          "description": "Invalid - special character",
          "input": "c97093ae-f387-4dfc-bb47-bba172b6cb4@",
          "expected": false
        },
        {
          "description": "Invalid - incorrect separator",
          "input": "c97093ae/f387/4dfc/bb47/bba172b6cb41",
          "expected": false
        }
      ]
    },
    "status": {
      "description": "Defines the different statuses for IAM resources in Turbot.",
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ],
      "tests": [
        {
          "description": "Valid status (Active)",
          "input": "Active"
        },
        {
          "description": "Valid status (Inactive)",
          "input": "Inactive"
        },
        {
          "description": "Invalid status (SomeUnknownStatus)",
          "input": "SomeUnknownStatus",
          "expected": false
        }
      ]
    },
    "googleDirectory": {
      "description": "Information about a Google directory.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "description": {
          "$ref": "turbot#/definitions/description"
        },
        "directoryType": {
          "const": "google"
        },
        "status": {
          "$ref": "#/definitions/directoryStatus"
        },
        "profileIdTemplate": {
          "$ref": "#/definitions/profileIdTemplate"
        },
        "groupProfileIdTemplate": {
          "$ref": "#/definitions/groupProfileIdTemplate"
        },
        "clientID": {
          "$ref": "#/definitions/oAuthClientID"
        },
        "clientSecret": {
          "$ref": "#/definitions/oAuthClientSecret"
        },
        "hostedDomain": {
          "$ref": "#/definitions/hostname"
        }
      }
    },
    "groupProfile": {
      "description": "Profile for a group in a directory.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "profileId": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "displayName": {
          "$ref": "#/definitions/displayName"
        }
      }
    },
    "displayName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256
    },
    "ldapDirectory": {
      "description": "Information about a local directory.",
      "type": "object",
      "properties": {
        "directoryType": {
          "const": "ldap"
        },
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "description": {
          "$ref": "turbot#/definitions/description"
        },
        "status": {
          "$ref": "#/definitions/directoryStatus"
        },
        "profileIdTemplate": {
          "$ref": "#/definitions/profileIdTemplate"
        },
        "groupProfileIdTemplate": {
          "$ref": "#/definitions/groupProfileIdTemplate"
        },
        "url": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "distinguishedName": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "password": {
          "$ref": "#/definitions/ldapPassword"
        },
        "tlsEnabled": {
          "type": "boolean"
        },
        "tlsClientCertificateAuthenticationEnabled": {
          "type": "boolean"
        },
        "tlsClientCertificate": {
          "$ref": "#/definitions/certificate"
        },
        "tlsClientPrivateKey": {
          "$ref": "#/definitions/tlsClientPrivateKey"
        },
        "tlsServerCertificate": {
          "$ref": "#/definitions/certificate"
        },
        "base": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "userObjectFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "disabledUserFilter": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "userMatchFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "userSearchFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "userSearchAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupObjectFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "groupSearchFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "groupSyncFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "userCanonicalNameAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "userEmailAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "userDisplayNameAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "userGivenNameAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "userFamilyNameAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "groupCanonicalNameAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "groupMemberOfAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "groupMembershipAttribute": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "connectivityTestFilter": {
          "$ref": "#/definitions/ldapFilter"
        },
        "rejectUnauthorized": {
          "type": "boolean"
        },
        "disabledGroupFilter": {
          "$ref": "#/definitions/ldapFilter"
        }
      },
      "tests": [
        {
          "description": "Valid LDAP Directory",
          "input": {
            "directoryType": "ldap",
            "title": "A Valid Directory",
            "status": "active",
            "profileIdTemplate": "{{profile.$source.mail}}",
            "groupProfileIdTemplate": "{{group.$source.cn}}",
            "url": "ldap://1.2.3.4",
            "distinguishedName": "admin",
            "password": "@dmin",
            "base": "DC=ad-us-east-2,DC=ad,DC=turbot,DC=com"
          }
        }
      ]
    },
    "ldapFilter": {
      "type": "string",
      "pattern": "^(.*)$"
    },
    "ldapPassword": {
      "allOf": [
        {
          "$ref": "turbot#/definitions/trimmedString"
        },
        {
          "x-turbot": {
            "secret": true
          }
        }
      ]
    },
    "tlsClientPrivateKey": {
      "type": "string",
      "maxLength": 2097152,
      "minLength": 1,
      "pattern": "(-{5}BEGIN (RSA )?PRIVATE KEY-{5})?([A-Za-z0-9/\n/+=/]*)(-{5}END (RSA )?PRIVATE KEY-{5})?",
      "x-turbot": {
        "secret": true
      }
    },
    "localDirectory": {
      "description": "Information about a local directory.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "directoryType": {
          "const": "local"
        },
        "status": {
          "$ref": "#/definitions/directoryStatus"
        },
        "profileIdTemplate": {
          "$ref": "#/definitions/profileIdTemplate"
        },
        "groupProfileIdTemplate": {
          "$ref": "#/definitions/groupProfileIdTemplate"
        },
        "turbot": {
          "$ref": "turbot#/definitions/resourceMetadata"
        },
        "description": {
          "$ref": "turbot#/definitions/description"
        }
      },
      "tests": [
        {
          "description": "Valid Local Directory",
          "input": {
            "title": "A Valid Directory",
            "directoryType": "local",
            "status": "Active",
            "profileIdTemplate": "{{profile.email}}",
            "groupProfileIdTemplate": "{{group.name}}"
          }
        }
      ]
    },
    "localDirectoryGroup": {
      "description": "Information about the Group in the Turbot Directory.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "name": {
          "$ref": "#/definitions/displayName"
        },
        "description": {
          "$ref": "turbot#/definitions/description"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "turbot": {
          "$ref": "turbot#/definitions/resourceMetadata"
        }
      },
      "tests": [
        {
          "description": "Valid Turbot Directory Group - minimal",
          "input": {
            "name": "Admins",
            "status": "Active",
            "title": "Admins"
          }
        },
        {
          "description": "Valid Turbot Directory User - full",
          "input": {
            "name": "Admins",
            "status": "Active",
            "description": "The group to represent Admins in Turbot",
            "title": "Admins"
          }
        }
      ]
    },
    "localDirectoryUser": {
      "description": "Information about a local directory user.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "id": {
          "$ref": "#/definitions/uuidv4"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "displayName": {
          "$ref": "#/definitions/displayName"
        },
        "givenName": {
          "$ref": "#/definitions/displayName"
        },
        "middleName": {
          "$ref": "#/definitions/displayName"
        },
        "familyName": {
          "$ref": "#/definitions/displayName"
        },
        "picture": {
          "$ref": "#/definitions/picture"
        },
        "password": {
          "$ref": "#/definitions/password"
        },
        "passwordTimestamp": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "turbot": {
          "$ref": "turbot#/definitions/resourceMetadata"
        }
      },
      "tests": [
        {
          "description": "Valid Local Directory User - minimal",
          "input": {
            "id": "c97093ae-f387-4dfc-bb47-bba172b6cb41",
            "email": "someone@somewhere.com",
            "password": "C0mpl3x1!",
            "status": "Active",
            "displayName": "Joe Bloggs",
            "title": "Joe Bloggs"
          }
        },
        {
          "description": "Valid Local Directory User - full",
          "input": {
            "id": "c97093ae-f387-4dfc-bb47-bba172b6cb41",
            "email": "someone@somewhere.com",
            "password": "C0mpl3x1!",
            "status": "Active",
            "displayName": "Joe Bloggs",
            "givenName": "Joe",
            "middleName": "Edward",
            "familyName": "Bloggs",
            "picture": "https://some.picture.repository.com/WZsdolEQl2s/photo.jpg?sz=50",
            "title": "Joe Bloggs"
          }
        }
      ]
    },
    "email": {
      "description": "Email address",
      "type": "string",
      "format": "email"
    },
    "password": {
      "description": "A secret password, usually highly complex and hidden from view.",
      "example": "ASf94nadf7ydbcidAOSDFbida",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "x-turbot": {
        "secret": true
      }
    },
    "profile": {
      "description": "Profile for a user in a directory.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "externalId": {
          "type": "string"
        },
        "profileId": {
          "$ref": "turbot#/definitions/trimmedString"
        },
        "lastLoginTimestamp": {
          "$ref": "turbot#/definitions/isoTimestamp"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "displayName": {
          "$ref": "#/definitions/displayName"
        },
        "givenName": {
          "$ref": "#/definitions/displayName"
        },
        "middleName": {
          "$ref": "#/definitions/displayName"
        },
        "familyName": {
          "$ref": "#/definitions/displayName"
        },
        "picture": {
          "$ref": "#/definitions/picture"
        },
        "turbot": {
          "$ref": "turbot#/definitions/resourceMetadata"
        }
      }
    },
    "samlDirectory": {
      "description": "Information about a SAML directory.",
      "type": "object",
      "properties": {
        "description": {
          "$ref": "turbot#/definitions/description"
        },
        "directoryType": {
          "const": "saml"
        },
        "status": {
          "$ref": "#/definitions/directoryStatus"
        },
        "entryPoint": {
          "$ref": "#/definitions/directoryEntryPoint"
        },
        "issuer": {
          "$ref": "#/definitions/directoryIssuer"
        },
        "certificate": {
          "$ref": "#/definitions/certificate"
        },
        "profileIdTemplate": {
          "$ref": "#/definitions/profileIdTemplate"
        },
        "groupProfileIdTemplate": {
          "$ref": "#/definitions/groupProfileIdTemplate"
        },
        "nameIdFormat": {
          "$ref": "#/definitions/nameIdFormat"
        },
        "signRequests": {
          "$ref": "#/definitions/signRequests"
        },
        "signaturePrivateKey": {
          "$ref": "#/definitions/signaturePrivateKey"
        },
        "signatureAlgorithm": {
          "$ref": "#/definitions/directorySignatureAlgorithm"
        },
        "allowIdpInitiatedSSO": {
          "type": "boolean"
        },
        "allowGroupSyncing": {
          "type": "boolean"
        },
        "profileGroupsAttribute": {
          "type": "string"
        },
        "groupFilter": {
          "type": "string"
        }
      },
      "tests": [
        {
          "description": "Valid SAML Directory",
          "input": {
            "title": "A Valid SAML Directory",
            "description": "A Valid SAML Directory for testing.",
            "status": "New",
            "directoryType": "saml",
            "entryPoint": "https://example.com/myapp/sso/saml",
            "issuer": "https://example.com/myapp/sso/saml",
            "allowIdpInitiatedSSO": false,
            "profileIdTemplate": "{{profile.email}}",
            "groupProfileIdTemplate": "{{group.name}}",
            "certificate": "-----BEGIN CERTIFICATE-----\nMIIDoDCCAoigAwIBAgIGAV2Tqqa1MA0GCSqGSIb3DQEBCwUAMIGQMQswCQYDVQQGEwJVUzETMBEG\nA1UECAwKQ2FsaWZvcm5pYTEWMBQGA1UEBwwNU2FuIEZyYW5jaXNjbzENMAsGA1UECgwET2t0YTEU\nMBIGA1UECwwLU1NPUHJvdmlkZXIxETAPBgNVBAMMCHR1cmJvdGhxMRwwGgYJKoZIhvcNAQkBFg1p\nbmZvQG9rdGEuY29tMB4XDTE3MDczMDEzMjI0MFoXDTI3MDczMDEzMjM0MFowgZAxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRYwFAYDVQQHDA1TYW4gRnJhbmNpc2NvMQ0wCwYDVQQK\nDARPa3RhMRQwEgYDVQQLDAtTU09Qcm92aWRlcjERMA8GA1UEAwwIdHVyYm90aHExHDAaBgkqhkiG\n9w0BCQEWDWluZm9Ab2t0YS5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCYHhIn\nVUFP4NRWlqwplgSo7esXlXKiedkTf8+N6AXBah1xIiMubCRXBuDgtjz1ZwDpGa/XY8YtKZGABY+S\nP772WXNMaYc2RNdxSbz54W4TFx/we5LiGPCGmMKtSZHFBBGwGHvSul/NWEJ1TU8nJ1hdh2UBgjf2\nPm6XZAayTkCx15CL/+NfLSgNnHQlcNL+z7xVK2kyqFV1tOmy846A2NtqlluXkrJp0scHC5ryq/cR\n16KnbnOE9tq/I2Z30cHsqqC0kKHfJTBdbOhJcXH1oKObUOcKc1tFhLjUC4J/grZ8e2MVKljtug2j\nSnLlbTbrdG+pPqdCFNkSdfBaQWpZnp1jAgMBAAEwDQYJKoZIhvcNAQELBQADggEBAIUJBfEt/Job\nKQljFqegHcJK1MWR0UbdTfVC4jDjX5yItG2igmwIvq0DaHWahrTPwdP3u2yDMyBZTfwwqzgHMg1s\n/OPCOddw+8m0E7n8p37PHtrzS7qlXHjJTC+Ihg/6QOhhHKmXnUN3ic2L4RdaCuIOBHS0qo8H3Mhj\nnSqAXYKBajn2MDQYOTZMPTc4PqQNtL6cCa4RNUk3G+chlhiCzQ/Nb6hKCCHEuhCoIc6htnIcoWmj\n7WWR2Piy5GKSibZ4GQgcLgdu7jTrkbYr56DPzDUEEWa3jCcl/xqyAjWdsX9NCBf4o3nSIdwCAMJZ\nSMbqN5lCzivATVQPxuAPS9fHbSI=\n-----END CERTIFICATE-----",
            "signaturePrivateKey": "-----BEGIN CERTIFICATE-----\nMIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6\nb24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd\nBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN\nMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD\nVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z\nb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt\nYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ\n21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T\nrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE\nIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4\nnUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb\nFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb\nNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICiTCCAfICCQD6m7oRw0uXOjANBgkqhkiG9w0BAQUFADCBiDELMAkGA1UEBhMC\nVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6\nb24xFDASBgNVBAsTC0lBTSBDb25zb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAd\nBgkqhkiG9w0BCQEWEG5vb25lQGFtYXpvbi5jb20wHhcNMTEwNDI1MjA0NTIxWhcN\nMTIwNDI0MjA0NTIxWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAwDgYD\nVQQHEwdTZWF0dGxlMQ8wDQYDVQQKEwZBbWF6b24xFDASBgNVBAsTC0lBTSBDb25z\nb2xlMRIwEAYDVQQDEwlUZXN0Q2lsYWMxHzAdBgkqhkiG9w0BCQEWEG5vb25lQGFt\nYXpvbi5jb20wgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMaK0dn+a4GmWIWJ\n21uUSfwfEvySWtC2XADZ4nB+BLYgVIk60CpiwsZ3G93vUEIO3IyNoH/f0wYK8m9T\nrDHudUZg3qX4waLG5M43q7Wgc/MbQITxOUSQv7c7ugFFDzQGBzZswY6786m86gpE\nIbb3OhjZnzcvQAaRHhdlQWIMm2nrAgMBAAEwDQYJKoZIhvcNAQEFBQADgYEAtCu4\nnUhVVxYUntneD9+h8Mg9q6q+auNKyExzyLwaxlAoo7TJHidbtS4J5iNmZgXL0Fkb\nFFBjvSfpJIlJ00zbhNYS5f6GuoEDmFJl0ZxBHjJnyp378OD8uTs7fLvjx79LjSTb\nNYiytVbZPQUQ5Yaxu2jXnimvw3rrszlaEXAMPLE=\n-----END CERTIFICATE-----"
          }
        }
      ]
    },
    "directoryEntryPoint": {
      "description": "Defines the identity provider single sign-on (entry point) URL.",
      "type": "string",
      "format": "uri",
      "tests": [
        {
          "description": "Valid directory entry point",
          "input": "https://example.com/myapp/sso/saml"
        }
      ]
    },
    "signaturePrivateKey": {
      "type": "string",
      "maxLength": 2097152,
      "minLength": 1,
      "pattern": "(-{5}BEGIN (RSA )?PRIVATE KEY-{5})?([A-Za-z0-9/\n/+=/]*)(-{5}END (RSA )?PRIVATE KEY-{5})?",
      "x-turbot": {
        "secret": true
      }
    },
    "directoryIssuer": {
      "description": "Defines the issuer for the SAML identity provider.",
      "type": "string",
      "format": "uri",
      "tests": [
        {
          "description": "Valid directory issuer",
          "input": "https://example.com/myapp/sso/saml"
        }
      ]
    },
    "nameIdFormat": {
      "description": "Defines the name identifier format to request from the identity provider.",
      "type": "string",
      "enum": [
        "email",
        "unspecified"
      ]
    },
    "signRequests": {
      "type": "boolean",
      "tests": [
        {
          "input": false
        },
        {
          "input": true
        },
        {
          "description": "invalid - array",
          "input": [],
          "expected": false
        },
        {
          "description": "invalid - string",
          "input": "",
          "expected": false
        }
      ]
    },
    "directorySignatureAlgorithm": {
      "description": "Defines the type of algorithm",
      "type": "string",
      "enum": [
        "SHA-1",
        "SHA-256",
        "SHA-512"
      ]
    },
    "sshKey": {
      "description": "An SSH Key, not including the private key.",
      "example": {
        "fingerprint": "78:cf:8e:1a:be:6d:65:5c:19:04:88:a6:d1:c9:8a:3f",
        "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmAO/njb8ZG5zEPgEpB39DHtwBfwMyGuh/+Ihjv8ww60c2zE+skbMsMNIwBiOG7WCQun4qEckY57ki6lYM0HFTc3FYseT5XFCMUugwj5HK5g7SjFXan+6mFKjv0HOF7HeZREz18cTCDAhkwyTFwyM3vK76FNDoPSfq6OL6fSgVJroL6OHnyrqfYJzpkOFiTRjw3VkqZDEId8kBAoTi8NCUxK33Nc/olcf58tVr2m94uwOt8EwhKFpf1+hSzgHDRxqODS6WsoE+cGIVNPBb2E7jZJF/LIH/SNyuK7yeivTEIT0J2+eFwQHQd5IMShuW2tDaHv9mecPzSWt6NUJCGcFd joe@example.com",
        "$signaturePrivateKey": "-----BEGIN RSA PRIVATE KEY-----\nMIIEAReallyComplexLongStringShortenedHere\nAReallyComplexLongStringShortenedHere===\n-----END RSA PRIVATE KEY-----",
        "createTimestamp": "2017-01-10T18:50:30.364Z",
        "status": "Active"
      },
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "fingerprint": {
          "$ref": "#/definitions/sshKeyFingerprint"
        },
        "publicKey": {
          "$ref": "#/definitions/sshPublicKey"
        },
        "status": {
          "$ref": "#/definitions/status"
        },
        "turbot": {
          "$ref": "turbot#/definitions/resourceMetadata"
        }
      },
      "required": [
        "title",
        "publicKey",
        "fingerprint",
        "status"
      ],
      "additionalProperties": false,
      "tests": [
        {
          "description": "Valid",
          "input": {
            "title": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAReallyComplexLongStringShortenedHere/dDlDJtqc comment_here",
            "fingerprint": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "status": "Active"
          }
        },
        {
          "description": "Valid - Without AWS Fingerprint",
          "input": {
            "title": "SSH Key (2e:45:5f:72)",
            "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDM9+sNUriTVCJfoNochPGQvzNy95BdeBa4x0n6jWii4LY2qIPUTwblkzTJ+qqwm1Wqrl5WHvzI6kdbbcS+MgYBaWmw248IS/oPNSjlMPwpO1MA1zxwpRMj+HUqyqz7J3PN4txo4mYJGKjzzYB1MgEwdMYiLFJPmicPx57AdNyja/+kg7we7CCSPrrCVSkfpHd0OKAo/VN1ESIWJCpRsXMqrVlDJr4lAfXohmDflXjfDKlY0dXD9PDosGQcXkqsBv6FU326eAN9IY8i+X5qhY8L6i77Jnmcj6GUtlUWsa7ZShHNHzVL9DtiNd/pk3N+xUT5PhbDxj0NZSiCzAGiI+er aaa@jf.turbot.local",
            "fingerprint": "2e:45:5f:72:fc:30:e9:22:d6:c5:76:a9:1a:69:93:f0",
            "status": "Active"
          }
        },
        {
          "description": "Invalid - Missing title",
          "input": {
            "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAReallyComplexLongStringShortenedHere/dDlDJtqc comment_here",
            "fingerprint": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "status": "Active"
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing public key",
          "input": {
            "title": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "fingerprint": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "status": "Active"
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing fingerprint",
          "input": {
            "title": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAReallyComplexLongStringShortenedHere/dDlDJtqc comment_here",
            "status": "Active"
          },
          "expected": false
        },
        {
          "description": "Invalid - Missing status",
          "input": {
            "title": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAReallyComplexLongStringShortenedHere/dDlDJtqc comment_here",
            "fingerprint": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8"
          },
          "expected": false
        },
        {
          "description": "Invalid - Unknown property",
          "input": {
            "title": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAReallyComplexLongStringShortenedHere/dDlDJtqc comment_here",
            "fingerprint": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
            "status": "Active",
            "foo": "bar"
          },
          "expected": false
        }
      ]
    },
    "sshKeyFingerprint": {
      "description": "An SSH key fingerprint string.",
      "example": "68:df:b2:22:d8:43:5d:36:75:c1:d8:59:c0:8c:22:e8",
      "type": "string",
      "pattern": "^[a-f0-9]{2}(:[a-f0-9]{2}){15}$"
    },
    "sshPublicKey": {
      "description": "An SSH public key string.",
      "example": "ssh-rsa AAAAB3NzaC1yc2EAReallyComplexLongStringShortenedHere/dDlDJtqc comment_here",
      "type": "string"
    },
    "turbotDirectory": {
      "description": "Information about a Turbot directory.",
      "type": "object",
      "properties": {
        "title": {
          "$ref": "turbot#/definitions/title"
        },
        "description": {
          "$ref": "turbot#/definitions/description"
        },
        "directoryType": {
          "const": "turbot"
        },
        "status": {
          "$ref": "#/definitions/directoryStatus"
        },
        "profileIdTemplate": {
          "$ref": "#/definitions/profileIdTemplate"
        },
        "server": {
          "$ref": "#/definitions/turbotDirectoryServer"
        }
      }
    },
    "turbotDirectoryServer": {
      "description": "The server to connect to for authentication via Turbot",
      "type": "string"
    }
  },
  "permission": {
    "levels": {
      "user": {
        "title": "User",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "none": {
        "title": "None",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "whitelist": {
        "title": "Whitelist",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "metadata": {
        "title": "Metadata",
        "parent": "#/permission/levels/user",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "readonly": {
        "title": "ReadOnly",
        "parent": "#/permission/levels/metadata",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "operator": {
        "title": "Operator",
        "parent": "#/permission/levels/readonly",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "admin": {
        "title": "Admin",
        "parent": "#/permission/levels/operator",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "owner": {
        "title": "Owner",
        "parent": "#/permission/levels/admin",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "superuser": {
        "title": "SuperUser",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      },
      "role": {
        "title": "Role",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      }
    },
    "types": {
      "turbot": {
        "title": "Turbot",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/turbot"
      }
    }
  },
  "policy": {
    "types": {
      "turbotConsoleSessionTimeoutMins": {
        "title": "Console Session Timeout",
        "icon": "fal-clock",
        "description": "Session timeout (in minutes) for Turbot authentication tokens used in the user\ninterface and other API sessions. The default is 12 hours.\n\nWhile using the user interface your token will be automatically refreshed on a\nregular basis, so in practice this timeout reflects the period of inactivity\nrather than a fixed session length.\n\nAccess keys are not subject to this timeout. Access keys are long lived tokens\n(with their own expiration) that may used to initiate a session, which then\nhas this timeout.\n",
        "parent": "turbot#/policy/types/workspace",
        "targets": "turbot#/resource/types/turbot",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Console:SessionTimeoutMins"
        ],
        "schema": {
          "type": "integer",
          "minimum": 15,
          "default": 720,
          "tests": [
            {
              "input": 90
            },
            {
              "input": 10,
              "expected": false
            }
          ]
        }
      },
      "permissions": {
        "title": "Permissions",
        "parent": "#/resource/types/iam",
        "icon": "fal-calculator",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "permissionsCompiled": {
        "title": "Compiled",
        "parent": "#/policy/types/permissions",
        "icon": "fal-calculator",
        "category": "turbot#/control/categories/iamPermissions"
      },
      "turbotPermissionsCompiledLevels": {
        "title": "Turbot",
        "icon": "fal-calculator",
        "description": "A list of turbot permissions that Turbot may use to grant permissions on folders and above.\n",
        "parent": "turbot-iam#/policy/types/permissionsCompiledLevels",
        "targets": "turbot#/resource/interfaces/grants",
        "category": "turbot#/control/categories/iamPermissions",
        "schema": {
          "$ref": "#/definitions/turbotLevelDefinitionList",
          "example": [
            [
              {
                "type": "tmod:@turbot/turbot#/permission/types/turbot",
                "level": "tmod:@turbot/turbot-iam#/permission/levels/admin"
              },
              {
                "type": "tmod:@turbot/turbot#/permission/types/turbot",
                "level": "tmod:@turbot/turbot-iam#/permission/levels/operator"
              }
            ]
          ]
        }
      },
      "permissionsCompiledLevels": {
        "title": "Levels",
        "icon": "fal-calculator",
        "description": "A calculated policy that Turbot uses to create a single list of ALL effective permissions levels for all services.",
        "parent": "#/policy/types/permissionsCompiled",
        "targets": "turbot#/resource/interfaces/grants",
        "category": "turbot#/control/categories/iamPermissions",
        "readOnly": true,
        "schema": {
          "$ref": "#/definitions/rightDefinitionList"
        }
      },
      "accessKeyGASchemaMigration": {
        "title": "GA Schema Migration",
        "icon": "fal-arrow-from-left",
        "description": "Migrate access key schema to the required format for GA of Turbot v5.",
        "parent": "#/resource/types/accessKey",
        "targets": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceMigration",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Migrated",
            "Enforce: Migrated"
          ],
          "default": "Check: Migrated"
        }
      },
      "accessKeyExpiration": {
        "title": "Expiration",
        "icon": null,
        "description": "Check if the access key has expired and provide a configurable warning period before enforcement.\n\n`Deactivate expired` will deactivate the key on the expiration day.\n\n`Delete expired` will delete the key on the expiration day.\n\nDuring the warning period, this control will be in Alarm, but the access\nkey remains enabled and functional.\n",
        "parent": "#/resource/types/accessKey",
        "targets": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceExpiration",
        "aka": [
          "Turbot:Directory:ProfileAccessKeyExpiration"
        ],
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Not expired",
            "Check: Does not expire in next 1 day",
            "Check: Does not expire in next 3 days",
            "Check: Does not expire in next 7 days",
            "Check: Does not expire in next 14 days",
            "Check: Does not expire in next 30 days",
            "Check: Does not expire in next 60 days",
            "Check: Does not expire in next 90 days",
            "Enforce: Deactivate expired",
            "Enforce: Deactivate expired with 1 day warning",
            "Enforce: Deactivate expired with 3 days warning",
            "Enforce: Deactivate expired with 7 days warning",
            "Enforce: Deactivate expired with 14 days warning",
            "Enforce: Deactivate expired with 30 days warning",
            "Enforce: Deactivate expired with 60 days warning",
            "Enforce: Deactivate expired with 90 days warning",
            "Enforce: Delete expired",
            "Enforce: Delete expired with 1 day warning",
            "Enforce: Delete expired with 3 days warning",
            "Enforce: Delete expired with 7 days warning",
            "Enforce: Delete expired with 14 days warning",
            "Enforce: Delete expired with 30 days warning",
            "Enforce: Delete expired with 60 days warning",
            "Enforce: Delete expired with 90 days warning"
          ],
          "example": [
            "Enforce: Delete expired with 7 days warning"
          ],
          "default": "Skip"
        }
      },
      "accessKeyExpirationDays": {
        "title": "Days",
        "description": "Define the maximum age in days for profile access keys.\n\nDefault is `365` days, per the [CIS Password Policy\nGuide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n",
        "parent": "#/policy/types/accessKeyExpiration",
        "targets": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceExpiration",
        "aka": [
          "Turbot:Directory:ProfileAccessKeyExpirationDays"
        ],
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 365,
          "tests": [
            {
              "description": "Valid expiration",
              "input": 7
            },
            {
              "description": "Invalid expiration",
              "input": -1,
              "expected": false
            }
          ]
        }
      },
      "groupLdapSynchronization": {
        "title": "LDAP Synchronization",
        "icon": "fal-arrow-from-left",
        "description": "LDAP synchronizaton for Group Profiles enables synchronization of LDAP Groups in certain intervals of time\nfrom Active Directory.\n\nThe policy can be set on the LDAP Directory as a whole, or on individual Groups Profiles if exceptions are needed.\n",
        "parent": "#/resource/types/groupProfile",
        "targets": "#/resource/types/groupProfile",
        "category": "turbot#/control/categories/iam",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "localDirectoryUserGASchemaMigration": {
        "title": "GA Schema Migration",
        "icon": "fal-arrow-from-left",
        "description": "Migrate local directory user schema to the required format for GA of Turbot v5.",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/resourceMigration",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Migrated",
            "Enforce: Migrated"
          ],
          "default": "Check: Migrated"
        }
      },
      "passwordMinimumLength": {
        "title": "Password Minimum Length",
        "icon": "fal-arrows-h",
        "description": "Minimum password length for Local Directory Users.\n\nDefault is `14` characters, per the [CIS Password Policy Guide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Directory:PasswordMinimumLength"
        ],
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 14,
          "tests": [
            {
              "input": 12
            },
            {
              "input": 0,
              "expected": false
            }
          ]
        }
      },
      "passwordMinimumLowercaseCharacters": {
        "title": "Password Minimum Lowercase Characters",
        "icon": "fal-arrow-to-bottom",
        "description": "Minimum number of lowercase characters required in passwords for Local Directory Users.\n\nDefault is `1`, per the [CIS Password Policy Guide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Directory:PasswordMinimumLowercaseCharacters"
        ],
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 1,
          "tests": [
            {
              "input": 2
            },
            {
              "input": -1,
              "expected": false
            }
          ]
        }
      },
      "passwordMinimumUppercaseCharacters": {
        "title": "Password Minimum Uppercase Characters",
        "icon": "fal-arrow-to-top",
        "description": "Minimum number of uppercase characters required in passwords for Local Directory Users.\n\nDefault is `1`, per the [CIS Password Policy Guide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Directory:PasswordMinimumUppercaseCharacters"
        ],
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 1,
          "tests": [
            {
              "input": 2
            },
            {
              "input": -1,
              "expected": false
            }
          ]
        }
      },
      "passwordMinimumNumericCharacters": {
        "title": "Password Minimum Numeric Characters",
        "icon": "fal-hashtag",
        "description": "Minimum number of numeric characters required in passwords for Local Directory Users.\n\nDefault is `1` character, per the [CIS Password Policy Guide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Directory:PasswordMinimumNumericCharacters"
        ],
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 1,
          "tests": [
            {
              "input": 2
            },
            {
              "input": -1,
              "expected": false
            }
          ]
        }
      },
      "passwordMinimumSymbolicCharacters": {
        "title": "Password Minimum Symbolic Characters",
        "icon": "fal-exclamation-circle",
        "description": "Minimum number of symbolic characters required in passwords for Local Directory Users.\n\nDefault is `1` character, per the [CIS Password Policy Guide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Directory:PasswordMinimumSymbolicCharacters"
        ],
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 1,
          "tests": [
            {
              "input": 2
            },
            {
              "input": -1,
              "expected": false
            }
          ]
        }
      },
      "passwordExpirationPeriodInHours": {
        "title": "Password expiration period in hours",
        "icon": "fal-clock",
        "description": "The period in hours after which the password for a Local Directory User is\nconsidered expired. For example, a period of 2160 (90x24) hours will allow\nthe password to be used for up to 90 days before it must be changed.\n\nDefault is `8760` hours (365 days), per the [CIS Password Policy\nGuide](https://www.cisecurity.org/white-papers/cis-password-policy-guide/).\n\nThe maximum allowed value is `8760` hours i.e `365` days.\n\n**Note**: Setting the value to `-1` will never expire the password where as setting the value to `0` will expire the password.\n",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": "#/resource/types/localDirectoryUser",
        "category": "turbot#/control/categories/iam",
        "aka": [
          "Turbot:Directory:PasswordExpirationPeriodInHours"
        ],
        "schema": {
          "type": "number",
          "minimum": -1,
          "maximum": 8760,
          "default": 8760,
          "tests": [
            {
              "input": 720
            },
            {
              "input": 0,
              "expected": true
            },
            {
              "input": -2,
              "expected": false
            }
          ]
        }
      },
      "profileExpiration": {
        "title": "Expiration",
        "icon": "fal-user-clock",
        "description": "Check if a profile has expired and provide a configurable warning period before deactivation. After profile dectivation, any active access keys linked to the profile will no longer be treated as active. To reactivate a profile, a user simply needs to log into the Turbot Console again via their Directory source.",
        "parent": "#/resource/types/profile",
        "targets": "#/resource/types/profile",
        "category": "turbot#/control/categories/resourceExpiration",
        "aka": [
          "Turbot:Directory:ProfileExpiration"
        ],
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Not expired",
            "Check: Does not expire in next 1 day",
            "Check: Does not expire in next 3 days",
            "Check: Does not expire in next 7 days",
            "Check: Does not expire in next 14 days",
            "Check: Does not expire in next 30 days",
            "Check: Does not expire in next 60 days",
            "Check: Does not expire in next 90 days",
            "Enforce: Deactivate expired",
            "Enforce: Deactivate expired with 1 day warning",
            "Enforce: Deactivate expired with 3 days warning",
            "Enforce: Deactivate expired with 7 days warning",
            "Enforce: Deactivate expired with 14 days warning",
            "Enforce: Deactivate expired with 30 days warning",
            "Enforce: Deactivate expired with 60 days warning",
            "Enforce: Deactivate expired with 90 days warning",
            "Enforce: Delete expired",
            "Enforce: Delete expired with 1 day warning",
            "Enforce: Delete expired with 3 days warning",
            "Enforce: Delete expired with 7 days warning",
            "Enforce: Delete expired with 14 days warning",
            "Enforce: Delete expired with 30 days warning",
            "Enforce: Delete expired with 60 days warning",
            "Enforce: Delete expired with 90 days warning"
          ],
          "example": [
            "Check: Does not expire in next 7 days"
          ],
          "default": "Skip"
        }
      },
      "profileExpirationDays": {
        "title": "Days",
        "icon": "fal-calendar-times",
        "description": "Define the maximum age in days allowed for profiles since last login.",
        "parent": "#/policy/types/profileExpiration",
        "targets": "#/resource/types/profile",
        "category": "turbot#/control/categories/resourceExpiration",
        "aka": [
          "Turbot:Directory:ProfileExpirationDays"
        ],
        "schema": {
          "type": "integer",
          "minimum": 0,
          "tests": [
            {
              "description": "Valid expiration",
              "input": 7
            },
            {
              "description": "Invalid expiration",
              "input": -1,
              "expected": false
            }
          ],
          "default": 0
        }
      },
      "profileLdapSynchronization": {
        "title": "LDAP Synchronization",
        "icon": "fal-arrow-from-left",
        "description": "LDAP synchronizaton for Profiles enables synchronization of LDAP Users in certain intervals of time\nfrom Active Directory.\n\nThe policy can be set on the LDAP Directory as a whole, or on individual Profiles if exceptions are needed.\n",
        "parent": "#/resource/types/profile",
        "targets": "#/resource/types/profile",
        "category": "turbot#/control/categories/iam",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Check: Active",
            "Enforce: Active",
            "Enforce: Delete inactive with 1 day warning",
            "Enforce: Delete inactive with 3 days warning",
            "Enforce: Delete inactive with 7 days warning",
            "Enforce: Delete inactive with 14 days warning",
            "Enforce: Delete inactive with 30 days warning",
            "Enforce: Delete inactive with 60 days warning",
            "Enforce: Delete inactive with 90 days warning",
            "Enforce: Delete inactive with 180 days warning",
            "Enforce: Delete inactive with 365 days warning"
          ],
          "example": [
            "Check: Active"
          ],
          "default": "Skip"
        }
      },
      "samlGroupSync": {
        "title": "Group Synchronization",
        "icon": "fal-arrow-from-left",
        "description": "Synchronize the profile groups in SAML during login.",
        "parent": "#/resource/types/samlDirectory",
        "targets": "#/resource/types/samlDirectory",
        "category": "turbot#/control/categories/iam",
        "schema": {
          "type": "string",
          "enum": [
            "Skip",
            "Enforce: Enabled"
          ],
          "example": [
            "Enforce: Enabled"
          ],
          "default": "Skip"
        }
      }
    }
  },
  "resource": {
    "interfaces": {
      "identity": {
        "title": "Identity Interface",
        "description": "Identity interface to model resources in Turbot that can be used as identities for events e.g. resource updated.",
        "category": "turbot#/resource/categories/iam",
        "schema": {
          "$ref": "#/definitions/identity"
        }
      },
      "levels": {
        "title": "Levels",
        "description": "Level interface",
        "category": "turbot#/resource/categories/iam"
      }
    },
    "types": {
      "iam": {
        "title": "IAM",
        "icon": "fal-user-shield",
        "description": "Turbot IAM service.",
        "parent": "turbot#/resource/types/turbot",
        "category": "turbot#/resource/categories/iam",
        "schema": {
          "$ref": "#/definitions/iam"
        }
      },
      "accessKey": {
        "title": "Access Key",
        "icon": "fal-key",
        "category": "turbot#/resource/categories/iamAccessKey",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "#/resource/types/profile"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/accessKey"
        }
      },
      "googleDirectory": {
        "title": "Google Directory",
        "icon": "fab-google",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/googleDirectory"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/googleDirectory"
            },
            {
              "type": "object",
              "required": [
                "title",
                "directoryType",
                "status",
                "profileIdTemplate",
                "clientID",
                "clientSecret"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/googleDirectory"
            },
            {
              "type": "object",
              "properties": {
                "directoryType": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "groupProfile": {
        "title": "Group Profile",
        "icon": "fal-users",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "#/resource/types/ldapDirectory",
          "#/resource/types/samlDirectory"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/groupProfile"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/groupProfile"
            },
            {
              "type": "object",
              "required": [
                "status",
                "title"
              ]
            }
          ]
        }
      },
      "ldapDirectory": {
        "title": "LDAP Directory",
        "icon": "fal-university",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/ldapDirectory"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/ldapDirectory"
            },
            {
              "type": "object",
              "required": [
                "directoryType",
                "title",
                "status",
                "profileIdTemplate",
                "url",
                "distinguishedName",
                "password",
                "base"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/ldapDirectory"
            },
            {
              "type": "object",
              "properties": {
                "directoryType": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "localDirectory": {
        "title": "Local Directory",
        "icon": "fal-address-book",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot",
          "#/resource/types/ldapDirectory"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/localDirectory"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/localDirectory"
            },
            {
              "type": "object",
              "required": [
                "title",
                "directoryType",
                "status",
                "profileIdTemplate"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/localDirectory"
            },
            {
              "type": "object",
              "properties": {
                "directoryType": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "localDirectoryGroup": {
        "title": "Group",
        "icon": "fas-users",
        "category": "turbot#/resource/categories/iamGroup",
        "parent": "#/resource/types/localDirectory",
        "resourceParents": [
          "#/resource/types/localDirectory"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/localDirectoryGroup"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/localDirectoryGroup"
            },
            {
              "type": "object",
              "required": [
                "name",
                "status",
                "title"
              ]
            }
          ]
        }
      },
      "localDirectoryUser": {
        "title": "User",
        "icon": "fas-user",
        "category": "turbot#/resource/categories/iamUser",
        "parent": "#/resource/types/localDirectory",
        "resourceParents": [
          "#/resource/types/localDirectory"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/localDirectoryUser"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/localDirectoryUser"
            },
            {
              "type": "object",
              "required": [
                "title",
                "email",
                "status",
                "displayName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/localDirectoryUser"
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "profile": {
        "title": "Profile",
        "icon": "fal-user",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "#/resource/types/ldapDirectory",
          "#/resource/types/localDirectory",
          "#/resource/types/googleDirectory",
          "#/resource/types/samlDirectory",
          "#/resource/types/turbotDirectory"
        ],
        "metadataTemplates": {
          "title": "{{ $.displayName }}"
        },
        "schema": {
          "$ref": "#/definitions/profile"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/profile"
            },
            {
              "type": "object",
              "required": [
                "title",
                "status",
                "email",
                "displayName",
                "givenName",
                "familyName"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/profile"
            },
            {
              "type": "object",
              "properties": {
                "externalId": {
                  "type": "null"
                },
                "profileId": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "samlDirectory": {
        "title": "SAML Directory",
        "icon": "far-caret-square-right",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot",
          "#/resource/types/ldapDirectory"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/samlDirectory"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/samlDirectory"
            },
            {
              "type": "object",
              "required": [
                "status",
                "directoryType",
                "certificate",
                "entryPoint",
                "profileIdTemplate"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/samlDirectory"
            },
            {
              "type": "object",
              "properties": {
                "directoryType": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "sshKey": {
        "title": "SSH Key",
        "icon": "fal-key",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "#/resource/types/profile"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/sshKey"
        }
      },
      "turbotDirectory": {
        "title": "Turbot Directory",
        "icon": "fab-android",
        "category": "turbot#/resource/categories/iam",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot"
        ],
        "metadataTemplates": {
          "title": "{{ $.title }}"
        },
        "schema": {
          "$ref": "#/definitions/turbotDirectory"
        },
        "createSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/turbotDirectory"
            },
            {
              "type": "object",
              "required": [
                "title",
                "directoryType",
                "status",
                "profileIdTemplate",
                "server"
              ]
            }
          ]
        },
        "updateSchema": {
          "allOf": [
            {
              "$ref": "#/definitions/turbotDirectory"
            },
            {
              "type": "object",
              "properties": {
                "directoryType": {
                  "type": "null"
                },
                "server": {
                  "type": "null"
                }
              }
            }
          ]
        }
      },
      "turbotIdentity": {
        "title": "Turbot Identity",
        "icon": "fab-android",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot"
        ],
        "category": "turbot#/resource/categories/iam",
        "interfaces": [
          "#/resource/interfaces/identity"
        ],
        "metadataTemplates": {
          "akas": "- \"turbot://identity/turbot\"\n",
          "title": "Turbot Identity"
        },
        "schema": {
          "type": "object",
          "additionalProperties": true
        }
      },
      "unidentifiedIdentity": {
        "title": "Unidentified Identity",
        "icon": "fal-question",
        "parent": "#/resource/types/iam",
        "resourceParents": [
          "turbot#/resource/types/turbot"
        ],
        "category": "turbot#/resource/categories/iam",
        "interfaces": [
          "#/resource/interfaces/identity"
        ],
        "metadataTemplates": {
          "akas": "- \"turbot://identity/unidentified\"\n",
          "title": "Unidentified Identity"
        },
        "schema": {
          "type": "object",
          "additionalProperties": true
        }
      }
    }
  },
  "control": {
    "types": {
      "accessKeyExpiration": {
        "title": "Expiration",
        "icon": "fal-user-clock",
        "description": "Ensure that a access key is deactivated on expiration.",
        "parent": "#/resource/types/accessKey",
        "targets": "#/resource/types/accessKey",
        "category": "turbot#/control/categories/resourceExpiration",
        "help": "#/help/profileAccessKeyExpiration",
        "defaultInterval": {
          "hours": 1
        },
        "minInterval": {
          "hours": 1
        },
        "maxInterval": {
          "hours": 2
        }
      },
      "accessKeyGASchemaMigration": {
        "title": "GA Schema Migration",
        "icon": "fal-arrow-from-left",
        "description": "Migrate access key schema to the required format for GA of Turbot v5.",
        "parent": "#/resource/types/accessKey",
        "targets": [
          "#/resource/types/accessKey"
        ],
        "category": "turbot#/control/categories/resourceMigration",
        "events": [
          "resource.turbot.com:Create",
          "resource.turbot.com:Update"
        ]
      },
      "groupLdapSynchronization": {
        "title": "LDAP Synchronization",
        "icon": "fal-calendar-check",
        "description": "Take action when a Group Profile is created or is already present in a LDAP directory based on the policy setting configured for the same.\n",
        "parent": "#/resource/types/groupProfile",
        "targets": "#/resource/types/groupProfile",
        "category": "turbot#/control/categories/iam",
        "events": []
      },
      "connectivityTest": {
        "title": "Connectivity Test",
        "icon": "list-alt",
        "description": "Performs LDAP connectivity test.",
        "parent": "#/resource/types/ldapDirectory",
        "targets": [
          "#/resource/types/ldapDirectory"
        ],
        "category": "turbot#/control/categories/turbot",
        "events": [],
        "defaultInterval": {
          "hours": 1
        },
        "minInterval": {
          "hours": 1
        },
        "maxInterval": {
          "hours": 12
        }
      },
      "localDirectoryUserGASchemaMigration": {
        "title": "GA Schema Migration",
        "icon": "fal-arrow-from-left",
        "description": "Migrate local directory user schema to the required format for GA of Turbot v5.",
        "parent": "#/resource/types/localDirectoryUser",
        "targets": [
          "#/resource/types/localDirectoryUser"
        ],
        "category": "turbot#/control/categories/resourceMigration",
        "events": [
          "resource.turbot.com:Create",
          "resource.turbot.com:Update"
        ]
      },
      "profileLdapSynchronization": {
        "title": "LDAP Synchronization",
        "icon": "fal-calendar-check",
        "description": "Take action when a Profile is created or is already present in a LDAP directory based on the policy setting configured for the same.\n",
        "parent": "#/resource/types/profile",
        "targets": "#/resource/types/profile",
        "category": "turbot#/control/categories/iam",
        "events": []
      },
      "profileExpiration": {
        "title": "Expiration",
        "icon": "fal-user-clock",
        "description": "Ensure that a profile is deactivated on expiration.",
        "parent": "#/resource/types/profile",
        "targets": [
          "#/resource/types/profile"
        ],
        "category": "turbot#/control/categories/resourceExpiration",
        "help": "#/help/profileExpiration",
        "events": [
          "resource.turbot.com:Create",
          "resource.turbot.com:Update"
        ],
        "defaultInterval": {
          "hours": 1
        },
        "minInterval": {
          "hours": 1
        },
        "maxInterval": {
          "hours": 2
        }
      }
    }
  },
  "build": "20210517140841605"
}